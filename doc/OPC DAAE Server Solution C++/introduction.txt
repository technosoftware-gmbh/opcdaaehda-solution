/*
 * Copyright (c) 2011-2023 Technosoftware GmbH. All rights reserved
 * Web: https://technosoftware.com 
 * 
 * The source code in this file is covered under a dual-license scenario:
 *   - Owner of a purchased license: SCLA 1.0
 *   - GPL V3: everybody else
 *
 * SCLA license terms accompanied with this source code.
 * See https://technosoftware.com/license/Source_Code_License_Agreement.pdf
 *
 * GNU General Public License as published by the Free Software Foundation;
 * version 3 of the License are accompanied with this source code.
 * See https://technosoftware.com/license/GPLv3License.txt
 *
 * This source code is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE.
 */
 
/*! \page introduction Introduction

\addindex introduction
\tableofcontents

<p>The OPC DA/AE Server Solution C++ offers a fast and easy access to the OPC Data Access (DA) and OPC Alarms&Events (AE) technology. Develop OPC DA 2.05a, 3.00 00 and OPC AE 1.00, 1.10 compliant Servers with C++ for Windows.</p>
\image html OPCDAAEServerCPPBase.png
<p>The developer can concentrate on his application and servers can be developed fast and easily without the need to spend a lot of time learning how to implement the OPC specifications. The server API is easy to use and many OPC specific functions, e.g. creating a group or adding an item to a group are handled by the framework. Even the complex asynchronous read/write handling is handled by the framework.</p>
<p>The “Framework” includes all OPC DA 2.05a, 3.00 and OPC AE 1.00, 1.10 handling and ensures the OPC compliance. It is implemented as a generic C++ based executable.</p>
<p>The “Server API” defines easy to use interface functions required for developing OPC DA/AE compliant servers. The OPC server is supplied as an EXE file with full C++ source code and the application adaptation part in 1 file. This imposes some limitations on the adaptation possibilities but makes the adaptation much easier and quicker. By using this API OPC servers can be easily implemented by adapting just a few functions, e.g. there are only 5 functions that have to be implemented for an OPC DA Server. The functions handle the configuration of the server and the read/write functionality of items.</p>
<p>The OPC DA/AE Server Solution C++ offers unique features for performance and functionality improvements of the developed OPC Server like Event Driven Mode for Device Access; Dynamic address space with items added when they are first accessed by a client and removed when they are no longer in use; Item browsing can be implemented to browse the cache or the device/database.</p>
<h3>Features:</h3>
<ul>
  <li>Servers are fully compliant to OPC DA 2.05, OPC DA 3.0, OPC AE 1.00 and OPC AE 1.10.</li>
  <li>Supports 32bit and 64bit mode.</li>
  <li>The administration of object instances can be delegated to the framework.</li>
  <li>Easy to understand and well documented sample servers show how to use the framework.</li>
  <li>Diagnostic client and diagnostic tools as executable included.</li>
  <li>Increased maintainability and usability through the use of consistent coding guidelines and standard naming conventions.</li>
  <li>Includes Documentation and Samples.</li>
  <li>No additional royalties or run-times fees required.</li>
  <li>Includes full C++ source code.</li>
</ul>
<h3>Requirements:</h3>
<p>In general Technosoftware GmbH supports all Windows platforms. But actively tested and supported are only the following platforms:</p>
<ul>
  <li>Windows 11 (32bit and 64bit)</li>
  <li>Windows 10 (32bit and 64bit)</li>
  <li>Windows Server 2016 Standard and Datacenter (32bit and 64bit) </li>
  <li>Windows Server 2012 R2 (32bit and 64bit) </li>
  <li>Microsoft Visual Studio 2022 (C++)</li>
</ul>

\section source_edition Source Edition

The OPC DA/AE Server Solution C++ is available as a source code version for Windows also including two sample servers:</p>
<ul >
  <li >DaAeSampleServer; - Combined OPC DA and OPC AE Sample Server.</li>
  <li >DaSampleServer; - OPC DA Sample Server.</li>
</ul>
<p>Both samples includes CMake files allowing to create the project filess for different Microsoft Visual Studio versions. A Microsoft Visual Studio 2022 solution is provided as reference project.</p>

\htmlonly
Go to the <a href="starting.html">next</a> section or return to the <a href="index.html">index</a>.
\endhtmlonly

*/ 