<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Technosoftware.DaAeHdaClient</name>
    </assembly>
    <members>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeAttribute">
            <summary>
            The description of an attribute supported by the server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeAttribute.ID">
            <summary>
            A unique identifier for the attribute.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeAttribute.Name">
            <summary>
            The unique name for the attribute.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeAttribute.DataType">
            <summary>
            The data type of the attribute.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeAttribute.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeAttribute.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeAttributeCollection">
            <summary>
            Contains a writable collection attribute ids.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeAttributeCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeAttributeCollection.#ctor(System.Int32[])">
            <summary>
            Creates a collection from an array.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeAttributeCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeAttributeCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeAttributeDictionary">
            <summary>
            Contains multiple lists of the attributes indexed by category.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeAttributeDictionary.#ctor">
            <summary>
            Constructs an empty dictionary.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeAttributeDictionary.#ctor(System.Int32[])">
            <summary>
            Constructs an dictionary from a set of category ids.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeAttributeDictionary.Item(System.Int32)">
            <summary>
            Gets or sets the attribute collection for the specified category. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeAttributeDictionary.Add(System.Int32,System.Int32[])">
            <summary>
            Adds an element with the provided key and value to the IDictionary.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeAttributeValue">
            <summary>
            The value of an attribute for an event source.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeAttributeValue.ID">
            <summary>
            A unique identifier for the attribute.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeAttributeValue.Value">
            <summary>
            The attribute value.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeAttributeValue.Result">
            <summary>
            The error id for the result of an operation on an property.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeAttributeValue.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeAttributeValue.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeBrowseElement">
            <summary>
            Contains a description of an element in the server address space.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeBrowseElement.Name">
            <summary>
            A descriptive name for element that is unique within a branch.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeBrowseElement.QualifiedName">
            <summary>
            The fully qualified name for the element.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeBrowseElement.NodeType">
            <summary>
            Whether the element is a source or an area.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeBrowseElement.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeBrowsePosition">
            <summary>
            Stores the state of a browse operation.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeBrowsePosition.#ctor(System.String,Technosoftware.DaAeHdaClient.Ae.TsCAeBrowseType,System.String)">
            <summary>
            Saves the parameters for an incomplete browse information.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeBrowsePosition.Finalize">
            <summary>
            The finalizer implementation.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeBrowsePosition.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeBrowsePosition.Dispose(System.Boolean)">
            <summary>
            Dispose(bool disposing) executes in two distinct scenarios.
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the
            runtime from inside the finalizer and you should not reference
            other objects. Only unmanaged resources can be disposed.
            </summary>
            <param name="disposing">If true managed and unmanaged resources can be disposed. If false only unmanaged resources.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeBrowsePosition.AreaID">
            <summary>
            The fully qualified id for the area being browsed.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeBrowsePosition.BrowseType">
            <summary>
            The type of child element being returned with the browse.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeBrowsePosition.BrowseFilter">
            <summary>
            The filter applied to the name of the elements being returned.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeBrowsePosition.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeBrowseType">
            <summary>
            The type of nodes to return during a browse.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeBrowseType.Area">
            <summary>
            Return only nodes that are process areas.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeBrowseType.Source">
            <summary>
            Return only nodes that are event sources.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeCategory">
            <summary>
            The description of an event category supported by the server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeCategory.ID">
            <summary>
            A unique identifier for the category.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeCategory.Name">
            <summary>
            The unique name for the category.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeCategory.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeCategory.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeChangeMask">
            <summary>
            The bits indicating what changes generated an event notification.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeChangeMask.ActiveState">
            <summary>
            The condition’s active state has changed.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeChangeMask.AcknowledgeState">
            <summary>
            The condition’s acknowledgment state has changed.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeChangeMask.EnableState">
            <summary>
            The condition’s enabled state has changed.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeChangeMask.Quality">
            <summary>
            The condition quality has changed.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeChangeMask.Severity">
            <summary>
            The severity level has changed.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeChangeMask.SubCondition">
            <summary>
            The condition has transitioned into a new sub-condition.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeChangeMask.Message">
            <summary>
            The event message has changed.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeChangeMask.Attribute">
            <summary>
            One or more event attributes have changed.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition">
            <summary>
            The description of an item condition state supported by the server.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition.AttributeValueCollection">
            <summary>
            Contains a read-only collection of AttributeValues.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition.AttributeValueCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition.AttributeValueCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition.AttributeValueCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition.SubConditionCollection">
            <summary>
            Contains a read-only collection of SubConditions.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition.SubConditionCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition.SubConditionCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition.SubConditionCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition.State">
            <summary>
            A bit mask indicating the current state of the condition
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition.ActiveSubCondition">
            <summary>
            The currently active sub-condition, for multi-state conditions which are active. 
            For a single-state condition, this contains the information about the condition itself.
            For inactive conditions, this value is null.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition.Quality">
            <summary>
            The quality associated with the condition state.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition.LastAckTime">
            <summary>
            The time of the most recent acknowledgment of this condition (of any sub-condition).
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local   time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition.SubCondLastActive">
            <summary>
            Time of the most recent transition into active sub-condition. 
            This is the time value which must be specified when acknowledging the condition. 
            If the condition has never been active, this value is DateTime.MinValue.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local   time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition.CondLastActive">
            <summary>
            Time of the most recent transition into the condition. 
            There may be transitions among the sub-conditions which are more recent. 
            If the condition has never been active, this value is DateTime.MinValue.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local   time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition.CondLastInactive">
            <summary>
            Time of the most recent transition out of this condition. 
            This value is DateTime.MinValue if the condition has never been active, 
            or if it is currently active for the first time and has never been exited.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local   time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition.AcknowledgerID">
            <summary>
            This is the ID of the client who last acknowledged this condition. 
            This value is null if the condition has never been acknowledged.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition.Comment">
            <summary>
            The comment string passed in by the client who last acknowledged this condition.
            This value is null if the condition has never been acknowledged.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition.SubConditions">
            <summary>
            The sub-conditions defined for this condition. 
            For single-state conditions, the collection will contain one element, the value of which describes the condition.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition.Attributes">
            <summary>
            The values of the attributes requested for this condition. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeCondition.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeConditionState">
            <summary>
            The possible states for a condition.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeConditionState.Enabled">
            <summary>
            The server is currently checking the state of the condition.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeConditionState.Active">
            <summary>
            The associated object is in the state represented by the condition.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeConditionState.Acknowledged">
            <summary>
            The condition has been acknowledged.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeEnabledStateResult">
            <summary>
            The current state of a process area or an event source.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeEnabledStateResult.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeEnabledStateResult.#ctor(System.String)">
            <summary>
            Initializes the object with an qualified name.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeEnabledStateResult.#ctor(System.String,Technosoftware.DaAeHdaClient.OpcResult)">
            <summary>
            Initializes the object with an qualified name and Result.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEnabledStateResult.Enabled">
            <summary>
            Whether if the area or source is enabled.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEnabledStateResult.EffectivelyEnabled">
            <summary>
            Whether the area or source is enabled and all areas within the hierarchy of its containing areas are enabled. 
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEnabledStateResult.Result">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEnabledStateResult.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeEnabledStateResult.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeEventAcknowledgement">
            <summary>
            Specifies the information required to acknowledge an event.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventAcknowledgement.SourceName">
            <summary>
            The name of the source that generated the event.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventAcknowledgement.ConditionName">
            <summary>
            The name of the condition that is being acknowledged.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventAcknowledgement.ActiveTime">
            <summary>
            The time that the condition or sub-condition became active.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local   time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventAcknowledgement.Cookie">
            <summary>
            The cookie for the condition passed to client during the event notification.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeEventAcknowledgement.#ctor">
            <summary>
            Constructs an acknowledgment with its default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeEventAcknowledgement.#ctor(Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification)">
            <summary>
            Constructs an acknowledgment from an event notification.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeEventAcknowledgement.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification">
            <summary>
            A notification sent by the server when an event change occurs.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.AttributeCollection">
            <summary>
            Contains a read-only collection of AttributeValues.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.AttributeCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.AttributeCollection.#ctor(System.Object[])">
            <summary>
            Creates a collection from an array of objects.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.ClientHandle">
            <summary>
            The handle of the subscription that requested the notification
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.SourceID">
            <summary>
            The identifier for the source that generated the event.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.Time">
            <summary>
            The time of the event occurrence.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.Message">
            <summary>
            Event notification message describing the event.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.EventType">
            <summary>
            The type of event that generated the notification.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.EventCategory">
            <summary>
            The vendor defined category id for the event.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.Severity">
            <summary>
            The severity of the event (1..1000).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.ConditionName">
            <summary>
            The name of the condition related to this event notification.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.SubConditionName">
            <summary>
            The name of the current sub-condition, for multi-state conditions.
            For a single-state condition, this contains the condition name.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.Attributes">
            <summary>
            The values of the attributes selected for the event subscription. 
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.ChangeMask">
            <summary>
            Indicates which properties of the condition have changed, to have caused the server to send the event notification.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.ChangeMaskAsText">
            <summary>
            Indicates which properties of the condition have changed, to have caused the server to send the event notification.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.NewState">
            <summary>
            A bit mask specifying the new state of the condition.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.NewStateAsText">
            <summary>
            A bit mask specifying the new state of the condition.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.Quality">
            <summary>
            The quality associated with the condition state.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.AckRequired">
            <summary>
            Whether the related condition requires acknowledgment of this event.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.ActiveTime">
            <summary>
            The time that the condition became active (for single-state conditions), or the
            time of the transition into the current sub-condition (for multi-state conditions). 
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.Cookie">
            <summary>
            A server defined cookie associated with the event notification.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.ActorID">
            <summary>
            For tracking events, this is the actor id for the event notification. 
            For condition-related events, this is the acknowledgment id passed by the client.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.SetAttributes(System.Object[])">
            <summary>
            Sets the list of attribute values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeEventNotification.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeEventType">
            <summary>
            The types of events that could be generated by a server.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeEventType.Simple">
            <summary>
            Events that are not tracking or condition events.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeEventType.Tracking">
            <summary>
            Events that represent occurrences which involve the interaction of the client with a target within the server.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeEventType.Condition">
            <summary>
            Events that are associated with transitions in and out states defined by the server.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeEventType.All">
            <summary>
            All events generated by the server.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeFilterType">
            <summary>
            The types of event filters that the server could support.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeFilterType.Event">
            <summary>
            The server supports filtering by event type.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeFilterType.Category">
            <summary>
            The server supports filtering by event categories.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeFilterType.Severity">
            <summary>
            The server supports filtering by severity levels.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeFilterType.Area">
            <summary>
            The server supports filtering by process area.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeFilterType.Source">
            <summary>
            The server supports filtering by event sources.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeFilterType.All">
            <summary>
            All filters supported by the server.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer">
            <summary>
            Defines functionality that is common to all OPC Alarms and Events servers.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer.GetServerStatus">
            <summary>
            Returns the current server status.
            </summary>
            <returns>The current server status.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer.CreateSubscription(Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionState)">
            <summary>
            Creates a new event subscription.
            </summary>
            <param name="state">The initial state for the subscription.</param>
            <returns>The new subscription object.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer.QueryAvailableFilters">
            <summary>
            Returns the event filters supported by the server.
            </summary>
            <returns>A bit mask of all event filters supported by the server.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer.QueryEventCategories(System.Int32)">
            <summary>       
            Returns the event categories supported by the server for the specified event types.
            </summary>
            <param name="eventType">A bit mask for the event types of interest.</param>
            <returns>A collection of event categories.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer.QueryConditionNames(System.Int32)">
            <summary>
            Returns the condition names supported by the server for the specified event categories.
            </summary>
            <param name="eventCategory">A bit mask for the event categories of interest.</param>
            <returns>A list of condition names.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer.QuerySubConditionNames(System.String)">
            <summary>
            Returns the sub-condition names supported by the server for the specified event condition.
            </summary>
            <param name="conditionName">The name of the condition.</param>
            <returns>A list of sub-condition names.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer.QueryConditionNames(System.String)">
            <summary>
            Returns the condition names supported by the server for the specified event source.
            </summary>
            <param name="sourceName">The name of the event source.</param>
            <returns>A list of condition names.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer.QueryEventAttributes(System.Int32)">
            <summary>       
            Returns the event attributes supported by the server for the specified event categories.
            </summary>
            <param name="eventCategory">The event category of interest.</param>
            <returns>A collection of event attributes.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer.TranslateToItemIDs(System.String,System.Int32,System.String,System.String,System.Int32[])">
            <summary>
            Returns the DA item ids for a set of attribute ids belonging to events which meet the specified filter criteria.
            </summary>
            <param name="sourceName">The event source of interest.</param>
            <param name="eventCategory">The id of the event category for the events of interest.</param>
            <param name="conditionName">The name of a condition within the event category.</param>
            <param name="subConditionName">The name of a sub-condition within a multi-state condition.</param>
            <param name="attributeIDs">The ids of the attributes to return item ids for.</param>
            <returns>A list of item urls for each specified attribute.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer.GetConditionState(System.String,System.String,System.Int32[])">
            <summary>
            Returns the current state information for the condition instance corresponding to the source and condition name.
            </summary>
            <param name="sourceName">The source name</param>
            <param name="conditionName">A condition name for the source.</param>
            <param name="attributeIDs">The list of attributes to return with the condition state.</param>
            <returns>The current state of the connection.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer.EnableConditionByArea(System.String[])">
            <summary>
            Places the specified process areas into the enabled state.
            </summary>
            <param name="areas">A list of fully qualified area names.</param>
            <returns>The results of the operation for each area.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer.DisableConditionByArea(System.String[])">
            <summary>
            Places the specified process areas into the disabled state.
            </summary>
            <param name="areas">A list of fully qualified area names.</param>
            <returns>The results of the operation for each area.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer.EnableConditionBySource(System.String[])">
            <summary>
            Places the specified process areas into the enabled state.
            </summary>
            <param name="sources">A list of fully qualified source names.</param>
            <returns>The results of the operation for each area.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer.DisableConditionBySource(System.String[])">
            <summary>
            Places the specified process areas into the disabled state.
            </summary>
            <param name="sources">A list of fully qualified source names.</param>
            <returns>The results of the operation for each area.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer.GetEnableStateByArea(System.String[])">
            <summary>
            Returns the enabled state for the specified process areas. 
            </summary>
            <param name="areas">A list of fully qualified area names.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer.GetEnableStateBySource(System.String[])">
            <summary>
            Returns the enabled state for the specified event sources. 
            </summary>
            <param name="sources">A list of fully qualified source names.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer.AcknowledgeCondition(System.String,System.String,Technosoftware.DaAeHdaClient.Ae.TsCAeEventAcknowledgement[])">
            <summary>
            Used to acknowledge one or more conditions in the event server.
            </summary>
            <param name="acknowledgerID">The identifier for who is acknowledging the condition.</param>
            <param name="comment">A comment associated with the acknowledgment.</param>
            <param name="conditions">The conditions being acknowledged.</param>
            <returns>A list of result id indictaing whether each condition was successfully acknowledged.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer.Browse(System.String,Technosoftware.DaAeHdaClient.Ae.TsCAeBrowseType,System.String)">
            <summary>
            Browses for all children of the specified area that meet the filter criteria.
            </summary>
            <param name="areaID">The full-qualified id for the area.</param>
            <param name="browseType">The type of children to return.</param>
            <param name="browseFilter">The expression used to filter the names of children returned.</param>
            <returns>The set of elements that meet the filter criteria.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer.Browse(System.String,Technosoftware.DaAeHdaClient.Ae.TsCAeBrowseType,System.String,System.Int32,Technosoftware.DaAeHdaClient.IOpcBrowsePosition@)">
            <summary>
            Browses for all children of the specified area that meet the filter criteria.
            </summary>
            <param name="areaID">The full-qualified id for the area.</param>
            <param name="browseType">The type of children to return.</param>
            <param name="browseFilter">The expression used to filter the names of children returned.</param>
            <param name="maxElements">The maximum number of elements to return.</param>
            <param name="position">The object used to continue the browse if the number nodes exceeds the maximum specified.</param>
            <returns>The set of elements that meet the filter criteria.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeServer.BrowseNext(System.Int32,Technosoftware.DaAeHdaClient.IOpcBrowsePosition@)">
            <summary>
            Continues browsing the server's address space at the specified position.
            </summary>
            <param name="maxElements">The maximum number of elements to return.</param>
            <param name="position">The position object used to continue a browse operation.</param>
            <returns>The set of elements that meet the filter criteria.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.ITsCAeSubscription">
            <summary>
            An interface to an object which implements a AE event subscription.
            </summary>
        </member>
        <member name="E:Technosoftware.DaAeHdaClient.Ae.ITsCAeSubscription.DataChangedEvent">
            <summary>
            An event to receive event change updates.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeSubscription.GetState">
            <summary>
            Returns the current state of the subscription.
            </summary>
            <returns>The current state of the subscription.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeSubscription.ModifyState(System.Int32,Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionState)">
            <summary>
            Changes the state of a subscription.
            </summary>
            <param name="masks">A bit mask that indicates which elements of the subscription state are changing.</param>
            <param name="state">The new subscription state.</param>
            <returns>The actual subscription state after applying the changes.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeSubscription.GetFilters">
            <summary>
            Returns the current filters for the subscription.
            </summary>
            <returns>The current filters for the subscription.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeSubscription.SetFilters(Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters)">
            <summary>
            Sets the current filters for the subscription.
            </summary>
            <param name="filters">The new filters to use for the subscription.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeSubscription.GetReturnedAttributes(System.Int32)">
            <summary>
            Returns the set of attributes to return with event notifications.
            </summary>      
            <param name="eventCategory">The specific event category for which the attributes apply.</param>
            <returns>The set of attribute ids which returned with event notifications.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeSubscription.SelectReturnedAttributes(System.Int32,System.Int32[])">
            <summary>
            Selects the set of attributes to return with event notifications.
            </summary>
            <param name="eventCategory">The specific event category for which the attributes apply.</param>
            <param name="attributeIDs">The list of attribute ids to return.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeSubscription.Refresh">
            <summary>
            Force a refresh for all active conditions and inactive, unacknowledged conditions whose event notifications match the filter of the event subscription.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.ITsCAeSubscription.CancelRefresh">
            <summary>
            Cancels an outstanding refresh request.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeDataChangedEventHandler">
            <summary>
            A delegate to receive data change updates from the server.
            </summary>
            <param name="notifications">The notifications sent by the server when a event change occurs.</param>
            <param name="refresh">TRUE if this is a subscription refresh</param>
            <param name="lastRefresh">TRUE if this is the last subscription refresh in response to a specific invocation of the Refresh method.</param>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeItemUrl">
            <summary>
            The item id and network location of a DA item associated with an event source.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeItemUrl.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeItemUrl.#ctor(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Initializes the object with an ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeItemUrl.#ctor(Technosoftware.DaAeHdaClient.OpcItem,Technosoftware.DaAeHdaClient.OpcUrl)">
            <summary>
            Initializes the object with an ItemIdentifier object and url.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeItemUrl.#ctor(Technosoftware.DaAeHdaClient.Ae.TsCAeItemUrl)">
            <summary>
            Initializes object with the specified ItemResult object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeItemUrl.Url">
            <summary>
            The url of the server that contains the item.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeItemUrl.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeItemUrlCollection">
            <summary>
            Contains a collection of item urls.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeItemUrlCollection.#ctor">
            <summary>
            Constructs an empty collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeItemUrlCollection.#ctor(Technosoftware.DaAeHdaClient.Ae.TsCAeItemUrl[])">
            <summary>
            Constructs a collection from an array of item urls.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeItemUrlCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeItemUrlCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeServer">
            <summary>
            An in-process object which provides access to AE server objects.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.SubscriptionCollection">
            <summary>
            A read-only collection of subscriptions.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.SubscriptionCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.SubscriptionCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.SubscriptionCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.SubscriptionCollection.Add(Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription)">
            <summary>
            Adds a subscription to the end of the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.SubscriptionCollection.Remove(Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription)">
            <summary>
            Removes a subscription to the from the collection.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.#ctor(Technosoftware.DaAeHdaClient.OpcFactory,Technosoftware.DaAeHdaClient.OpcUrl)">
            <summary>
            Initializes the object with a factory and a default OpcUrl.
            </summary>
            <param name="factory">The OpcFactory used to connect to remote servers.</param>
            <param name="url">The network address of a remote server.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a server by de-serializing its OpcUrl from the stream.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.AvailableFilters">
            <summary>
            The filters supported by the server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.Subscriptions">
            <summary>
            The outstanding subscriptions for the server.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.Connect(Technosoftware.DaAeHdaClient.OpcUrl,Technosoftware.DaAeHdaClient.OpcConnectData)">
            <summary>
            Connects to the server with the specified OpcUrl and credentials.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.Disconnect">
            <summary>
            Disconnects from the server and releases all network resources.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.GetServerStatus">
            <summary>
            Returns the current server status.
            </summary>
            <returns>The current server status.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.CreateSubscription(Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionState)">
            <summary>
            Creates a new event subscription.
            </summary>
            <param name="state">The initial state for the subscription.</param>
            <returns>The new subscription object.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.QueryAvailableFilters">
            <summary>
            Returns the event filters supported by the server.
            </summary>
            <returns>A bit mask of all event filters supported by the server.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.QueryEventCategories(System.Int32)">
            <summary>       
            Returns the event categories supported by the server for the specified event types.
            </summary>
            <param name="eventType">A bit mask for the event types of interest.</param>
            <returns>A collection of event categories.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.QueryConditionNames(System.Int32)">
            <summary>
            Returns the condition names supported by the server for the specified event categories.
            </summary>
            <param name="eventCategory">A bit mask for the event categories of interest.</param>
            <returns>A list of condition names.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.QuerySubConditionNames(System.String)">
            <summary>
            Returns the sub-condition names supported by the server for the specified event condition.
            </summary>
            <param name="conditionName">The name of the condition.</param>
            <returns>A list of sub-condition names.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.QueryConditionNames(System.String)">
            <summary>
            Returns the condition names supported by the server for the specified event source.
            </summary>
            <param name="sourceName">The name of the event source.</param>
            <returns>A list of condition names.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.QueryEventAttributes(System.Int32)">
            <summary>       
            Returns the event attributes supported by the server for the specified event categories.
            </summary>
            <param name="eventCategory">A bit mask for the event categories of interest.</param>
            <returns>A collection of event attributes.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.TranslateToItemIDs(System.String,System.Int32,System.String,System.String,System.Int32[])">
            <summary>
            Returns the DA item ids for a set of attribute ids belonging to events which meet the specified filter criteria.
            </summary>
            <param name="sourceName">The event source of interest.</param>
            <param name="eventCategory">The id of the event category for the events of interest.</param>
            <param name="conditionName">The name of a condition within the event category.</param>
            <param name="subConditionName">The name of a sub-condition within a multi-state condition.</param>
            <param name="attributeIDs">The ids of the attributes to return item ids for.</param>
            <returns>A list of item urls for each specified attribute.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.GetConditionState(System.String,System.String,System.Int32[])">
            <summary>
            Returns the current state information for the condition instance corresponding to the source and condition name.
            </summary>
            <param name="sourceName">The source name</param>
            <param name="conditionName">A condition name for the source.</param>
            <param name="attributeIDs">The list of attributes to return with the condition state.</param>
            <returns>The current state of the connection.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.EnableConditionByArea(System.String[])">
            <summary>
            Places the specified process areas into the enabled state.
            </summary>
            <param name="areas">A list of fully qualified area names.</param>
            <returns>The results of the operation for each area.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.DisableConditionByArea(System.String[])">
            <summary>
            Places the specified process areas into the disabled state.
            </summary>
            <param name="areas">A list of fully qualified area names.</param>
            <returns>The results of the operation for each area.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.EnableConditionBySource(System.String[])">
            <summary>
            Places the specified process areas into the enabled state.
            </summary>
            <param name="sources">A list of fully qualified source names.</param>
            <returns>The results of the operation for each area.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.DisableConditionBySource(System.String[])">
            <summary>
            Places the specified process areas into the disabled state.
            </summary>
            <param name="sources">A list of fully qualified source names.</param>
            <returns>The results of the operation for each area.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.GetEnableStateByArea(System.String[])">
            <summary>
            Returns the enabled state for the specified process areas. 
            </summary>
            <param name="areas">A list of fully qualified area names.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.GetEnableStateBySource(System.String[])">
            <summary>
            Returns the enabled state for the specified event sources. 
            </summary>
            <param name="sources">A list of fully qualified source names.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.AcknowledgeCondition(System.String,System.String,Technosoftware.DaAeHdaClient.Ae.TsCAeEventAcknowledgement[])">
            <summary>
            Used to acknowledge one or more conditions in the event server.
            </summary>
            <param name="acknowledgmentId">The identifier for who is acknowledging the condition.</param>
            <param name="comment">A comment associated with the acknowledgment.</param>
            <param name="conditions">The conditions being acknowledged.</param>
            <returns>A list of result id indicating whether each condition was successfully acknowledged.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.Browse(System.String,Technosoftware.DaAeHdaClient.Ae.TsCAeBrowseType,System.String)">
            <summary>
            Browses for all children of the specified area that meet the filter criteria.
            </summary>
            <param name="areaId">The full-qualified id for the area.</param>
            <param name="browseType">The type of children to return.</param>
            <param name="browseFilter">The expression used to filter the names of children returned.</param>
            <returns>The set of elements that meet the filter criteria.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.Browse(System.String,Technosoftware.DaAeHdaClient.Ae.TsCAeBrowseType,System.String,System.Int32,Technosoftware.DaAeHdaClient.IOpcBrowsePosition@)">
            <summary>
            Browses for all children of the specified area that meet the filter criteria.
            </summary>
            <param name="areaId">The full-qualified id for the area.</param>
            <param name="browseType">The type of children to return.</param>
            <param name="browseFilter">The expression used to filter the names of children returned.</param>
            <param name="maxElements">The maximum number of elements to return.</param>
            <param name="position">The object used to continue the browse if the number nodes exceeds the maximum specified.</param>
            <returns>The set of elements that meet the filter criteria.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.BrowseNext(System.Int32,Technosoftware.DaAeHdaClient.IOpcBrowsePosition@)">
            <summary>
            Continues browsing the server's address space at the specified position.
            </summary>
            <param name="maxElements">The maximum number of elements to return.</param>
            <param name="position">The position object used to continue a browse operation.</param>
            <returns>The set of elements that meet the filter criteria.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.SubscriptionDisposed(Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription)">
            <summary>
            Called when a subscription object is disposed.
            </summary>
            <param name="subscription"></param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeServer.EstablishSubscription(Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription)">
            <summary>
            Establishes a subscription based on the template provided.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeServerState">
            <summary>
            Current Status of an OPC AE server
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeServerState.Unknown">
            <summary>
            The server state is not known.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeServerState.Running">
            <summary>
            The server is running normally. This is the usual state for a server 
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeServerState.Failed">
            <summary>
            A vendor specific fatal error has occurred within the server. The server is no longer functioning. The recovery procedure from this situation is vendor specific. An error code of E_FAIL should generally be returned from any other server method.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeServerState.NoConfig">
            <summary>
            The server is running but has no configuration information loaded and thus cannot function normally. Note this state implies that the server needs configuration information in order to function. Servers which do not require configuration information should not return this state.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeServerState.Suspended">
            <summary>
            The server has been temporarily suspended   via some vendor specific method and is not getting or sending data. Note that Quality will be returned as OPC_QUALITY_OUT_OF_SERVICE.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeServerState.Test">
            <summary>
            The server is in Test Mode. The outputs are disconnected from the real hardware but the server will otherwise behave normally. Inputs may be real or may be simulated depending on the vendor implementation. Quality will generally be returned normally.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeServerState.CommFault">
            <summary>
            The server is in Test Mode. The outputs are disconnected from the real hardware but the server will otherwise behave normally. Inputs may be real or may be simulated depending on the vendor implementation. Quality will generally be returned normally.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeStateMask">
            <summary>
            Defines masks to be used when modifying the subscription or item state.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeStateMask.Name">
            <summary>
            A name assigned to subscription.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeStateMask.ClientHandle">
            <summary>
            The client assigned handle for the item or subscription.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeStateMask.Active">
            <summary>
            Whether the subscription is active.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeStateMask.BufferTime">
            <summary>
            The maximum rate at which the server send event notifications.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeStateMask.MaxSize">
            <summary>
            The requested maximum number of events that will be sent in a single callback.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeStateMask.KeepAlive">
            <summary>
            The maximum period between updates sent to the client.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Ae.TsCAeStateMask.All">
            <summary>
            All fields are valid.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeSubCondition">
            <summary>
            The description of an item sub-condition supported by the server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubCondition.Name">
            <summary>
            The name assigned to the sub-condition.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubCondition.Definition">
            <summary>
            A server-specific expression which defines the sub-state represented by the sub-condition.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubCondition.Severity">
            <summary>
            The severity of any event notifications generated on behalf of this sub-condition.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubCondition.Description">
            <summary>
            The text string to be included in any event notification generated on behalf of this sub-condition.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubCondition.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubCondition.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription">
            <summary>
            An in-process object which provides access to AE subscription objects.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.CategoryCollection">
            <summary>
            Contains a read-only collection category ids.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.CategoryCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.CategoryCollection.#ctor(System.Int32[])">
            <summary>
            Creates a collection containing the list of category ids.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.CategoryCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.CategoryCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.StringCollection">
            <summary>
            Contains a read-only collection of strings.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.StringCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.StringCollection.#ctor(System.String[])">
            <summary>
            Creates a collection containing the specified strings.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.StringCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.StringCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.AttributeDictionary">
            <summary>
            Contains a read-only dictionary of attribute lists indexed by category id.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.AttributeDictionary.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.AttributeDictionary.#ctor(System.Collections.Hashtable)">
            <summary>
            Constructs an dictionary from a set of category ids.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.AttributeDictionary.Item(System.Int32)">
            <summary>
            Gets or sets the attribute collection for the specified category. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.AttributeDictionary.Update(System.Int32,System.Int32[])">
            <summary>
            Adds or replaces the set of attributes associated with the category.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.AttributeDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an object by deserializing it from a stream.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.AttributeCollection">
            <summary>
            Contains a read-only collection attribute ids.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.AttributeCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.AttributeCollection.#ctor(System.Int32[])">
            <summary>
            Creates a collection containing the specified attribute ids.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.AttributeCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.AttributeCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.AttributeCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an object by deserializing it from a stream.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.#ctor(Technosoftware.DaAeHdaClient.Ae.TsCAeServer,Technosoftware.DaAeHdaClient.Ae.ITsCAeSubscription,Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionState)">
            <summary>
            Initializes object with default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.Finalize">
            <summary>
            The finalizer implementation.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.Dispose(System.Boolean)">
            <summary>
            Dispose(bool disposing) executes in two distinct scenarios.
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the
            runtime from inside the finalizer and you should not reference
            other objects. Only unmanaged resources can be disposed.
            </summary>
            <param name="disposing">If true managed and unmanaged resources can be disposed. If false only unmanaged resources.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.Server">
            <summary>
            The server that the subscription object belongs to.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.Name">
            <summary>
            A descriptive name for the subscription.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.ClientHandle">
            <summary>
            A unique identifier for the subscription assigned by the client.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.Active">
            <summary>
            Whether the subscription is monitoring for events to send to the client.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.BufferTime">
            <summary>
            The maximum rate at which the server send event notifications.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local   time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.MaxSize">
            <summary>
            The requested maximum number of events that will be sent in a single callback.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.KeepAlive">
            <summary>
            The maximum period between updates sent to the client.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.EventTypes">
            <summary>
            A mask indicating which event types should be sent to the client.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.HighSeverity">
            <summary>
            The highest severity for the events that should be sent to the client.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.LowSeverity">
            <summary>
            The lowest severity for the events that should be sent to the client.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.Categories">
            <summary>
            The event category ids monitored by this subscription.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.Areas">
            <summary>
            A list of full-qualified ids for process areas of interest - only events or conditions in these areas will be reported.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.Sources">
            <summary>
            A list of full-qualified ids for sources of interest - only events or conditions from these sources will be reported.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.Attributes">
            <summary>
            The list of attributes returned for each event category.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.GetAttributes">
            <summary>
            Returns a writable copy of the current attributes.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a server by de-serializing its OpcUrl from the stream.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.Clone">
            <summary>
            Returns an unconnected copy of the subscription with the same items.
            </summary>
        </member>
        <member name="E:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.DataChangedEvent">
            <summary>
            An event to receive data change updates.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.GetState">
            <summary>
            Returns the current state of the subscription.
            </summary>
            <returns>The current state of the subscription.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.ModifyState(System.Int32,Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionState)">
            <summary>
            Changes the state of a subscription.
            </summary>
            <param name="masks">A bit mask that indicates which elements of the subscription state are changing.</param>
            <param name="state">The new subscription state.</param>
            <returns>The actual subscription state after applying the changes.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.GetFilters">
            <summary>
            Returns the current filters for the subscription.
            </summary>
            <returns>The current filters for the subscription.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.SetFilters(Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters)">
            <summary>
            Sets the current filters for the subscription.
            </summary>
            <param name="filters">The new filters to use for the subscription.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.GetReturnedAttributes(System.Int32)">
            <summary>
            Returns the set of attributes to return with event notifications.
            </summary>
            <returns>The set of attributes to returned with event notifications.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.SelectReturnedAttributes(System.Int32,System.Int32[])">
            <summary>
            Selects the set of attributes to return with event notifications.
            </summary>
            <param name="eventCategory">The specific event category for which the attributes apply.</param>
            <param name="attributeIDs">The list of attribute ids to return.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.Refresh">
            <summary>
            Force a refresh for all active conditions and inactive, unacknowledged conditions whose event notifications match the filter of the event subscription.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.CancelRefresh">
            <summary>
            Cancels an outstanding refresh request.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.State">
            <summary>
            The current state.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscription.Filters">
            <summary>
            The current filters.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters">
            <summary>
            Describes the event filters for a subscription.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.CategoryCollection">
            <summary>
            Contains a writable collection category ids.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.CategoryCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.CategoryCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an object by deserializing it from a stream.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.CategoryCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.CategoryCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.StringCollection">
            <summary>
            Contains a writable collection of strings.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.StringCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.StringCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.StringCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.StringCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs an object by deserializing it from a stream.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.#ctor">
            <summary>
            Initializes object with default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a server by de-serializing its OpcUrl from the stream.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.EventTypes">
            <summary>
            A mask indicating which event types should be sent to the client.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.HighSeverity">
            <summary>
            The highest severity for the events that should be sent to the client.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.LowSeverity">
            <summary>
            The lowest severity for the events that should be sent to the client.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.Categories">
            <summary>
            The category ids for the events that should be sent to the client.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.Areas">
            <summary>
            A list of full-qualified ids for process areas of interest - only events or conditions in these areas will be reported.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.Sources">
            <summary>
            A list of full-qualified ids for sources of interest - only events or conditions from these sources will be reported.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionFilters.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionState">
            <summary>
            Describes the state of a subscription.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionState.Name">
            <summary>
            A descriptive name for the subscription.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionState.ClientHandle">
            <summary>
            A unique identifier for the subscription assigned by the client.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionState.Active">
            <summary>
            Whether the subscription is monitoring for events to send to the client.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionState.BufferTime">
            <summary>
            The maximum rate at which the server send event notifications.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionState.MaxSize">
            <summary>
            The requested maximum number of events that will be sent in a single callback.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionState.KeepAlive">
            <summary>
            The maximum period between updates sent to the client.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Ae.TsCAeSubscriptionState.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.ApplicationInstance">
            <summary>
            Manages the license to enable the different product versions.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">
            <summary>
            This flag suppresses the conversion to local time done during marshalling.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.ApplicationInstance.GetLogFileDirectory">
            <summary>
            Gets the log file directory and ensures it is writable.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.ApplicationInstance.EnableTrace(System.String,System.String)">
            <summary>
            Enable the trace.
            </summary>
            <param name="path">The path to use.</param>
            <param name="filename">The filename.</param>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryReader">
            <summary>
            A class that reads a complex data item from a binary buffer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryReader.#ctor">
            <summary>
            Initializes the reader with defaults.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryReader.Read(System.Byte[],Technosoftware.DaAeHdaClient.Cpx.TypeDictionary,System.String)">
            <summary>
            Reads a value of the specified type from the buffer.
            </summary>
            <param name="buffer">The buffer containing binary data to read.</param>
            <param name="dictionary">The type dictionary that contains a complex type identified with the type name.</param>
            <param name="typeName">The name of the type that describes the data.</param>
            <returns>A structured represenation of the data in the buffer.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryReader.ReadType(Technosoftware.DaAeHdaClient.Cpx.TsCCpxContext,Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexValue@)">
            <summary>
            Reads an instance of a type from the buffer,
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryReader.ReadField(Technosoftware.DaAeHdaClient.Cpx.TsCCpxContext,Technosoftware.DaAeHdaClient.Cpx.FieldType,System.Int32,System.Collections.ArrayList,System.Object@,System.Byte@)">
            <summary>
            Reads the value contained in a field from the buffer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryReader.ReadField(Technosoftware.DaAeHdaClient.Cpx.TsCCpxContext,Technosoftware.DaAeHdaClient.Cpx.TypeReference,System.Object@)">
            <summary>
            Reads a complex type from the buffer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryReader.ReadField(Technosoftware.DaAeHdaClient.Cpx.TsCCpxContext,Technosoftware.DaAeHdaClient.Cpx.Integer,System.Object@)">
            <summary>
            Reads a integer value from the buffer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryReader.ReadField(Technosoftware.DaAeHdaClient.Cpx.TsCCpxContext,Technosoftware.DaAeHdaClient.Cpx.FloatingPoint,System.Object@)">
            <summary>
            Reads a floating point value from the buffer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryReader.ReadField(Technosoftware.DaAeHdaClient.Cpx.TsCCpxContext,Technosoftware.DaAeHdaClient.Cpx.CharString,System.Int32,System.Collections.ArrayList,System.Object@)">
            <summary>
            Reads a char string value from the buffer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryReader.ReadField(Technosoftware.DaAeHdaClient.Cpx.TsCCpxContext,Technosoftware.DaAeHdaClient.Cpx.BitString,System.Object@,System.Byte@)">
            <summary>
            Reads a bit string value from the buffer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryReader.ReadArrayField(Technosoftware.DaAeHdaClient.Cpx.TsCCpxContext,Technosoftware.DaAeHdaClient.Cpx.FieldType,System.Int32,System.Collections.ArrayList,System.Object@)">
            <summary>
            Reads a field containing an array of values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryReader.ReadReference(Technosoftware.DaAeHdaClient.Cpx.TsCCpxContext,Technosoftware.DaAeHdaClient.Cpx.FieldType,System.Int32,System.Collections.ArrayList,System.String)">
            <summary>
            Finds the integer value referenced by the field name.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryStream">
            <summary>
            A class that reads a complex data item from a binary buffer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryStream.#ctor">
            <summary>
            Initializes the binary stream with defaults.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryStream.IsArrayField(Technosoftware.DaAeHdaClient.Cpx.FieldType)">
            <summary>
            Determines if a field contains an array of values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryStream.GetTerminator(Technosoftware.DaAeHdaClient.Cpx.TsCCpxContext,Technosoftware.DaAeHdaClient.Cpx.FieldType)">
            <summary>
            Returns the termininator for the field.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryStream.InitializeContext(System.Byte[],Technosoftware.DaAeHdaClient.Cpx.TypeDictionary,System.String)">
            <summary>
            Looks up the type name in the dictionary and initializes the context.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryStream.SwapBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Swaps the order of bytes in the buffer.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryWriter">
            <summary>
            A class that writes a complex data item to a binary buffer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryWriter.Write(Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexValue,Technosoftware.DaAeHdaClient.Cpx.TypeDictionary,System.String)">
            <summary>
            Writes a complex value to a buffer.
            </summary>
            <param name="namedValue">The structured value to write to the buffer.</param>
            <param name="dictionary">The type dictionary that contains a complex type identified with the type name.</param>
            <param name="typeName">The name of the type that describes the data.</param>
            <returns>A buffer containing the binary form of the complex type.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryWriter.WriteType(Technosoftware.DaAeHdaClient.Cpx.TsCCpxContext,Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexValue)">
            <summary>
            Writes an instance of a type to the buffer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryWriter.WriteField(Technosoftware.DaAeHdaClient.Cpx.TsCCpxContext,Technosoftware.DaAeHdaClient.Cpx.FieldType,System.Int32,Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexValue[],System.Object,System.Byte@)">
            <summary>
            Writes the value contained in a field to the buffer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryWriter.WriteField(Technosoftware.DaAeHdaClient.Cpx.TsCCpxContext,Technosoftware.DaAeHdaClient.Cpx.TypeReference,System.Object)">
            <summary>
            Writes a complex type from to the buffer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryWriter.WriteField(Technosoftware.DaAeHdaClient.Cpx.TsCCpxContext,Technosoftware.DaAeHdaClient.Cpx.Integer,System.Object)">
            <summary>
            Writes a integer value from to the buffer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryWriter.WriteField(Technosoftware.DaAeHdaClient.Cpx.TsCCpxContext,Technosoftware.DaAeHdaClient.Cpx.FloatingPoint,System.Object)">
            <summary>
            Writes a integer value from to the buffer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryWriter.WriteField(Technosoftware.DaAeHdaClient.Cpx.TsCCpxContext,Technosoftware.DaAeHdaClient.Cpx.CharString,System.Int32,Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexValue[],System.Object)">
            <summary>
            Writes a char string value to the buffer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryWriter.WriteField(Technosoftware.DaAeHdaClient.Cpx.TsCCpxContext,Technosoftware.DaAeHdaClient.Cpx.BitString,System.Object,System.Byte@)">
            <summary>
            Writes a bit string value to the buffer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryWriter.WriteArrayField(Technosoftware.DaAeHdaClient.Cpx.TsCCpxContext,Technosoftware.DaAeHdaClient.Cpx.FieldType,System.Int32,Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexValue[],System.Object)">
            <summary>
            Reads a field containing an array of values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxBinaryWriter.WriteReference(Technosoftware.DaAeHdaClient.Cpx.TsCCpxContext,Technosoftware.DaAeHdaClient.Cpx.FieldType,System.Int32,Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexValue[],System.String,System.Int32)">
            <summary>
            Finds the integer value referenced by the field name.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem">
            <summary>
            A class that contains complex data related properties for an item.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.CPX_BRANCH">
            <summary>
            The reserved name for complex data branch in the server namespace.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.CPX_DATA_FILTERS">
            <summary>
            The reserved name for the data filters branch in the CPX namespace.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.CPX_PROPERTIES">
            <summary>
            The set of all complex data item properties.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.#ctor">
            <summary>
            Initializes the object with the default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.#ctor(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Initializes the object from an item identifier.
            </summary>
            <param name="itemID">The item id.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.Name">
            <summary>
            The name of the item in the server address space.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.TypeSystemID">
            <summary>
            The type system id for the complex item.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.DictionaryID">
            <summary>
            The dictionary id for the complex item.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.TypeID">
            <summary>
            The type id for the complex item.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.DictionaryItemID">
            <summary>
            The id of the item containing the dictionary for the item.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.TypeItemID">
            <summary>
            The id of the item containing the type description for the item.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.UnconvertedItemID">
            <summary>
            The id of the unconverted version of the item. Only valid for items which apply type conversions to the item. 
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.UnfilteredItemID">
            <summary>
            The id of the unfiltered version of the item. Only valid for items apply data filters to the item. 
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.DataFilterItem">
            <summary>
            The item used to create new data filters for the complex data item (null is item does not support it). 
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.DataFilterValue">
            <summary>
            The current data filter value. Only valid for items apply data filters to the item.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.ToString">
            <summary>
            Returns an appropriate string representation of the object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.GetRootItem">
            <summary>
            Returns the root complex data item for the object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.Update(Technosoftware.DaAeHdaClient.Da.TsCDaServer)">
            <summary>
            Reads the current complex data item properties from the server.
            </summary>
            <param name="server">The server object</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.GetTypeConversions(Technosoftware.DaAeHdaClient.Da.TsCDaServer)">
            <summary>
            Fetches the set of type conversions from the server.
            </summary>
            <param name="server">The server object</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.GetDataFilters(Technosoftware.DaAeHdaClient.Da.TsCDaServer)">
            <summary>
            Fetches the set of data filters from the server.
            </summary>
            <param name="server">The server object</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.CreateDataFilter(Technosoftware.DaAeHdaClient.Da.TsCDaServer,System.String,System.String)">
            <summary>
            Creates a new data filter.
            </summary>
            <param name="server">The server object</param>
            <param name="filterName">The name of the filter</param>
            <param name="filterValue">The value of the filter</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.UpdateDataFilter(Technosoftware.DaAeHdaClient.Da.TsCDaServer,System.String)">
            <summary>
            Updates a data filter.
            </summary>
            <param name="server">The server object</param>
            <param name="filterValue">The value of the filter</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.GetTypeDictionary(Technosoftware.DaAeHdaClient.Da.TsCDaServer)">
            <summary>
            Fetches the type dictionary for the item.
            </summary>
            <param name="server">The server object</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.GetTypeDescription(Technosoftware.DaAeHdaClient.Da.TsCDaServer)">
            <summary>
            Fetches the type description for the item.
            </summary>
            <param name="server">The server object</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.GetDataFilterItem(Technosoftware.DaAeHdaClient.Da.TsCDaServer)">
            <summary>
            Fetches the item id for the data filters items and stores it in the internal cache.
            </summary>
            <param name="server">The server object</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.Clear">
            <summary>
            Sets all object properties to their default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.Init(Technosoftware.DaAeHdaClient.Da.TsCDaBrowseElement)">
            <summary>
            Initializes the object from a browse element.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexItem.Init(Technosoftware.DaAeHdaClient.Da.TsCDaItemProperty[])">
            <summary>
            Initializes the object from a list of properties.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexTypeCache">
            <summary>
            A class that caches properties of complex data items.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexTypeCache._server">
            <summary>
            The active server for the application.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexTypeCache._items">
            <summary>
            A cache of item properties fetched from the active server.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexTypeCache._dictionaries">
            <summary>
            A cache of type dictionaries fetched from the active server.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexTypeCache._descriptions">
            <summary>
            A cache of type descriptions fetched from the active server.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexTypeCache.#ctor">
            <summary>
            Initializes the complex type cache with defaults.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexTypeCache.Server">
            <summary>
            Get or sets the server to use for the cache.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexTypeCache.GetComplexItem(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Returns the complex item for the specified item id.
            </summary>
            <param name="itemID">The item id.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexTypeCache.GetComplexItem(Technosoftware.DaAeHdaClient.Da.TsCDaBrowseElement)">
            <summary>
            Returns the complex item for the specified item browse element.
            </summary>
            <param name="element">The item browse element.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexTypeCache.GetTypeDictionary(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Fetches the type dictionary for the item.
            </summary>
            <param name="itemID">The item id.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexTypeCache.GetTypeDescription(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Fetches the type description for the item.
            </summary>
            <param name="itemID">The item id.</param>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexValue">
            <summary>
            Stores a value with an associated name and/or type.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexValue.Name">
            <summary>
            The name of the value.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexValue.Type">
            <summary>
            The complex or simple data type of the value.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TsCCpxComplexValue.Value">
            <summary>
            The actual value.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.TsCCpxContext">
            <summary>
            Stores the current serialization context.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.TsCCpxInvalidDataInBufferException">
            <summary>
            Raised if the data in buffer is not consistent with the schema.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxInvalidDataInBufferException.#ctor">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxInvalidDataInBufferException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxInvalidDataInBufferException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxInvalidDataInBufferException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.TsCCpxInvalidDataToWriteException">
            <summary>
            Raised if the data in buffer is not consistent with the schema.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxInvalidDataToWriteException.#ctor">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxInvalidDataToWriteException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxInvalidDataToWriteException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxInvalidDataToWriteException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.TsCCpxInvalidSchemaException">
            <summary>
            Raised if the schema contains errors or inconsistencies.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxInvalidSchemaException.#ctor">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxInvalidSchemaException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxInvalidSchemaException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Cpx.TsCCpxInvalidSchemaException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.TypeDictionary">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TypeDictionary.TypeDescription">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TypeDictionary.DictionaryName">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TypeDictionary.DefaultBigEndian">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TypeDictionary.DefaultStringEncoding">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TypeDictionary.DefaultCharWidth">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TypeDictionary.DefaultFloatFormat">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.TypeDescription">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TypeDescription.Field">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TypeDescription.TypeID">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TypeDescription.DefaultBigEndian">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TypeDescription.DefaultBigEndianSpecified">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TypeDescription.DefaultStringEncoding">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TypeDescription.DefaultCharWidth">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TypeDescription.DefaultCharWidthSpecified">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TypeDescription.DefaultFloatFormat">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.FieldType">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.FieldType.Name">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.FieldType.Format">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.FieldType.Length">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.FieldType.LengthSpecified">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.FieldType.ElementCount">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.FieldType.ElementCountSpecified">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.FieldType.ElementCountRef">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.FieldType.FieldTerminator">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.TypeReference">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.TypeReference.TypeID">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.CharString">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.CharString.CharWidth">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.CharString.CharWidthSpecified">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.CharString.StringEncoding">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.CharString.CharCountRef">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.Unicode">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.Ascii">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.FloatingPoint">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.FloatingPoint.FloatFormat">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.Double">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.Single">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.Integer">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Cpx.Integer.Signed">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.UInt64">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.UInt32">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.UInt16">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.UInt8">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.Int64">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.Int32">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.Int16">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.Int8">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Cpx.BitString">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsDaAccessRights">
            <summary>
                <para>Defines possible item access rights.</para>
                <para align="left">Indicates if this item is read only, write only or read/write.
                This is NOT related to security but rather to the nature of the underlying
                hardware.</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaAccessRights.Unknown">
            <summary>The access rights for this item are server.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaAccessRights.Readable">
            <summary>The client can read the data item's value.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaAccessRights.Writable">
            <summary>The client can change the data item's value.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaAccessRights.ReadWritable">
            <summary>The client can read and change the data item's value.</summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaBrowsePosition">
            <summary>
            Stores the state of a browse operation.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaBrowsePosition.#ctor(Technosoftware.DaAeHdaClient.OpcItem,Technosoftware.DaAeHdaClient.Da.TsCDaBrowseFilters)">
            <summary>
            Saves the parameters for an incomplete browse information.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaBrowsePosition.Dispose">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaBrowsePosition.ItemID">
            <summary>
            The item identifier of the branch being browsed.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaBrowsePosition.Filters">
            <summary>
            The filters applied during the browse operation.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaBrowsePosition.MaxElementsReturned">
            <summary>
            The maximum number of elements that may be returned in a single browse.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaBrowsePosition.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseElement">
            <summary>
            Contains a description of an element in the server address space.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseElement.Name">
            <summary>
            A descriptive name for element that is unique within a branch.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseElement.ItemName">
            <summary>
            The primary identifier for the element within the server namespace.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseElement.ItemPath">
            <summary>
            An secondary identifier for the element within the server namespace.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseElement.IsItem">
            <summary>
            Whether the element refers to an item with data that can be accessed.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseElement.HasChildren">
            <summary>
            Whether the element has children.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseElement.Properties">
            <summary>
            The set of properties for the element.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseElement.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseFilter">
            <summary>
            The type of browse elements to return during a browse.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseFilter.All">
            <summary>
            Return all types of browse elements.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseFilter.Branch">
            <summary>
            Return only elements that contain other elements.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseFilter.Item">
            <summary>
            Return only elements that represent items.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseFilters">
            <summary>
            Defines a set of filters to apply when browsing.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseFilters.MaxElementsReturned">
            <summary>
            The maximum number of elements to return. Zero means no limit.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseFilters.BrowseFilter">
            <summary>
            The type of element to return.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseFilters.ElementNameFilter">
            <summary>
            An expression used to match the name of the element.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseFilters.VendorFilter">
            <summary>
            A filter which has semantics that defined by the server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseFilters.ReturnAllProperties">
            <summary>
            Whether all supported properties to return with each element.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseFilters.PropertyIDs">
            <summary>
            A list of names of the properties to return with each element.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseFilters.ReturnPropertyValues">
            <summary>
            Whether property values should be returned with the properties.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaBrowseFilters.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsDaEuType">
            <summary><para>Defines possible item engineering unit types</para></summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaEuType.NoEnum">
            <summary>No engineering unit information available</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaEuType.Analog">
            <summary>
            Analog engineering unit - will contain a SAFE ARRAY of exactly two doubles
            (VT_ARRAY | VT_R8) corresponding to the LOW and HI EU range.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaEuType.Enumerated">
            <summary>
            Enumerated engineering unit - will contain a SAFE ARRAY of strings (VT_ARRAY |
            VT_BSTR) which contains a list of strings (Example: “OPEN”, “CLOSE”, “IN TRANSIT”,
            etc.) corresponding to sequential numeric values (0, 1, 2, etc.)
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.ITsDaServer">
            <summary>
            Defines functionality that is common to all OPC Data Access servers.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsDaServer.GetResultFilters">
            <summary>
            Returns the filters applied by the server to any item results returned to the client.
            </summary>
            <returns>A bit mask indicating which fields should be returned in any item results.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsDaServer.SetResultFilters(System.Int32)">
            <summary>
            Sets the filters applied by the server to any item results returned to the client.
            </summary>
            <param name="filters">A bit mask indicating which fields should be returned in any item results.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsDaServer.GetServerStatus">
            <summary>
            Returns the current server status.
            </summary>
            <returns>The current server status.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsDaServer.Read(Technosoftware.DaAeHdaClient.Da.TsCDaItem[])">
            <summary>
            Reads the current values for a set of items. 
            </summary>
            <param name="items">The set of items to read.</param>
            <returns>The results of the read operation for each item.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsDaServer.Write(Technosoftware.DaAeHdaClient.Da.TsCDaItemValue[])">
            <summary>
            Writes the value, quality and timestamp for a set of items.
            </summary>
            <param name="values">The set of item values to write.</param>
            <returns>The results of the write operation for each item.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsDaServer.CreateSubscription(Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionState)">
            <summary>
            Creates a new subscription.
            </summary>
            <param name="state">The initial state of the subscription.</param>
            <returns>The new subscription object.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsDaServer.CancelSubscription(Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription)">
            <summary>
            Cancels a subscription and releases all resources allocated for it.
            </summary>
            <param name="subscription">The subscription to cancel.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsDaServer.Browse(Technosoftware.DaAeHdaClient.OpcItem,Technosoftware.DaAeHdaClient.Da.TsCDaBrowseFilters,Technosoftware.DaAeHdaClient.Da.TsCDaBrowsePosition@)">
            <summary>
            Fetches the children of a branch that meet the filter criteria.
            </summary>
            <param name="itemId">The identifier of branch which is the target of the search.</param>
            <param name="filters">The filters to use to limit the set of child elements returned.</param>
            <param name="position">An object used to continue a browse that could not be completed.</param>
            <returns>The set of elements found.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsDaServer.BrowseNext(Technosoftware.DaAeHdaClient.Da.TsCDaBrowsePosition@)">
            <summary>
            Continues a browse operation with previously specified search criteria.
            </summary>
            <param name="position">An object containing the browse operation state information.</param>
            <returns>The set of elements found.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsDaServer.GetProperties(Technosoftware.DaAeHdaClient.OpcItem[],Technosoftware.DaAeHdaClient.Da.TsDaPropertyID[],System.Boolean)">
            <summary>
            Returns the item properties for a set of items.
            </summary>
            <param name="itemIds">A list of item identifiers.</param>
            <param name="propertyIDs">A list of properties to fetch for each item.</param>
            <param name="returnValues">Whether the property values should be returned with the properties.</param>
            <returns>A list of properties for each item.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription">
            <summary>
            A subscription for a set of items on a single OPC server.
            </summary>
        </member>
        <member name="E:Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription.DataChangedEvent">
            <summary>
            An event to receive data change updates.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription.GetResultFilters">
            <summary>
            Returns the filters applied by the server to any item results returned to the client.
            </summary>
            <returns>A bit mask indicating which fields should be returned in any item results.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription.SetResultFilters(System.Int32)">
            <summary>
            Sets the filters applied by the server to any item results returned to the client.
            </summary>
            <param name="filters">A bit mask indicating which fields should be returned in any item results.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription.GetState">
            <summary>
            Returns the current state of the subscription.
            </summary>
            <returns>The current state of the subscription.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription.ModifyState(System.Int32,Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionState)">
            <summary>
            Changes the state of a subscription.
            </summary>
            <param name="masks">A bit mask that indicates which elements of the subscription state are changing.</param>
            <param name="state">The new subscription state.</param>
            <returns>The actual subscription state after applying the changes.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription.AddItems(Technosoftware.DaAeHdaClient.Da.TsCDaItem[])">
            <summary>
            Adds items to the subscription.
            </summary>
            <param name="items">The set of items to add to the subscription.</param>
            <returns>The results of the add item operation for each item.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription.ModifyItems(System.Int32,Technosoftware.DaAeHdaClient.Da.TsCDaItem[])">
            <summary>
            Modifies the state of items in the subscription
            </summary>
            <param name="masks">Specifies which item state parameters are being modified.</param>
            <param name="items">The new state for each item.</param>
            <returns>The results of the modify item operation for each item.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription.RemoveItems(Technosoftware.DaAeHdaClient.OpcItem[])">
            <summary>
            Removes items from the subscription.
            </summary>
            <param name="items">The identifiers (i.e. server handles) for the items being removed.</param>
            <returns>The results of the remove item operation for each item.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription.Read(Technosoftware.DaAeHdaClient.Da.TsCDaItem[])">
            <summary>
            Reads the values for a set of items in the subscription.
            </summary>
            <param name="items">The identifiers (i.e. server handles) for the items being read.</param>
            <returns>The value for each of items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription.Write(Technosoftware.DaAeHdaClient.Da.TsCDaItemValue[])">
            <summary>
            Writes the value, quality and timestamp for a set of items in the subscription.
            </summary>
            <param name="items">The item values to write.</param>
            <returns>The results of the write operation for each item.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription.Read(Technosoftware.DaAeHdaClient.Da.TsCDaItem[],System.Object,Technosoftware.DaAeHdaClient.Da.TsCDaReadCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Begins an asynchronous read operation for a set of items.
            </summary>
            <param name="items">The set of items to read (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription.Write(Technosoftware.DaAeHdaClient.Da.TsCDaItemValue[],System.Object,Technosoftware.DaAeHdaClient.Da.TsCDaWriteCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Begins an asynchronous write operation for a set of items.
            </summary>
            <param name="items">The set of item values to write (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription.Cancel(Technosoftware.DaAeHdaClient.IOpcRequest,Technosoftware.DaAeHdaClient.Da.TsCDaCancelCompleteEventHandler)">
            <summary>
            Cancels an asynchronous read or write operation.
            </summary>
            <param name="request">The object returned from the BeginRead or BeginWrite request.</param>
            <param name="callback">The function to invoke when the cancel completes.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription.Refresh">
            <summary>
            Causes the server to send a data changed notification for all active items. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription.Refresh(System.Object,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Causes the server to send a data changed notification for all active items. 
            </summary>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription.SetEnabled(System.Boolean)">
            <summary>
            Enables or disables data change notifications from the server.
            </summary>
            <param name="enabled">Whether data change notifications are enabled.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription.GetEnabled">
            <summary>
            Checks whether data change notifications from the server are enabled.
            </summary>
            <returns>Whether data change notifications are enabled.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaDataChangedEventHandler">
            <summary>
            A delegate to receive data change updates from the server.
            </summary>
            <param name="subscriptionHandle">
            A unique identifier for the subscription assigned by the client. If the parameter
            <see cref="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionState.ClientHandle">ClientHandle</see> is not defined this
            parameter is empty.
            </param>
            <param name="requestHandle">
            An identifier for the request assigned by the caller. This parameter is empty if
            the corresponding parameter in the calls Read(), Write() or Refresh() is not    defined.
            Can be used to Cancel an outstanding operation.
            </param>
            <param name="values">
            <para class="MsoBodyText" style="MARGIN: 1pt 0in">The set of changed values.</para>
            <para class="MsoBodyText" style="MARGIN: 1pt 0in">Each value will always have
            item’s ClientHandle field specified.</para>
            </param>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaReadCompleteEventHandler">
            <summary>
            A delegate to receive asynchronous read completed notifications.
            </summary>
            <param name="requestHandle">
            An identifier for the request assigned by the caller. This parameter    is empty if
            the corresponding parameter in the calls    Read(), Write() or Refresh() is not defined.
            Can be used to Cancel an    outstanding operation.
            </param>
            <param name="results">The results of    the last asynchronous read operation.</param>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaWriteCompleteEventHandler">
            <summary>
            A delegate to receive asynchronous write    completed notifications.
            </summary>
            <param name="requestHandle">
            An identifier for the request assigned by the caller. This parameter is empty if
            the corresponding parameter in the calls Read(), Write() or Refresh() is not defined.
            Can be used to Cancel an outstanding operation.
            </param>
            <param name="results">The results of the last asynchronous write operation.</param>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaCancelCompleteEventHandler">
            <summary>
            A delegate to receive asynchronous cancel completed notifications.
            </summary>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaItem">
            <summary>
            Describes how an item in the server address space should be accessed. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItem.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItem.#ctor(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Initializes object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItem.#ctor(Technosoftware.DaAeHdaClient.Da.TsCDaItem)">
            <summary>
            Initializes object with the specified Item object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItem.ReqType">
            <summary>
            The data type to use when returning the item value.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItem.MaxAge">
            <summary>
            The oldest (in milliseconds) acceptable cached value when reading an item.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItem.MaxAgeSpecified">
            <summary>
            Whether the Max Age is specified.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItem.Active">
            <summary>
            Whether the server should send data change updates. 
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItem.ActiveSpecified">
            <summary>
            Whether the Active state is specified.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItem.Deadband">
            <summary>
            The minimum percentage change required to trigger a data update for an item. 
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItem.DeadbandSpecified">
            <summary>
            Whether the Deadband is specified.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItem.SamplingRate">
            <summary>
            How frequently the server should sample the item value.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItem.SamplingRateSpecified">
            <summary>
            Whether the Sampling Rate is specified.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItem.EnableBuffering">
            <summary>
            Whether the server should buffer multiple data changes between data updates.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItem.EnableBufferingSpecified">
            <summary>
            Whether the Enable Buffering is specified.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection">
            <summary>
            A collection of items.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.#ctor(Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection)">
            <summary>
            Initializes object with the specified ResultCollection object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.Item(System.Int32)">
            <summary>
             Gets the item at the specified index.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.Item(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Gets the first item with the specified item id.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.CopyTo(Technosoftware.DaAeHdaClient.Da.TsCDaItem[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.Insert(System.Int32,Technosoftware.DaAeHdaClient.Da.TsCDaItem)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.Remove(Technosoftware.DaAeHdaClient.Da.TsCDaItem)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.Contains(Technosoftware.DaAeHdaClient.Da.TsCDaItem)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.IndexOf(Technosoftware.DaAeHdaClient.Da.TsCDaItem)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemCollection.Add(Technosoftware.DaAeHdaClient.Da.TsCDaItem)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaItemProperty">
            <summary>
            Contains a description of a single item property.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemProperty.ID">
            <summary>
            The property identifier.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemProperty.Description">
            <summary>
            A short description of the property.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemProperty.DataType">
            <summary>
            The data type of the property.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemProperty.Value">
            <summary>
            The value of the property.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemProperty.ItemName">
            <summary>
            The primary identifier for the property if it is directly accessible as an item.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemProperty.ItemPath">
            <summary>
            The secondary identifier for the property if it is directly accessible as an item.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemProperty.Result">
            <summary>
            The <see cref="T:Technosoftware.DaAeHdaClient.OpcResult" /> object with the result of an operation on an property.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemProperty.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemProperty.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaItemPropertyCollection">
            <summary>
            A list of properties for a single item.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemPropertyCollection.#ctor">
            <summary>
            Initializes the object with its default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemPropertyCollection.#ctor(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Initializes the object with the specified item identifier.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemPropertyCollection.#ctor(Technosoftware.DaAeHdaClient.OpcItem,Technosoftware.DaAeHdaClient.OpcResult)">
            <summary>
            Initializes the object with the specified item identifier and result.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemPropertyCollection.ItemName">
            <summary>
            The primary identifier for the item within the server namespace.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemPropertyCollection.ItemPath">
            <summary>
            An secondary identifier for the item within the server namespace.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemPropertyCollection.Item(System.Int32)">
            <summary>
            Accesses the items at the specified index.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemPropertyCollection.Result">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemPropertyCollection.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemPropertyCollection.CopyTo(Technosoftware.DaAeHdaClient.Da.TsCDaItemProperty[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemPropertyCollection.Insert(System.Int32,Technosoftware.DaAeHdaClient.Da.TsCDaItemProperty)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemPropertyCollection.Remove(Technosoftware.DaAeHdaClient.Da.TsCDaItemProperty)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemPropertyCollection.Contains(Technosoftware.DaAeHdaClient.Da.TsCDaItemProperty)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemPropertyCollection.IndexOf(Technosoftware.DaAeHdaClient.Da.TsCDaItemProperty)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemPropertyCollection.Add(Technosoftware.DaAeHdaClient.Da.TsCDaItemProperty)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaItemResult">
            <summary>
            The results of an operation on a uniquely identifiable item.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemResult.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemResult.#ctor(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Initializes the object with an ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemResult.#ctor(Technosoftware.DaAeHdaClient.OpcItem,Technosoftware.DaAeHdaClient.OpcResult)">
            <summary>
            Initializes the object with an ItemIdentifier object and Result.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemResult.#ctor(Technosoftware.DaAeHdaClient.Da.TsCDaItem)">
            <summary>
            Initializes the object with an Item object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemResult.#ctor(Technosoftware.DaAeHdaClient.Da.TsCDaItem,Technosoftware.DaAeHdaClient.OpcResult)">
            <summary>
            Initializes the object with an Item object and Result.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemResult.#ctor(Technosoftware.DaAeHdaClient.Da.TsCDaItemResult)">
            <summary>
            Initializes object with the specified ItemResult object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemResult.Result">
            <summary>
            The error id for the result of an operation on an property.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemResult.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaItemValue">
            <summary>
            Contains the value for a single item.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemValue.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemValue.#ctor(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Initializes the object with and ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemValue.#ctor(System.String)">
            <summary>
            Initializes the object with the specified item name.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemValue.#ctor(Technosoftware.DaAeHdaClient.Da.TsCDaItemValue)">
            <summary>
            Initializes object with the specified ItemValue object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemValue.Value">
            <summary>
            The item value.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemValue.Quality">
            <summary>
            The quality of the item value.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemValue.QualitySpecified">
            <summary>
            Whether the quality is specified.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemValue.Timestamp">
            <summary>
            The timestamp for the item value.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemValue.TimestampSpecified">
            <summary>
            Whether the timestamp is specified.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemValue.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaItemValueResult">
            <summary>
            The results of an operation on a uniquely identifiable item value.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemValueResult.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemValueResult.#ctor(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Initializes the object with an ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemValueResult.#ctor(Technosoftware.DaAeHdaClient.Da.TsCDaItemValue)">
            <summary>
            Initializes the object with an ItemValue object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemValueResult.#ctor(Technosoftware.DaAeHdaClient.Da.TsCDaItemValueResult)">
            <summary>
            Initializes object with the specified ItemValueResult object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemValueResult.#ctor(System.String,Technosoftware.DaAeHdaClient.OpcResult)">
            <summary>
            Initializes the object with the specified item name and result code.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemValueResult.#ctor(System.String,Technosoftware.DaAeHdaClient.OpcResult,System.String)">
            <summary>
            Initializes the object with the specified item name, result code and diagnostic info.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemValueResult.#ctor(Technosoftware.DaAeHdaClient.OpcItem,Technosoftware.DaAeHdaClient.OpcResult)">
            <summary>
            Initialize object with the specified ItemIdentifier and result code.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaItemValueResult.#ctor(Technosoftware.DaAeHdaClient.OpcItem,Technosoftware.DaAeHdaClient.OpcResult,System.String)">
            <summary>
            Initializes the object with the specified ItemIdentifier, result code and diagnostic info.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemValueResult.Result">
            <summary>
            The error id for the result of an operation on an property.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaItemValueResult.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsDaLimitBits">
            <summary>
                <para>Defines the possible limit status bits.</para>
                <para>The Limit Field is valid regardless of the Quality and Substatus. In some
                cases such as Sensor Failure it can provide useful diagnostic information.</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaLimitBits.None">
            <summary>The value is free to move up or down</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaLimitBits.Low">
            <summary>The value has ‘pegged’ at some lower limit</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaLimitBits.High">
            <summary>The value has ‘pegged’ at some high limit</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaLimitBits.Constant">
            <summary>The value is a constant and cannot move</summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsDaProperty">
            <summary>
            Defines identifiers for well-known properties.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.DATATYPE">
            <summary><para>Item Canonical DataType</para></summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.VALUE">
            <summary><para>Item Value</para></summary>
            <remarks>
            Note the type of value returned is as indicated by the "Item Canonical DataType"
            and depends on the item. This will behave like a read from DEVICE.
            </remarks>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.QUALITY">
            <summary><para>Item Quality</para></summary>
            <remarks>(OPCQUALITY stored in an I2). This will behave like a read from DEVICE.</remarks>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.TIMESTAMP">
            <summary><para>Item Timestamp</para></summary>
            <remarks>
            (will be converted from FILETIME). This will behave like a read from
            DEVICE.
            </remarks>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.ACCESSRIGHTS">
            <summary><para>Item Access Rights</para></summary>
            <remarks>(OPCACCESSRIGHTS stored in an I4)</remarks>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.SCANRATE">
            <summary><para>Server Scan Rate</para></summary>
            <remarks>
            In Milliseconds. This represents the fastest rate at which the server could
            obtain data from the underlying data source. The nature of this source is not defined
            but is typically a DCS system, a SCADA system, a PLC via a COMM port or network, a
            Device Network, etc. This value generally represents the ‘best case’ fastest
            RequestedUpdateRate which could be used if this item were added to an OPCGroup.<br/>
            The accuracy of this value (the ability of the server to attain ‘best case’
            performance) can be greatly affected by system load and other factors.
            </remarks>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.EUTYPE">
            <remarks>
            	<para>Indicate the type of Engineering Units (EU) information (if any) contained in
                EUINFO.</para>
            	<list type="bullet">
            		<item>
                        0 - No EU information available (EUINFO will be VT_EMPTY).
                    </item>
            		<item>
                        1 - Analog - EUINFO will contain a SAFEARRAY of exactly two doubles
                        (VT_ARRAY | VT_R8) corresponding to the LOW and HI EU range.
                    </item>
            		<item>2 - Enumerated - EUINFO will contain a SAFEARRAY of strings (VT_ARRAY |
                    VT_BSTR) which contains a list of strings (Example: “OPEN”, “CLOSE”, “IN
                    TRANSIT”, etc.) corresponding to sequential numeric values (0, 1, 2,
                    etc.)</item>
            	</list>
            </remarks>
            <summary><para>Item EU Type</para></summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.EUINFO">
            <summary><para>Item EUInfo</para></summary>
            <value>
            	<para>
                    If EUTYPE is “Analog” EUINFO will contain a SAFEARRAY of exactly two doubles
                    (VT_ARRAY | VT_R8) corresponding to the LOW and HI EU range.
                </para>
            	<para>If EUTYPE is “Enumerated” - EUINFO will contain a SAFEARRAY of strings
                (VT_ARRAY | VT_BSTR) which contains a list of strings (Example: “OPEN”, “CLOSE”,
                “IN TRANSIT”, etc.) corresponding to sequential numeric values (0, 1, 2,
                etc.)</para>
            </value>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.ENGINEERINGUINTS">
            <summary>
            	<para>EU Units</para>
            	<para>e.g. "DEGC" or "GALLONS"</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.DESCRIPTION">
            <summary>
            	<para>Item Description</para>
            	<para>e.g. "Evaporator 6 Coolant Temp"</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.HIGHEU">
            <summary>
            	<para>High EU</para>
            	<para>Present only for 'analog' data. This represents the highest value likely to
                be obtained in normal operation and is intended for such use as automatically
                scaling a bargraph display.</para>
            	<para>e.g. 1400.0</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.LOWEU">
            <summary>
            	<para>Low EU</para>
            	<para>Present only for 'analog' data. This represents the lowest value likely to be
                obtained in normal operation and is intended for such use as automatically scaling
                a bargraph display.</para>
            	<para>e.g. -200.0</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.HIGHIR">
            <summary>
            	<para>High Instrument Range</para>
            	<para>Present only for ‘analog’ data. This represents the highest value that can be
                returned by the instrument.</para>
            	<para>e.g. 9999.9</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.LOWIR">
            <summary>
            	<para>Low Instrument Range</para>
            	<para>Present only for ‘analog’ data. This represents the lowest value that can be
                returned by the instrument.</para>
            	<para>e.g. -9999.9</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.CLOSELABEL">
            <summary>
            	<para>Contact Close Label</para>
            	<para>Present only for ‘discrete' data. This represents a string to be associated
                with this contact when it is in the closed (non-zero) state</para>
            	<para>e.g. "RUN", "CLOSE", "ENABLE", "SAFE" ,etc.</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.OPENLABEL">
            <summary>
            	<para>Contact Open Label</para>
            	<para>Present only for ‘discrete' data. This represents a string to be associated
                with this contact when it is in the open (zero) state</para>
            	<para>e.g. "STOP", "OPEN", "DISABLE", "UNSAFE" ,etc.</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.TIMEZONE">
            <summary>
            	<para>Item Timezone</para>
            	<para>The difference in minutes between the items UTC Timestamp and the local time
                in which the item value was obtained.</para>
            </summary>
            <remarks>
            See the OPCGroup TimeBias property. Also see the WIN32 TIME_ZONE_INFORMATION
            structure.
            </remarks>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.CONDITION_STATUS">
            <summary>
            	<para>Condition Status</para>
            	<para>The current alarm or condition status associated with the Item<br/>
                e.g. "NORMAL", "ACTIVE", "HI ALARM", etc</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.ALARM_QUICK_HELP">
            <summary>
            	<para>Alarm Quick Help</para>
            	<para>A short text string providing a brief set of instructions for the operator to
                follow when this alarm occurs.</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.ALARM_AREA_LIST">
            <summary>
            	<para>Alarm Area List</para>
            	<para>An array of stings indicating the plant or alarm areas which include this
                ItemID.</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.PRIMARY_ALARM_AREA">
            <summary>
            	<para>Primary Alarm Area</para>
            	<para>A string indicating the primary plant or alarm area including this
                ItemID</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.CONDITION_LOGIC">
            <summary>
            	<para>Condition Logic</para>
            	<para>An arbitrary string describing the test being performed.</para>
            	<para>e.g. "High Limit Exceeded" or "TAG.PV &gt;= TAG.HILIM"</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.LIMIT_EXCEEDED">
            <summary>
            	<para>Limit Exceeded</para>
            	<para>For multistate alarms, the condition exceeded</para>
            	<para>e.g. HIHI, HI, LO, LOLO</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.DEADBAND">
            <summary>Deadband</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.HIHI_LIMIT">
            <summary>HiHi limit</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.HI_LIMIT">
            <summary>Hi Limit</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.LO_LIMIT">
            <summary>Lo Limit</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.LOLO_LIMIT">
            <summary>LoLo Limit</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.RATE_CHANGE_LIMIT">
            <summary>Rate of Change Limit</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.DEVIATION_LIMIT">
            <summary>Deviation Limit</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.SOUNDFILE">
            <summary>
            	<para>Sound File</para>
            	<para>e.g. C:\MEDIA\FIC101.WAV, or .MID</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.TYPE_SYSTEM_ID">
            <summary>
            	<para>Type System ID</para>
            	<para>Complex Data Property</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.DICTIONARY_ID">
            <summary>
            	<para>Dictionary ID</para>
            	<para>Complex Data Property</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.TYPE_ID">
            <summary>
            	<para>Type ID</para>
            	<para>Complex Data Property</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.DICTIONARY">
            <summary>
            	<para>Dictionary</para>
            	<para>Complex Data Property</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.TYPE_DESCRIPTION">
            <summary>
            	<para>Type description</para>
            	<para>Complex Data Property</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.CONSISTENCY_WINDOW">
            <summary>
            	<para>Consistency Window</para>
            	<para>Complex Data Property</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.WRITE_BEHAVIOR">
            <summary>
            	<para>Write Behaviour</para>
            	<para>Complex Data Property, defaults to “All or Nothing” if the complex data item
                is writable. Not used for Read-Only items.</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.UNCONVERTED_ITEM_ID">
            <summary>
            	<para>Unconverted Item ID</para>
            	<para>Complex Data Property, the ID of the item that exposes the same complex data
                value in its native format. This property is mandatory for items that implement
                complex data type conversions.</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.UNFILTERED_ITEM_ID">
            <summary>
            	<para>Unfiltered Item ID</para>
            	<para>Complex Data Property, the ID the item that exposes the same complex data
                value without any data filter or with the default query applied to it. It is
                mandatory for items that implement complex data filters or queries.</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.DATA_FILTER_VALUE">
            <summary>
            	<para>Data Filter Value</para>
            	<para>Complex Data Property, the value of the filter that is currently applied to
                the item. It is mandatory for items that implement complex data filters or
                queries.</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.MINIMUM_VALUE">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.MAXIMUM_VALUE">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaProperty.VALUE_PRECISION">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription">
            <summary>
            Describes an item property.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.#ctor(Technosoftware.DaAeHdaClient.Da.TsDaPropertyID,System.Type,System.String)">
            <summary>
            Initializes the object with the specified values.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.ID">
            <summary>
            The unique identifier for the property.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.Type">
            <summary>
            The .NET data type for the property.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.Name">
            <summary>
            The short description defined in the OPC specifications.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.DATATYPE">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.VALUE">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.QUALITY">
            <remarks/>    
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.TIMESTAMP">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.ACCESSRIGHTS">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.SCANRATE">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.EUTYPE">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.EUINFO">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.ENGINEERINGUINTS">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.DESCRIPTION">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.HIGHEU">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.LOWEU">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.HIGHIR">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.LOWIR">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.CLOSELABEL">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.OPENLABEL">
            <remarks/>     
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.TIMEZONE">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.CONDITION_STATUS">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.ALARM_QUICK_HELP">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.ALARM_AREA_LIST">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.PRIMARY_ALARM_AREA">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.CONDITION_LOGIC">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.LIMIT_EXCEEDED">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.DEADBAND">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.HIHI_LIMIT">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.HI_LIMIT">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.LO_LIMIT">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.LOLO_LIMIT">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.RATE_CHANGE_LIMIT">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.DEVIATION_LIMIT">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.SOUNDFILE">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.TYPE_SYSTEM_ID">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.DICTIONARY_ID">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.TYPE_ID">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.DICTIONARY">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.TYPE_DESCRIPTION">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.CONSISTENCY_WINDOW">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.WRITE_BEHAVIOR">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.UNCONVERTED_ITEM_ID">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.UNFILTERED_ITEM_ID">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.DATA_FILTER_VALUE">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.ToString">
            <summary>
            Converts the description to a string.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.Find(Technosoftware.DaAeHdaClient.Da.TsDaPropertyID)">
            <summary>
            Returns the description for the specified property.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsDaPropertyDescription.Enumerate">
            <summary>
            Returns an array of all well-known property descriptions.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsDaPropertyID">
            <summary>
            Contains a unique identifier for a property.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsDaPropertyID.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsDaPropertyID.#ctor(System.Xml.XmlQualifiedName)">
            <summary>
            Initializes a property identified by a qualified name.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsDaPropertyID.#ctor(System.Int32)">
            <summary>
            Initializes a property identified by an integer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsDaPropertyID.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Initializes a property identified by a property description.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsDaPropertyID.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks>
             During deserialization, SerializationInfo is passed to the class using the constructor provided for this purpose. Any visibility 
             constraints placed on the constructor are ignored when the object is deserialized; so you can mark the class as public, 
             protected, internal, or private. However, it is best practice to make the constructor protected unless the class is sealed, in which case 
             the constructor should be marked private. The constructor should also perform thorough input validation. To avoid misuse by malicious code, 
             the constructor should enforce the same security checks and permissions required to obtain an instance of the class using any other 
             constructor. 
             </remarks>
             <summary>
             Constructs a server by de-serializing its OpcUrl from the stream.
             </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsDaPropertyID.Name">
            <summary>
            Used for properties identified by a qualified name.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsDaPropertyID.Code">
            <summary>
            Used for properties identified by a integer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsDaPropertyID.op_Equality(Technosoftware.DaAeHdaClient.Da.TsDaPropertyID,Technosoftware.DaAeHdaClient.Da.TsDaPropertyID)">
            <summary>
            Returns true if the objects are equal.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsDaPropertyID.op_Inequality(Technosoftware.DaAeHdaClient.Da.TsDaPropertyID,Technosoftware.DaAeHdaClient.Da.TsDaPropertyID)">
            <summary>
            Returns true if the objects are not equal.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsDaPropertyID.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsDaPropertyID.Equals(System.Object)">
            <summary>
            Returns true if the target object is equal to the object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsDaPropertyID.GetHashCode">
            <summary>
            Returns a useful hash code for the object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsDaPropertyID.ToString">
            <summary>
            Converts the property id to a string.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaQuality">
            <summary>
            Contains the quality field for an item value.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaQuality.#ctor(Technosoftware.DaAeHdaClient.Da.TsDaQualityBits)">
            <summary>
            Initializes the object with the specified quality.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaQuality.#ctor(System.Int16)">
            <summary>
            Initializes the object from the contents of a 16 bit integer.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaQuality.QualityBits">
            <summary>
            The value in the quality bits field.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaQuality.LimitBits">
            <summary>
            The value in the limit bits field.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaQuality.VendorBits">
            <summary>
            The value in the quality bits field.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaQuality.Good">
            <summary>
            A 'good' quality value.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaQuality.Bad">
            <summary>
            An 'bad' quality value.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaQuality.GetCode">
            <summary>
            Returns the quality as a 16 bit integer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaQuality.SetCode(System.Int16)">
            <summary>
            Initializes the quality from a 16 bit integer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaQuality.op_Equality(Technosoftware.DaAeHdaClient.Da.TsCDaQuality,Technosoftware.DaAeHdaClient.Da.TsCDaQuality)">
            <summary>
            Returns true if the objects are equal.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaQuality.op_Inequality(Technosoftware.DaAeHdaClient.Da.TsCDaQuality,Technosoftware.DaAeHdaClient.Da.TsCDaQuality)">
            <summary>
            Returns true if the objects are not equal.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaQuality.ToString">
            <summary>
            Converts a quality to a string with the format: 'quality[limit]:vendor'.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaQuality.Equals(System.Object)">
            <summary>
            Determines whether the specified Object is equal to the current Quality
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaQuality.GetHashCode">
            <summary>
            Returns hash code for the current Quality.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsDaQualityBits">
            <summary>
                <para>Defines the possible quality status bits.</para>
                <para>These flags represent the quality state for an item's data value. This is
                intended to be similar to but slightly simpler than the Field-bus Data Quality
                Specification (section 4.4.1 in the H1 Final Specifications). This design makes it
                fairly easy for both servers and client applications to determine how much
                functionality they want to implement.</para>
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaQualityBits.Good">
            <summary>The Quality of the value is Good.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaQualityBits.GoodLocalOverride">
            <summary>The value has been Overridden. Typically this means the input has been disconnected and a manually entered value has been 'forced'.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaQualityBits.Bad">
            <summary>The value is bad but no specific reason is known.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaQualityBits.BadConfigurationError">
            <summary>
            There is some server specific problem with the configuration. For example the
            item in question has been deleted from the configuration.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaQualityBits.BadNotConnected">
            <summary>
            The input is required to be logically connected to something but is not. This
            quality may reflect that no value is available at this time, for reasons like the value
            may have not been provided by the data source.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaQualityBits.BadDeviceFailure">
            <summary>A device failure has been detected.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaQualityBits.BadSensorFailure">
            <summary>
            A sensor failure had been detected (the ’Limits’ field can provide additional
            diagnostic information in some situations).
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaQualityBits.BadLastKnownValue">
            <summary>
            Communications have failed. However, the last known value is available. Note that
            the ‘age’ of the value may be determined from the time stamp in the item state.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaQualityBits.BadCommFailure">
            <summary>Communications have failed. There is no last known value is available.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaQualityBits.BadOutOfService">
            <summary>
            The block is off scan or otherwise locked. This quality is also used when the
            active state of the item or the subscription containing the item is InActive.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaQualityBits.BadWaitingForInitialData">
            <summary>
            After Items are added to a subscription, it may take some time for the server to
            actually obtain values for these items. In such cases the client might perform a read
            (from cache), or establish a ConnectionPoint based subscription and/or execute a
            Refresh on such a subscription before the values are available. This sub-status is only
            available from OPC DA 3.0 or newer servers.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaQualityBits.Uncertain">
            <summary>There is no specific reason why the value is uncertain.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaQualityBits.UncertainLastUsableValue">
            <summary>
            Whatever was writing this value has stopped doing so. The returned value should
            be regarded as ‘stale’. Note that this differs from a BAD value with sub-status
            badLastKnownValue (Last Known Value). That status is associated specifically with a
            detectable communications error on a ‘fetched’ value. This error is associated with the
            failure of some external source to ‘put’ something into the value within an acceptable
            period of time. Note that the ‘age’ of the value can be determined from the time stamp
            in the item state.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaQualityBits.UncertainSensorNotAccurate">
            <summary>
            Either the value has ‘pegged’ at one of the sensor limits (in which case the
            limit field should be set to low or high) or the sensor is otherwise known to be out of
            calibration via some form of internal diagnostics (in which case the limit field should
            be none).
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaQualityBits.UncertainEUExceeded">
            <summary>
            The returned value is outside the limits defined for this parameter. Note that in
            this case (per the Field-bus Specification) the ‘Limits’ field indicates which limit has
            been exceeded but does NOT necessarily imply that the value cannot move farther out of
            range.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaQualityBits.UncertainSubNormal">
            <summary>
            The value is derived from multiple sources and has less than the required number
            of Good sources.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsDaQualityMasks">
            <summary>
            Defines bit masks for the quality.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaQualityMasks.QualityMask">
            <summary>Quality related bits</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaQualityMasks.LimitMask">
            <summary>Limit related bits</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsDaQualityMasks.VendorMask">
            <summary>Vendor specific bits</summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaRequest">
            <summary>
            Describes the state of a subscription.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaRequest.#ctor(Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription,System.Object)">
            <summary>
            Initializes the object with a subscription and a unique id.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaRequest.Subscription">
            <summary>
            The subscription processing the request.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaRequest.Handle">
            <summary>
            An unique identifier, assigned by the client, for the request.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaRequest.Cancel(Technosoftware.DaAeHdaClient.Da.TsCDaCancelCompleteEventHandler)">
            <summary>
            Cancels the request, if possible.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaResultFilter">
            <summary>
            Filters applied by the server before returning item results.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaResultFilter.ItemName">
            <summary>
            Include the ItemName in the ItemIdentifier if bit is set.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaResultFilter.ItemPath">
            <summary>
            Include the ItemPath in the ItemIdentifier if bit is set.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaResultFilter.ClientHandle">
            <summary>
            Include the ClientHandle in the ItemIdentifier if bit is set.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaResultFilter.ItemTime">
            <summary>
            Include the Timestamp in the ItemValue if bit is set.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaResultFilter.ErrorText">
            <summary>
            Include verbose, localized error text with result if bit is set. 
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaResultFilter.DiagnosticInfo">
            <summary>
            Include additional diagnostic information with result if bit is set.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaResultFilter.Minimal">
            <summary>
            Include the ItemName and Timestamp if bit is set.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaResultFilter.All">
            <summary>
            Include all information in the results if bit is set.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaServer">
            <summary>
            This class is the main interface to access an OPC Data Access server.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaServer.Names">
            <summary>A set of names for fields used in serialization.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaServer.subscriptions_">
            <summary>
            A list of subscriptions for the server.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaServer.filters_">
            <summary>
            The local copy of the result filters.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.#ctor">
            <summary>
            Initializes the object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.#ctor(Technosoftware.DaAeHdaClient.OpcFactory,Technosoftware.DaAeHdaClient.OpcUrl)">
            <summary>
            Initializes the object with a factory and a default OpcUrl.
            </summary>
            <param name="factory">The OpcFactory used to connect to remote servers.</param>
            <param name="url">The network address of a remote server.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a server by de-serializing its OpcUrl from the stream.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaServer.Subscriptions">
            <summary>
            Returns an array of all subscriptions for the server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaServer.Filters">
            <summary>
            The current result filters applied by the server.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Serializes a server into a stream.</summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.Clone">
            <summary>Returns an unconnected copy of the server with the same OpcUrl.</summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.Connect(Technosoftware.DaAeHdaClient.OpcUrl,Technosoftware.DaAeHdaClient.OpcConnectData)">
            <summary>Connects to the server with the specified OpcUrl and credentials.</summary>
            <exception caption="OpcResultException Class" cref="T:Technosoftware.DaAeHdaClient.OpcResultException">If an OPC specific error occur this exception is raised. The Result field includes then the OPC specific code.</exception>
            <param name="url">The network address of the remote server.</param>
            <param name="connectData">Any protocol configuration or user authentication information.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.Disconnect">
            <summary>Disconnects from the server and releases all network resources.</summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.GetResultFilters">
            <summary>Returns the filters applied by the server to any item results returned to the client.</summary>
            <returns>A bit mask indicating which fields should be returned in any item results.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.SetResultFilters(System.Int32)">
            <summary>Sets the filters applied by the server to any item results returned to the client.</summary>
            <param name="filters">A bit mask indicating which fields should be returned in any item results.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.GetServerStatus">
            <summary>Returns the current server status.</summary>
            <returns>The current server status.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.Read(Technosoftware.DaAeHdaClient.Da.TsCDaItem[])">
            <summary>Reads the current values for a set of items.</summary>
            <returns>The results of the read operation for each item.</returns>
            <requirements>OPC XML-DA Server or OPC Data Access Server V3.x</requirements>
            <param name="items">The set of items to read.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.Write(Technosoftware.DaAeHdaClient.Da.TsCDaItemValue[])">
            <summary>Writes the value, quality and timestamp for a set of items.</summary>
            <returns>The results of the write operation for each item.</returns>
            <requirements>OPC XML-DA Server or OPC Data Access Server V3.x</requirements>
            <param name="items">The set of item values to write.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.CreateSubscription(Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionState)">
            <summary>
            Creates a new subscription.
            </summary>
            <returns>The new subscription object.</returns>
            <requirements>OPC XML-DA Server or OPC Data Access Server V2.x / V3.x</requirements>
            <param name="state">The initial state of the subscription.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.CreateSubscription(Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription)">
            <summary>
            Creates a new instance of the appropriate subscription object.
            </summary>
            <param name="subscription">The remote subscription object.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.CancelSubscription(Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription)">
            <summary>Cancels a subscription and releases all resources allocated for it.</summary>
            <requirements>OPC XML-DA Server or OPC Data Access Server V2.x / V3.x</requirements>
            <param name="subscription">The subscription to cancel.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.Browse(Technosoftware.DaAeHdaClient.Da.TsCDaBrowseFilters)">
            <summary>Fetches all the children of the root branch that meet the filter criteria.</summary>
            <returns>The set of elements found.</returns>
            <requirements>OPC Data Access Server V2.x / V3.x</requirements>
            <param name="filters">The filters to use to limit the set of child elements returned.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.Browse(Technosoftware.DaAeHdaClient.OpcItem,Technosoftware.DaAeHdaClient.Da.TsCDaBrowseFilters,Technosoftware.DaAeHdaClient.Da.TsCDaBrowsePosition@)">
            <summary>Fetches the children of a branch that meet the filter criteria.</summary>
            <returns>The set of elements found.</returns>
            <requirements>OPC XML-DA Server or OPC Data Access Server V2.x / V3.x</requirements>
            <param name="itemId">The identifier of branch which is the target of the search.</param>
            <param name="filters">The filters to use to limit the set of child elements returned.</param>
            <param name="position">An object used to continue a browse that could not be completed.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.BrowseNext(Technosoftware.DaAeHdaClient.Da.TsCDaBrowsePosition@)">
            <summary>Continues a browse operation with previously specified search criteria.</summary>
            <returns>The set of elements found.</returns>
            <requirements>OPC XML-DA Server or OPC Data Access Server V2.x / V3.x</requirements>
            <param name="position">An object containing the browse operation state information.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.GetProperties(Technosoftware.DaAeHdaClient.OpcItem[],Technosoftware.DaAeHdaClient.Da.TsDaPropertyID[],System.Boolean)">
            <summary>Returns the item properties for a set of items.</summary>
            <param name="itemIds">A list of item identifiers.</param>
            <param name="propertyIDs">A list of properties to fetch for each item.</param>
            <param name="returnValues">Whether the property values should be returned with the properties.</param>
            <returns>A list of properties for each item.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.EstablishSubscription(Technosoftware.DaAeHdaClient.Da.TsCDaSubscription)">
            <summary>
            Establishes a subscription based on the template provided.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaServerState">
            <summary>
            The set of possible server states.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaServerState.Unknown">
            <summary>
            The server state is not known.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaServerState.Running">
            <summary>
            The server is running normally.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaServerState.Failed">
            <summary>
            The server is not functioning due to a fatal error.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaServerState.NoConfig">
            <summary>
            The server cannot load its configuration information.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaServerState.Suspended">
            <summary>
            The server has halted all communication with the underlying hardware.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaServerState.Test">
            <summary>
            The server is disconnected from the underlying hardware.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaServerState.CommFault">
            <summary>
            The server cannot communicate with the underlying hardware.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaStateMask">
            <summary>
            Defines masks to be used when modifying the subscription or item state.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaStateMask.Name">
            <summary>
            The name of the subscription.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaStateMask.ClientHandle">
            <summary>
            The client assigned handle for the item or subscription.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaStateMask.Locale">
            <summary>
            The locale to use for results returned to the client from the subscription.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaStateMask.Active">
            <summary>
            Whether the item or subscription is active.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaStateMask.UpdateRate">
            <summary>
            The maximum rate at which data update notifications are sent.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaStateMask.KeepAlive">
            <summary>
            The longest period between data update notifications.<br/>
            <strong>Note:</strong> This feature is only supported with OPC Data Access 3.0
            Servers.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaStateMask.ReqType">
            <summary>
            The requested data type for the item.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaStateMask.Deadband">
            <summary>
            The deadband for the item or subscription.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaStateMask.SamplingRate">
            <summary>
            The rate at which the server should check for changes to an item value.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaStateMask.EnableBuffering">
            <summary>
            Whether the server should buffer multiple changes to a single item.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaStateMask.All">
            <summary>
            All fields are valid.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription">
            <summary>
            An in-process object used to access subscriptions on OPC Data Access servers.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.server_">
            <summary>
            The containing server object.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.Subscription">
            <summary>
            The remote subscription object.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.subscriptionState_">
            <summary>
            The local copy of the subscription state.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.daItems_">
            <summary>
            The local copy of all subscription items.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.enabled_">
            <summary>
            Whether data callbacks are enabled.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.filters_">
            <summary>
            The local copy of the result filters.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.#ctor(Technosoftware.DaAeHdaClient.Da.TsCDaServer,Technosoftware.DaAeHdaClient.Da.ITsCDaSubscription)">
            <summary>
            Initializes object with default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a server by de-serializing its OpcUrl from the stream.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.Finalize">
            <summary>
            The finalizer implementation.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.Dispose">
            <summary>
            This must be called explicitly by clients to ensure the remote server is released.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.Dispose(System.Boolean)">
            <summary>
            Dispose(bool disposing) executes in two distinct scenarios.
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the
            runtime from inside the finalizer and you should not reference
            other objects. Only unmanaged resources can be disposed.
            </summary>
            <param name="disposing">If true managed and unmanaged resources can be disposed. If false only unmanaged resources.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.Server">
            <summary>
            The server that the subscription is attached to.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.Name">
            <summary>
            The name assigned to the subscription by the client.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.ClientHandle">
            <summary>
            The handle assigned to the subscription by the client.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.ServerHandle">
            <summary>
            The handle assigned to the subscription by the server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.Active">
            <summary>
            Whether the subscription is active.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.Enabled">
            <summary>
            Whether data callbacks are enabled.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.Locale">
            <summary>
            The current locale used by the subscription.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.Filters">
            <summary>
            The current result filters applied by the subscription.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.State">
            <summary>
            Returns a copy of the current subscription state.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.Items">
            <summary>
            The items belonging to the subscription.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.Clone">
            <summary>
            Returns an unconnected copy of the subscription with the same items.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.GetResultFilters">
            <summary>
            Gets default result filters for the server.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.SetResultFilters(System.Int32)">
            <summary>
            Sets default result filters for the server.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.GetState">
            <summary>
            Returns the current subscription state.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.ModifyState(System.Int32,Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionState)">
            <summary>
            Updates the current subscription state.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.AddItems(Technosoftware.DaAeHdaClient.Da.TsCDaItem[])">
            <summary>
            Adds items to the subscription.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.ModifyItems(System.Int32,Technosoftware.DaAeHdaClient.Da.TsCDaItem[])">
            <summary>
            Modifies items that are already part of the subscription.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.RemoveItems(Technosoftware.DaAeHdaClient.OpcItem[])">
            <summary>
            Removes items from a subscription.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.Read(Technosoftware.DaAeHdaClient.Da.TsCDaItem[])">
            <summary>
            Reads a set of subscription items.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.Write(Technosoftware.DaAeHdaClient.Da.TsCDaItemValue[])">
            <summary>
            Writes a set of subscription items.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.Read(Technosoftware.DaAeHdaClient.Da.TsCDaItem[],System.Object,Technosoftware.DaAeHdaClient.Da.TsCDaReadCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Begins an asynchronous read operation for a set of items.
            </summary>
            <param name="items">The set of items to read (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.Write(Technosoftware.DaAeHdaClient.Da.TsCDaItemValue[],System.Object,Technosoftware.DaAeHdaClient.Da.TsCDaWriteCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Begins an asynchronous write operation for a set of items.
            </summary>
            <param name="items">The set of item values to write (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.Cancel(Technosoftware.DaAeHdaClient.IOpcRequest,Technosoftware.DaAeHdaClient.Da.TsCDaCancelCompleteEventHandler)">
            <summary>
            Cancels an asynchronous request.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.Refresh">
            <summary>
            Tells the server to send an data change update for all subscription items. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.Refresh(System.Object,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Causes the server to send a data changed notification for all active items. 
            </summary>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.SetEnabled(System.Boolean)">
            <summary>
            Sets whether data change callbacks are enabled.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.GetEnabled">
            <summary>
            Gets whether data change callbacks are enabled.
            </summary>
        </member>
        <member name="E:Technosoftware.DaAeHdaClient.Da.TsCDaSubscription.DataChangedEvent">
            <summary>
            An event to receive data change updates.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection">
            <summary>A collection of subscriptions.</summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.#ctor(Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection)">
            <summary>
            Initializes object with the specified SubscriptionCollection object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.Item(System.Int32)">
            <summary>
             Gets the item at the specified index.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.CopyTo(Technosoftware.DaAeHdaClient.Da.TsCDaSubscription[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList subscription at the specified index.
            </summary>
            <param name="index">The zero-based index of the subscription to remove.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an subscription to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.Clear">
            <summary>
            Removes all subscriptions from the IList.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific subscription in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.Add(System.Object)">
            <summary>
            Adds an subscription to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.Insert(System.Int32,Technosoftware.DaAeHdaClient.Da.TsCDaSubscription)">
            <summary>
            Inserts an subscription to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.Remove(Technosoftware.DaAeHdaClient.Da.TsCDaSubscription)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.Contains(Technosoftware.DaAeHdaClient.Da.TsCDaSubscription)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.IndexOf(Technosoftware.DaAeHdaClient.Da.TsCDaSubscription)">
            <summary>
            Determines the index of a specific subscription in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionCollection.Add(Technosoftware.DaAeHdaClient.Da.TsCDaSubscription)">
            <summary>
            Adds an subscription to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionState">
            <summary>
            Describes the state of a subscription.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionState.Name">
            <summary>
            A unique name for the subscription controlled by the client.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionState.ClientHandle">
            <summary>
            A unique identifier for the subscription assigned by the client.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionState.ServerHandle">
            <summary>
            A unique subscription identifier assigned by the server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionState.Locale">
            <summary>
            The locale used for any error messages or results returned to the client.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionState.Active">
            <summary>
            Whether the subscription is scanning for updates to send to the client.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionState.UpdateRate">
            <summary>
            The rate in milliseconds at which the server checks of updates to send to the
            client.
            </summary>
            <remarks>
                Client Specifies the fastest rate at which data changes may be sent to the
                <see cref="T:Technosoftware.DaAeHdaClient.Da.TsCDaDataChangedEventHandler">DataChangedHandler</see>
                for items in this subscription. This also indicates the desired accuracy of Cached
                Data. This is intended only to control the behavior of the interface. How the
                server deals with the update rate and how often it actually polls the hardware
                internally is an implementation detail. Passing 0 indicates the server should use
                the fastest practical rate.
            </remarks>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionState.KeepAlive">
            <summary><para>The maximum period in milliseconds between updates sent to the client.</para></summary>
            <remarks>
            	<para>Clients can set the keep-alive time for a subscription to cause the server to
                provide client callbacks on the subscription when there are no new events to
                report. Clients can then be assured of the health of the server and subscription
                without resorting to pinging the server with calls to GetStatus().</para>
            	<para>Using this facility, a client can expect a callback (data or keep-alive)
                within the specified keep-alive time.</para>
            	<para>Servers shall reset their keep-alive timers when real data is sent (i.e. it
                is not acceptable to constantly send the keep-alive callback at a fixed period
                equal to the keep-alive time irrespective of data callbacks).</para>
            	<para>
                    The keep-alive callback consists of a call to the
                    <see cref="T:Technosoftware.DaAeHdaClient.Da.TsCDaDataChangedEventHandler">DataChangedEventHandler</see>
                    with an empty value list.
                </para>
            	<para>
                    Keep-alive callbacks will not occur when the subscription is inactive.
                    Keep-alive callbacks do not affect the value of the
                    <see cref="P:Technosoftware.DaAeHdaClient.OpcServerStatus.LastUpdateTime">LastUpdateTime</see> returned by
                    <see cref="M:Technosoftware.DaAeHdaClient.Da.TsCDaServer.GetServerStatus">GetServerStatus()</see> .
                </para>
            	<para><strong>Available only for OPC Data Access 3.0 and OPC XML-DA
                servers.</strong></para>
            </remarks>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionState.Deadband">
            <summary>
            The minimum percentage change from 0.0 to 100.0 required to trigger a data update
            for an item.
            </summary>
            <remarks>
            	<para>The range of the Deadband is from 0.0 to 100.0 Percent. Deadband will only
                apply to items in the subscription that have a dwEUType of Analog available. If the
                EU Type is Analog, then the EU Low and EU High values for the item can be used to
                calculate the range for the item. This range will be multiplied with the Deadband
                to generate an exception limit. An exception is determined as follows:</para>
            	<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            		<para>Exception if (absolute value of (last cached value - current value) &gt;
                    (pPercentDeadband/100.0) * (EU High - EU Low) )</para>
            	</blockquote>
            	<para>The PercentDeadband can be set when CreateSubscription is called, allowing
                the same PercentDeadband to be used for all items within that particular
                subscription. However, with OPC DA 3.0, it is allowable to set the PercentDeadband
                on a per item basis. This means that each item can potentially override the
                PercentDeadband set for the subscription it resides within.</para>
            	<para>If the exception limit is exceeded, then the last cached value is updated
                with the new value and a notification will be sent to the client’s callback (if
                any). The PercentDeadband is an optional behavior for the server. If the client
                does not specify this value on a server that does support the behavior, the default
                value of 0 (zero) will be assumed, and all value changes will update the CACHE.
                Note that the timestamp will be updated regardless of whether the cached value is
                updated. A server which does not support deadband should return an error
                (OPC_E_DEADBANDNOTSUPPORTED) if the client requests a deadband other than
                0.0.</para>
            	<para>The UpdateRate for a subscription or the sampling rate of the item, if set,
                determines time between when a value is checked to see if the exception limit has
                been exceeded. The PercentDeadband is used to keep noisy signals from updating the
                client unnecessarily.</para>
            </remarks>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionState.TimeBias">
            <summary>
            TimeZone Bias of Group (in minutes).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Da.TsCDaSubscriptionState.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregate">
            <summary>
            The description of an item aggregate supported by the server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregate.Id">
            <summary>
            A unique identifier for the aggregate.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregate.Name">
            <summary>
            The unique name for the aggregate.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregate.Description">
            <summary>
            A short description of the aggregate.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregate.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregate.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateCollection">
            <summary>
            The description of an item aggregate supported by the server.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateCollection.#ctor(System.Collections.ICollection)">
            <summary>
            Initializes the object with any Aggregates contained in the collection.
            </summary>
            <param name="collection">A collection containing aggregate descriptions.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateCollection.Item(System.Int32)">
            <summary>
            Returns the aggregate at the specified index.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateCollection.Find(System.Int32)">
            <summary>
            Returns the first aggregate with the specified id.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateCollection.Init(System.Collections.ICollection)">
            <summary>
            Initializes the object with any aggregates contained in the collection.
            </summary>
            <param name="collection">A collection containing aggregate descriptions.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateCollection.Clear">
            <summary>
            Removes all aggregates in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateCollection.CopyTo(Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregate[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID">
            <summary>
            Defines constants for well-known item aggregates.
            </summary>
            <remarks>This indicates the aggregate to be used when retrieving processed history. The precise meaning of each aggregate may be server specific. Aggregates not supported by the server shall return E_INVALIDARG in the error code for that aggregate. Additional aggregates may be defined by vendors. Server specific aggregates must be defined with values beginning at 0x80000000. The OPC foundation reserves all aggregates IDs from 0 to 0x7fffffff.</remarks>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.NoAggregate">
            <summary>
            Do not retrieve an aggregate.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.Interpolative">
            <summary>
            Do not retrieve an aggregate. This is used for retrieving interpolated values.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.Total">
            <summary>
            Retrieve the totalized value (time integral) of the data over the re-sample interval.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.Average">
            <summary>
            Retrieve the average data over the re-sample interval.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.TimeAverage">
            <summary>
            Retrieve the time weighted average data over the re-sample interval.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.Count">
            <summary>
            Retrieve the number of raw values over the re-sample interval.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.StandardDeviation">
            <summary>
            Retrieve the standard deviation over the re-sample interval.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.MinimumActualTime">
            <summary>
            Retrieve the minimum value in the re-sample interval and the timestamp of the minimum value.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.Minimum">
            <summary>
            Retrieve the minimum value in the re-sample interval.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.MaximumActualTime">
            <summary>
            Retrieve the maximum value in the re-sample interval and the timestamp of the maximum value.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.Maximum">
            <summary>
            Retrieve the maximum value in the re-sample interval.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.Start">
            <summary>
            Retrieve the value at the beginning of the re-sample interval. The time stamp is the time stamp of the beginning of the interval.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.End">
            <summary>
            Retrieve the value at the end of the re-sample interval. The time stamp is the time stamp of the end of the interval. 
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.Delta">
            <summary>
            Retrieve the difference between the first and last value in the re-sample interval.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.RegSlope">
            <summary>
            Retrieve the slope of the regression line over the re-sample interval.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.RegConst">
            <summary>
            Retrieve the intercept of the regression line over the re-sample interval. This is the value of the regression line at the start of the interval.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.RegDev">
            <summary>
            Retrieve the standard deviation of the regression line over the re-sample interval.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.Variance">
            <summary>
            Retrieve the variance over the sample interval.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.Range">
            <summary>
            Retrieve the difference between the minimum and maximum value over the sample interval.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.DurationGood">
            <summary>
            Retrieve the duration (in seconds) of time in the interval during which the data is good.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.DurationBad">
            <summary>
            Retrieve the duration (in seconds) of time in the interval during which the data is bad.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.PercentGood">
            <summary>
            Retrieve the percent of data (1 equals 100 percent) in the interval which has good quality.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.PercentBad">
            <summary>
            Retrieve the percent of data (1 equals 100 percent) in the interval which has bad quality.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.WorstQuality">
            <summary>
            Retrieve the worst quality of data in the interval.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAggregateID.Annotations">
            <summary>
            Retrieve the number of annotations in the interval.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValue">
            <summary>
            An annotation associated with an item.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValue.Timestamp">
            <summary>
            The timestamp for the annotation.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValue.Annotation">
            <summary>
            The text of the annotation.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValue.CreationTime">
            <summary>
            The time when the annotation was created.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValue.User">
            <summary>
            The user who created the annotation.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValue.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection">
            <summary>
            A collection of item values passed to write or returned from a read operation.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.#ctor(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Initializes object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.#ctor(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem)">
            <summary>
            Initializes object with the specified Item object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.#ctor(Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection)">
            <summary>
            Initializes object with the specified ItemValueCollection object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.Item(System.Int32)">
            <summary>
            Accessor for elements in the collection.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.Result">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.StartTime">
            <summary>
            The actual start time used by a server while processing a request.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.EndTime">
            <summary>
            The actual end time used by a server while processing a request.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local time).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.CopyTo(Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValue[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.Insert(System.Int32,Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValue)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.Remove(Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValue)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.Contains(Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValue)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.IndexOf(Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValue)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection.Add(Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValue)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttribute">
            <summary>
            The description of an item attribute supported by the server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttribute.ID">
            <summary>
            A unique identifier for the attribute.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttribute.Name">
            <summary>
            The unique name for the attribute.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttribute.Description">
            <summary>
            A short description of the attribute.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttribute.DataType">
            <summary>
            The data type of the attribute.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttribute.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttribute.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeCollection">
            <summary>
            The description of an item attribute supported by the server.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeCollection.#ctor(System.Collections.ICollection)">
            <summary>
            Initializes the object with any Attributes contained in the collection.
            </summary>
            <param name="collection">A collection containing attribute descriptions.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeCollection.Item(System.Int32)">
            <summary>
            Returns the attribute at the specified index.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeCollection.Find(System.Int32)">
            <summary>
            Returns the first attribute with the specified id.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeCollection.Init(System.Collections.ICollection)">
            <summary>
            Initializes the object with any attributes contained in the collection.
            </summary>
            <param name="collection">A collection containing attribute descriptions.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeCollection.Clear">
            <summary>
            Removes all attributes in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeCollection.CopyTo(System.Attribute[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeID">
            <summary>
            Defines constants for well-known item attributes.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeID.DATA_TYPE">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeID.DESCRIPTION">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeID.ENG_UNITS">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeID.STEPPED">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeID.ARCHIVING">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeID.DERIVE_EQUATION">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeID.NODE_NAME">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeID.PROCESS_NAME">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeID.SOURCE_NAME">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeID.SOURCE_TYPE">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeID.NORMAL_MAXIMUM">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeID.NORMAL_MINIMUM">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeID.ITEMID">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeID.MAX_TIME_INT">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeID.MIN_TIME_INT">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeID.EXCEPTION_DEV">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeID.EXCEPTION_DEV_TYPE">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeID.HIGH_ENTRY_LIMIT">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeID.LOW_ENTRY_LIMIT">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValue">
            <summary>
            The value of an attribute at a point in time.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValue.Value">
            <summary>
            The value of the data.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValue.Timestamp">
            <summary>
            The timestamp associated with the value.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local time).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValue.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection">
            <summary>
            The set of values for an item attribute over a period of time.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.#ctor(Technosoftware.DaAeHdaClient.Hda.TsCHdaAttribute)">
            <summary>
            Initializes object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.#ctor(Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection)">
            <summary>
            Initializes object with the specified AttributeValueCollection object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.AttributeID">
            <summary>
            A unique identifier for the attribute.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.Item(System.Int32)">
            <summary>
            Accessor for elements in the collection.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.Result">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.CopyTo(Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValue[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.Insert(System.Int32,Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValue)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.Remove(Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValue)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.Contains(Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValue)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.IndexOf(Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValue)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection.Add(Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValue)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseElement">
            <summary>
            Contains the description of an element in the server's address space.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseElement.Name">
            <summary>
            The name of element within its branch.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseElement.IsItem">
            <summary>
            Whether the element is an item with associated data in the archive.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseElement.HasChildren">
            <summary>
            Whether the element has child elements.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseElement.Attributes">
            <summary>
            The current values of any attributes associated with the item.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseElement.Clone">
            <summary>
            Creates a deep-copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilter">
            <summary>
            Defines a filter to apply to an item attribute when browsing.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilter.AttributeID">
            <summary>
            The attribute id to use when filtering.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilter.Operator">
            <summary>
            The operator to use when testing if the filter condition is met.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilter.FilterValue">
            <summary>
            The value of the filter. The '*' and '?' wildcard characters are permitted. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilter.Clone">
            <summary>
            Creates a deep-copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilterCollection">
            <summary>
            A collection of attribute filters used when browsing the server address space.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilterCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilterCollection.#ctor(System.Collections.ICollection)">
            <summary>
            Initializes the object with any BrowseFilter contained in the collection.
            </summary>
            <param name="collection">A collection containing browse filters.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilterCollection.Item(System.Int32)">
            <summary>
            Returns the browse filter at the specified index.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilterCollection.Find(System.Int32)">
            <summary>
            Returns the browse filter for the specified attribute id.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilterCollection.Init(System.Collections.ICollection)">
            <summary>
            Initializes the object with any attribute values contained in the collection.
            </summary>
            <param name="collection">A collection containing attribute values.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilterCollection.Clear">
            <summary>
            Removes all attribute values in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilterCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilterCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilterCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilterCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects in to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilterCollection.CopyTo(Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilter[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilterCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilterCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowsePosition">
            <summary>
            Stores the state of a browse operation.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowsePosition.Dispose">
            <summary>
            Releases any unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowsePosition.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaEditType">
            <summary>
            The types of modifications that can be applied to an item.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaEditType.Insert">
            <summary>
            The item was inserted.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaEditType.Replace">
            <summary>
            The item was replaced.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaEditType.InsertReplace">
            <summary>
            The item was inserted or replaced during an insert/replace operation.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaEditType.Delete">
            <summary>
            The item was deleted.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.ITsCHdaActualTime">
            <summary>
            A interface used to actual time information associated with a result.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.ITsCHdaActualTime.StartTime">
            <summary>
            The actual start time used by a server while processing a request.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.ITsCHdaActualTime.EndTime">
            <summary>
            The actual end time used by a server while processing a request.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.ITsCHdaBrowser">
            <summary>
            Defines functionality that is common to all OPC Data Access servers.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.ITsCHdaBrowser.Filters">
            <summary>
            Returns the set of attribute filters used by the browser. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaBrowser.Browse(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Browses the server's address space at the specified branch.
            </summary>
            <param name="itemId">The item id of the branch to search.</param>
            <returns>The set of elements that meet the filter criteria.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaBrowser.Browse(Technosoftware.DaAeHdaClient.OpcItem,System.Int32,Technosoftware.DaAeHdaClient.IOpcBrowsePosition@)">
            <summary>
            Begins a browsing the server's address space at the specified branch.
            </summary>
            <param name="itemId">The item id of the branch to search.</param>
            <param name="maxElements">The maximum number of elements to return.</param>
            <param name="position">The position object used to continue a browse operation.</param>
            <returns>The set of elements that meet the filter criteria.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaBrowser.BrowseNext(System.Int32,Technosoftware.DaAeHdaClient.IOpcBrowsePosition@)">
            <summary>
            Continues browsing the server's address space at the specified position.
            </summary>
            <param name="maxElements">The maximum number of elements to return.</param>
            <param name="position">The position object used to continue a browse operation.</param>
            <returns>The set of elements that meet the filter criteria.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer">
            <summary>
            Defines functionality that is common to all OPC Historical Data Access servers.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.GetServerStatus">
            <summary>
            Returns the current server status.
            </summary>
            <returns>The current server status.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.GetAttributes">
            <summary>
            Returns the item attributes supported by the server.
            </summary>
            <returns>The a set of item attributes and their descriptions.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.GetAggregates">
            <summary>
            Returns the aggregates supported by the server.
            </summary>
            <returns>The a set of aggregates and their descriptions.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.CreateBrowser(Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilter[],Technosoftware.DaAeHdaClient.OpcResult[]@)">
            <summary>
            Creates a object used to browse the server address space.
            </summary>
            <param name="filters">The set of attribute filters to use when browsing.</param>
            <param name="results">A result code for each individual filter.</param>
            <returns>A browser object that must be released by calling Dispose().</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.CreateItems(Technosoftware.DaAeHdaClient.OpcItem[])">
            <summary>
            Creates a set of items.
            </summary>
            <param name="items">The identifiers for the items to create.</param>
            <returns>The results for each item containing the server handle and result code.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.ReleaseItems(Technosoftware.DaAeHdaClient.OpcItem[])">
            <summary>
            Releases a set of previously created items.
            </summary>
            <param name="items">The server handles for the items to release.</param>
            <returns>The results for each item containing the result code.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.ValidateItems(Technosoftware.DaAeHdaClient.OpcItem[])">
            <summary>
            Validates a set of items.
            </summary>
            <param name="items">The identifiers for the items to validate.</param>
            <returns>The results for each item containing the result code.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.ReadRaw(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,System.Int32,System.Boolean,Technosoftware.DaAeHdaClient.OpcItem[])">
            <summary>
            Reads raw (unprocessed) data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="maxValues">The number of values to be read for each item.</param>
            <param name="includeBounds">Whether the bounding item values should be returned.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <returns>A set of values, qualities and timestamps within the requested time range for each item.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.ReadRaw(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,System.Int32,System.Boolean,Technosoftware.DaAeHdaClient.OpcItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadValuesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to read raw data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="maxValues">The number of values to be read for each item.</param>
            <param name="includeBounds">Whether the bounding item values should be returned.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.AdviseRaw(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,System.Decimal,Technosoftware.DaAeHdaClient.OpcItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaDataUpdateEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Requests that the server periodically send notifications when new data becomes available for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="updateInterval">The frequency, in seconds, that the server should check for new data.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.PlaybackRaw(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,System.Int32,System.Decimal,System.Decimal,Technosoftware.DaAeHdaClient.OpcItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaDataUpdateEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Begins the playback raw data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="maxValues">The number of values to be read for each item.</param>      
            <param name="updateInterval">The frequency, in seconds, that the server send data.</param>
            <param name="playbackDuration">The duration, in seconds, of the timespan returned with each update.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.ReadProcessed(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,System.Decimal,Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[])">
            <summary>
            Reads processed data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="resampleInterval">The interval between returned values.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <returns>A set of values, qualities and timestamps within the requested time range for each item.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.ReadProcessed(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,System.Decimal,Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadValuesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to read processed data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="resampleInterval">The interval between returned values.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.AdviseProcessed(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,System.Decimal,System.Int32,Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaDataUpdateEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Requests that the server periodically send notifications when new data becomes available for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="resampleInterval">The interval between returned values.</param>
            <param name="numberOfIntervals">The number of resample intervals that the server should return in each callback.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.PlaybackProcessed(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,System.Decimal,System.Int32,System.Decimal,Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaDataUpdateEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Begins the playback of processed data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="resampleInterval">The interval between returned values.</param>
            <param name="numberOfIntervals">The number of resample intervals that the server should return in each callback.</param>
            <param name="updateInterval">The frequency, in seconds, that the server send data.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.ReadAtTime(System.DateTime[],Technosoftware.DaAeHdaClient.OpcItem[])">
            <summary>
            Reads data from the historian database for a set of items at specific times.
            </summary>
            <param name="timestamps">The set of timestamps to use when reading items values.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <returns>A set of values, qualities and timestamps within the requested time range for each item.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.ReadAtTime(System.DateTime[],Technosoftware.DaAeHdaClient.OpcItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadValuesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to read item values at specific times.
            </summary>
            <param name="timestamps">The set of timestamps to use when reading items values.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.ReadModified(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,System.Int32,Technosoftware.DaAeHdaClient.OpcItem[])">
            <summary>
            Reads item values that have been deleted or replaced.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="maxValues">The number of values to be read for each item.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <returns>A set of values, qualities and timestamps within the requested time range for each item.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.ReadModified(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,System.Int32,Technosoftware.DaAeHdaClient.OpcItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadValuesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to read item values that have been deleted or replaced.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="maxValues">The number of values to be read for each item.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.ReadAttributes(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.OpcItem,System.Int32[])">
            <summary>
            Reads the current or historical values for the attributes of an item.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="item">The item to read (must include the item name).</param>
            <param name="attributeIDs">The attributes to read.</param>
            <returns>A set of attribute values for each requested attribute.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.ReadAttributes(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.OpcItem,System.Int32[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadAttributesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to read the attributes of an item.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="item">The item to read (must include the item name).</param>
            <param name="attributeIDs">The attributes to read.</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the attribute ids.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.ReadAnnotations(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.OpcItem[])">
            <summary>
            Reads any annotations for an item within the a time interval.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <returns>A set of annotations within the requested time range for each item.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.ReadAnnotations(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.OpcItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadAnnotationsCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to read the annotations for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.InsertAnnotations(Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection[])">
            <summary>
            Inserts annotations for one or more items.
            </summary>
            <param name="items">A list of annotations to add for each item (must include the item name).</param>
            <returns>The results of the insert operation for each annotation set.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.InsertAnnotations(Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaUpdateCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to inserts annotations for one or more items.
            </summary>
            <param name="items">A list of annotations to add for each item (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.Insert(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection[],System.Boolean)">
            <summary>
            Inserts the values into the history database for one or more items. 
            </summary>
            <param name="items">The set of values to insert.</param>
            <param name="replace">Whether existing values should be replaced.</param>
            <returns></returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.Insert(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection[],System.Boolean,System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaUpdateCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to inserts values for one or more items.
            </summary>
            <param name="items">The set of values to insert.</param>
            <param name="replace">Whether existing values should be replaced.</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.Replace(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection[])">
            <summary>
            Replace the values into the history database for one or more items. 
            </summary>
            <param name="items">The set of values to replace.</param>
            <returns></returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.Replace(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaUpdateCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to replace values for one or more items.
            </summary>
            <param name="items">The set of values to replace.</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.Delete(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.OpcItem[])">
            <summary>
            Deletes the values with the specified time domain for one or more items.
            </summary>
            <param name="startTime">The beginning of the history period to delete.</param>
            <param name="endTime">The end of the history period to be delete.</param>
            <param name="items">The set of items to delete (must include the item name).</param>
            <returns>The results of the delete operation for each item.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.Delete(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.OpcItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaUpdateCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to delete values for one or more items.
            </summary>
            <param name="startTime">The beginning of the history period to delete.</param>
            <param name="endTime">The end of the history period to be delete.</param>
            <param name="items">The set of items to delete (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.DeleteAtTime(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection[])">
            <summary>
            Deletes the values at the specified times for one or more items. 
            </summary>
            <param name="items">The set of timestamps to delete for one or more items.</param>
            <returns>The results of the operation for each timestamp.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.DeleteAtTime(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaUpdateCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to delete values for one or more items at a specified times.
            </summary>
            <param name="items">The set of timestamps to delete for one or more items.</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.CancelRequest(Technosoftware.DaAeHdaClient.IOpcRequest)">
            <summary>
            Cancels an asynchronous request.
            </summary>
            <param name="request">The state object for the request to cancel.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.ITsCHdaServer.CancelRequest(Technosoftware.DaAeHdaClient.IOpcRequest,Technosoftware.DaAeHdaClient.Hda.TsCHdaCancelCompleteEventHandler)">
            <summary>
            Cancels an asynchronous request.
            </summary>
            <param name="request">The state object for the request to cancel.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaCallbackExceptionEventHandler">
            <summary>
            Used to receive notifications when an exception occurs while processing a callback.
            </summary>
            <param name="request">An identifier for the request assigned by the caller.</param>
            <param name="exception">Exception which occured.</param>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaDataUpdateEventHandler">
            <summary>
            Used to receive data update notifications.
            </summary>
            <param name="request">An identifier for the request assigned by the caller.</param>
            <param name="results">A collection of results.</param>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaReadValuesCompleteEventHandler">
            <summary>
            Used to receive notifications when a read values request completes.
            </summary>
            <param name="request">An identifier for the request assigned by the caller.</param>
            <param name="results">A collection of results.</param>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaReadAttributesCompleteEventHandler">
            <summary>
            Used to receive notifications when a read attributes request completes.
            </summary>
            <param name="request">An identifier for the request assigned by the caller.</param>
            <param name="results">A collection of results.</param>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaReadAnnotationsCompleteEventHandler">
            <summary>
            Used to receive notifications when a read annotations request completes.
            </summary>
            <param name="request">An identifier for the request assigned by the caller.</param>
            <param name="results">A collection of results.</param>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaUpdateCompleteEventHandler">
            <summary>
            Used to receive notifications when an update request completes.
            </summary>
            <param name="request">An identifier for the request assigned by the caller.</param>
            <param name="results">A collection of results.</param>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaCancelCompleteEventHandler">
            <summary>
            Used to receive notifications when a request is cancelled.
            </summary>
            <param name="request">An identifier for the request assigned by the caller.</param>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaItem">
            <summary>
            Describes an item used in a request for processed or raw data.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItem.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItem.#ctor(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Initializes object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItem.#ctor(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem)">
            <summary>
            Initializes object with the specified Item object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItem.Aggregate">
            <summary>
            The aggregate to use to process the data.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection">
            <summary>
            A collection of item attribute values passed to write or returned from a read operation.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.#ctor(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Initializes object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.#ctor(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection)">
            <summary>
            Initializes object with the specified ItemAttributeCollection object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.Item(System.Int32)">
            <summary>
            Accessor for elements in the collection.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.Result">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.StartTime">
            <summary>
            The actual start time used by a server while processing a request.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.EndTime">
            <summary>
            The actual end time used by a server while processing a request.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local time).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.CopyTo(Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.Insert(System.Int32,Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.Remove(Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.Contains(Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.IndexOf(Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemAttributeCollection.Add(Technosoftware.DaAeHdaClient.Hda.TsCHdaAttributeValueCollection)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection">
            <summary>
            A collection of items.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.#ctor(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection)">
            <summary>
            Initializes object with the specified ResultCollection object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.Item(System.Int32)">
            <summary>
             Gets the item at the specified index.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.Item(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Gets the first item with the specified item id.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.CopyTo(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.Insert(System.Int32,Technosoftware.DaAeHdaClient.Hda.TsCHdaItem)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.Remove(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.Contains(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.IndexOf(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemCollection.Add(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemResult">
            <summary>
            Describes the results for an item used in a read processed or raw data request.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemResult.#ctor">
            <summary>
            Initialize object with default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemResult.#ctor(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Initialize object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemResult.#ctor(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem)">
            <summary>
            Initializes object with the specified Item object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemResult.#ctor(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemResult)">
            <summary>
            Initialize object with the specified ItemResult object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemResult.Result">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemResult.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection">
            <summary>
            A collection of results passed to write or returned from an insert, replace or delete operation.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.#ctor(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Initializes object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.#ctor(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection)">
            <summary>
            Initializes object with the specified ItemTimeCollection object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.Item(System.Int32)">
            <summary>
            Accessor for elements in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.CopyTo(System.DateTime[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.Insert(System.Int32,System.DateTime)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.Remove(System.DateTime)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.Contains(System.DateTime)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.IndexOf(System.DateTime)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection.Add(System.DateTime)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValue">
            <summary>
            A value of an item at in instant of time.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValue.Value">
            <summary>
            The value of the item.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValue.Timestamp">
            <summary>
            The timestamp associated with the value.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValue.Quality">
            <summary>
            The quality associated with the value when it was acquired from the data source.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValue.HistorianQuality">
            <summary>
            The quality associated with the value when it was retrieved from the hiatorian database.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValue.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection">
            <summary>
            A collection of item values passed to write or returned from a read operation.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.#ctor(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Initializes object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.#ctor(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem)">
            <summary>
            Initializes object with the specified Item object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.#ctor(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection)">
            <summary>
            Initializes object with the specified ItemValueCollection object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.Item(System.Int32)">
            <summary>
            Accessor for elements in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.AddRange(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection)">
            <summary>
            Appends another value collection to the collection.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.Result">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.StartTime">
            <summary>
            The actual start time used by a server while processing a request.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.EndTime">
            <summary>
            The actual end time used by a server while processing a request.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local time).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.CopyTo(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValue[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.Insert(System.Int32,Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValue)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.Remove(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValue)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.Contains(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValue)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.IndexOf(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValue)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection.Add(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValue)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaResult">
            <summary>
            A result associated with a single item value.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResult.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResult.#ctor(Technosoftware.DaAeHdaClient.OpcResult)">
            <summary>
            Initializes the object with the specified result id.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResult.#ctor(Technosoftware.DaAeHdaClient.IOpcResult)">
            <summary>
            Initializes the object with the specified result object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaResult.Result">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaResult.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResult.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaModifiedValue">
            <summary>
            A value of an item at in instant of time that has be deleted or replaced.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaModifiedValue.ModificationTime">
            <summary>
            The time when the value was deleted or replaced.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaModifiedValue.EditType">
            <summary>
            Whether the value was deleted or replaced.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaModifiedValue.User">
            <summary>
            The user who modified the item value.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaModifiedValueCollection">
            <summary>
            A collection of modified item values with a result code indicating the results of a read operation.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaModifiedValueCollection.#ctor">
            <summary>
            Initialize object with default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaModifiedValueCollection.#ctor(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Initialize object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaModifiedValueCollection.#ctor(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem)">
            <summary>
            Initializes object with the specified Item object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaModifiedValueCollection.#ctor(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection)">
            <summary>
            Initializes object with the specified ItemValueCollection object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaModifiedValueCollection.Item(System.Int32)">
            <summary>
            Accessor for elements in the collection.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaOperator">
            <summary>
            The set of possible operators to use when applying an item attribute filter.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaOperator.Equal">
            <summary>
            The attribute value is equal (or matches) to the filter.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaOperator.Less">
            <summary>
            The attribute value is less than the filter.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaOperator.LessEqual">
            <summary>
            The attribute value is less than or equal to the filter.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaOperator.Greater">
            <summary>
            The attribute value is greater than the filter.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaOperator.GreaterEqual">
            <summary>
            The attribute value is greater than or equal to the filter.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaOperator.NotEqual">
            <summary>
            The attribute value is not equal (or does not match)to the filter.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaQuality">
            <summary>
            Defines possible HDA quality codes.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaQuality.ExtraData">
            <summary>
            More than one piece of data that may be hidden exists at same timestamp.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaQuality.Interpolated">
            <summary>
            Interpolated data value.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaQuality.Raw">
            <summary>
            Raw data
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaQuality.Calculated">
            <summary>
            Calculated data value, as would be returned from a ReadProcessed call.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaQuality.NoBound">
            <summary>
            No data found to provide upper or lower bound value. 
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaQuality.NoData">
            <summary>
            Bad No data collected. Archiving not active (for item or all items).
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaQuality.DataLost">
            <summary>
            Collection started/stopped/lost.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaQuality.Conversion">
            <summary>
            Scaling or conversion error. 
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaQuality.Partial">
            <summary>
            Aggregate value is for an incomplete interval. 
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaRelativeTime">
            <summary>
            Possible base or offset types for relative times.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaRelativeTime.Now">
            <summary>
            Start from the current time.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaRelativeTime.Second">
            <summary>
            The start of the current second or an offset in seconds.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaRelativeTime.Minute">
            <summary>
            The start of the current minutes or an offset in minutes.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaRelativeTime.Hour">
            <summary>
            The start of the current hour or an offset in hours.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaRelativeTime.Day">
            <summary>
            The start of the current day or an offset in days.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaRelativeTime.Week">
            <summary>
            The start of the current week or an offset in weeks.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaRelativeTime.Month">
            <summary>
            The start of the current month or an offset in months.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaRelativeTime.Year">
            <summary>
            The start of the current year or an offset in years.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection">
            <summary>
            A collection of results passed to write or returned from an insert, replace or delete operation.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.#ctor(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Initializes object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.#ctor(Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection)">
            <summary>
            Initializes object with the specified ResultCollection object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.Item(System.Int32)">
            <summary>
            Accessor for elements in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.CopyTo(Technosoftware.DaAeHdaClient.Hda.TsCHdaResult[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.Insert(System.Int32,Technosoftware.DaAeHdaClient.Hda.TsCHdaResult)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.Remove(Technosoftware.DaAeHdaClient.Hda.TsCHdaResult)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.Contains(Technosoftware.DaAeHdaClient.Hda.TsCHdaResult)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.IndexOf(Technosoftware.DaAeHdaClient.Hda.TsCHdaResult)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaResultCollection.Add(Technosoftware.DaAeHdaClient.Hda.TsCHdaResult)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer">
            <summary>
            An in-process object used to access OPC Data Access servers.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.#ctor(Technosoftware.DaAeHdaClient.OpcFactory,Technosoftware.DaAeHdaClient.OpcUrl)">
            <summary>
            Initializes the object with a factory and a default OpcUrl.
            </summary>
            <param name="factory">The TsOpcFactory used to connect to remote servers.</param>
            <param name="url">The network address of a remote server.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construct a server by de-serializing its OpcUrl from the stream.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.Attributes">
            <summary>
            Returns a collection of item attributes supported by the server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.Aggregates">
            <summary>
            Returns a collection of aggregates supported by the server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.Items">
            <summary>
            Returns a collection of items with server handles assigned to them.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.Trends">
            <summary>
            Returns a collection of trends created for the server.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.Connect(Technosoftware.DaAeHdaClient.OpcUrl,Technosoftware.DaAeHdaClient.OpcConnectData)">
            <summary>
            Connects to the server with the specified OpcUrl and credentials.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.Disconnect">
            <summary>
            Disconnects from the server and releases all network resources.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.GetServerStatus">
            <summary>
            Returns the current server status.
            </summary>
            <returns>The current server status.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.GetAttributes">
            <summary>
            Returns the item attributes supported by the server.
            </summary>
            <returns>The a set of item attributes and their descriptions.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.GetAggregates">
            <summary>
            Returns the aggregates supported by the server.
            </summary>
            <returns>The a set of aggregates and their descriptions.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.CreateBrowser(Technosoftware.DaAeHdaClient.Hda.TsCHdaBrowseFilter[],Technosoftware.DaAeHdaClient.OpcResult[]@)">
            <summary>
            Creates a object used to browse the server address space.
            </summary>
            <param name="filters">The set of attribute filters to use when browsing.</param>
            <param name="results">A result code for each individual filter.</param>
            <returns>A browser object that must be released by calling Dispose().</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.CreateItems(Technosoftware.DaAeHdaClient.OpcItem[])">
            <summary>
            Creates a set of items.
            </summary>
            <param name="items">The identifiers for the items to create.</param>
            <returns>The results for each item containing the server handle and result code.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.ReleaseItems(Technosoftware.DaAeHdaClient.OpcItem[])">
            <summary>
            Releases a set of previously created items.
            </summary>
            <param name="items">The server handles for the items to release.</param>
            <returns>The results for each item containing the result code.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.ValidateItems(Technosoftware.DaAeHdaClient.OpcItem[])">
            <summary>
            Validates a set of items.
            </summary>
            <param name="items">The identifiers for the items to validate.</param>
            <returns>The results for each item containing the result code.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.ReadRaw(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,System.Int32,System.Boolean,Technosoftware.DaAeHdaClient.OpcItem[])">
            <summary>
            Reads raw (unprocessed) data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="maxValues">The number of values to be read for each item.</param>
            <param name="includeBounds">Whether the bounding item values should be returned.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <returns>A set of values, qualities and timestamps within the requested time range for each item.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.ReadRaw(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,System.Int32,System.Boolean,Technosoftware.DaAeHdaClient.OpcItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadValuesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to read raw data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="maxValues">The number of values to be read for each item.</param>
            <param name="includeBounds">Whether the bounding item values should be returned.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.AdviseRaw(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,System.Decimal,Technosoftware.DaAeHdaClient.OpcItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaDataUpdateEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Requests that the server periodically send notifications when new data becomes available for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="updateInterval">The frequency, in seconds, that the server should check for new data.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.PlaybackRaw(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,System.Int32,System.Decimal,System.Decimal,Technosoftware.DaAeHdaClient.OpcItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaDataUpdateEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Begins the playback raw data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="maxValues">The number of values to be read for each item.</param>      
            <param name="updateInterval">The frequency, in seconds, that the server send data.</param>
            <param name="playbackDuration">The duration, in seconds, of the timespan returned with each update.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.ReadProcessed(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,System.Decimal,Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[])">
            <summary>
            Reads processed data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="resampleInterval">The interval between returned values.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <returns>A set of values, qualities and timestamps within the requested time range for each item.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.ReadProcessed(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,System.Decimal,Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadValuesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to read processed data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="resampleInterval">The interval between returned values.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.AdviseProcessed(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,System.Decimal,System.Int32,Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaDataUpdateEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Requests that the server periodically send notifications when new data becomes available for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="resampleInterval">The interval between returned values.</param>
            <param name="numberOfIntervals">The number of resample intervals that the server should return in each callback.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.PlaybackProcessed(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,System.Decimal,System.Int32,System.Decimal,Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaDataUpdateEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Begins the playback of processed data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="resampleInterval">The interval between returned values.</param>
            <param name="numberOfIntervals">The number of resample intervals that the server should return in each callback.</param>
            <param name="updateInterval">The frequency, in seconds, that the server send data.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.ReadAtTime(System.DateTime[],Technosoftware.DaAeHdaClient.OpcItem[])">
            <summary>
            Reads data from the historian database for a set of items at specific times.
            </summary>
            <param name="timestamps">The set of timestamps to use when reading items values.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <returns>A set of values, qualities and timestamps within the requested time range for each item.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.ReadAtTime(System.DateTime[],Technosoftware.DaAeHdaClient.OpcItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadValuesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to read item values at specific times.
            </summary>
            <param name="timestamps">The set of timestamps to use when reading items values.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.ReadModified(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,System.Int32,Technosoftware.DaAeHdaClient.OpcItem[])">
            <summary>
            Reads item values that have been deleted or replaced.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="maxValues">The number of values to be read for each item.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <returns>A set of values, qualities and timestamps within the requested time range for each item.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.ReadModified(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,System.Int32,Technosoftware.DaAeHdaClient.OpcItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadValuesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to read item values that have been deleted or replaced.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="maxValues">The number of values to be read for each item.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.ReadAttributes(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.OpcItem,System.Int32[])">
            <summary>
            Reads the current or historical values for the attributes of an item.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="item">The item to read (must include the item name).</param>
            <param name="attributeIDs">The attributes to read.</param>
            <returns>A set of attribute values for each requested attribute.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.ReadAttributes(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.OpcItem,System.Int32[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadAttributesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to read the attributes of an item.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="item">The item to read (must include the item name).</param>
            <param name="attributeIDs">The attributes to read.</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the attribute ids.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.ReadAnnotations(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.OpcItem[])">
            <summary>
            Reads any annotations for an item within the a time interval.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <returns>A set of annotations within the requested time range for each item.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.ReadAnnotations(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.OpcItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadAnnotationsCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to read the annotations for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="items">The set of items to read (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.InsertAnnotations(Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection[])">
            <summary>
            Inserts annotations for one or more items.
            </summary>
            <param name="items">A list of annotations to add for each item (must include the item name).</param>
            <returns>The results of the insert operation for each annotation set.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.InsertAnnotations(Technosoftware.DaAeHdaClient.Hda.TsCHdaAnnotationValueCollection[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaUpdateCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to inserts annotations for one or more items.
            </summary>
            <param name="items">A list of annotations to add for each item (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.Insert(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection[],System.Boolean)">
            <summary>
            Inserts the values into the history database for one or more items. 
            </summary>
            <param name="items">The set of values to insert.</param>
            <param name="replace">Whether existing values should be replaced.</param>
            <returns></returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.Insert(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection[],System.Boolean,System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaUpdateCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to inserts values for one or more items.
            </summary>
            <param name="items">The set of values to insert.</param>
            <param name="replace">Whether existing values should be replaced.</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.Replace(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection[])">
            <summary>
            Replace the values into the history database for one or more items. 
            </summary>
            <param name="items">The set of values to replace.</param>
            <returns></returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.Replace(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemValueCollection[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaUpdateCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to replace values for one or more items.
            </summary>
            <param name="items">The set of values to replace.</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.Delete(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.OpcItem[])">
            <summary>
            Deletes the values with the specified time domain for one or more items.
            </summary>
            <param name="startTime">The beginning of the history period to delete.</param>
            <param name="endTime">The end of the history period to be delete.</param>
            <param name="items">The set of items to delete (must include the item name).</param>
            <returns>The results of the delete operation for each item.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.Delete(Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.Hda.TsCHdaTime,Technosoftware.DaAeHdaClient.OpcItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaUpdateCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to delete values for one or more items.
            </summary>
            <param name="startTime">The beginning of the history period to delete.</param>
            <param name="endTime">The end of the history period to be delete.</param>
            <param name="items">The set of items to delete (must include the item name).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.DeleteAtTime(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection[])">
            <summary>
            Deletes the values at the specified times for one or more items. 
            </summary>
            <param name="items">The set of timestamps to delete for one or more items.</param>
            <returns>The results of the operation for each timestamp.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.DeleteAtTime(Technosoftware.DaAeHdaClient.Hda.TsCHdaItemTimeCollection[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaUpdateCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Sends an asynchronous request to delete values for one or more items at a specified times.
            </summary>
            <param name="items">The set of timestamps to delete for one or more items.</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.CancelRequest(Technosoftware.DaAeHdaClient.IOpcRequest)">
            <summary>
            Cancels an asynchronous request.
            </summary>
            <param name="request">The state object for the request to cancel.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.CancelRequest(Technosoftware.DaAeHdaClient.IOpcRequest,Technosoftware.DaAeHdaClient.Hda.TsCHdaCancelCompleteEventHandler)">
            <summary>
            Cancels an asynchronous request.
            </summary>
            <param name="request">The state object for the request to cancel.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaServer.Clone">
            <summary>
            Returns an unconnected copy of the server with the same OpcUrl. 
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaServerState">
            <summary>
            The set of possible server states.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaServerState.Up">
            <summary>
            The historian is running.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaServerState.Down">
            <summary>
            The historian is not running.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Hda.TsCHdaServerState.Indeterminate">
            <summary>
            The status of the historian is indeterminate.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaTime">
            <summary>
            A time specified as either an absolute or relative value.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTime.#ctor">
            <summary>
            Initializes the object with its default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTime.#ctor(System.DateTime)">
            <summary>
            Initializes the object with an absolute time.
            </summary>
            <param name="time">The absolute time.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTime.#ctor(System.String)">
            <summary>
            Initializes the object with a relative time.
            </summary>
            <param name="time">The relative time.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTime.IsRelative">
            <summary>
            Whether the time is a relative or absolute time.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTime.AbsoluteTime">
            <summary>
            The time as absolute value.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTime.BaseTime">
            <summary>
            The base for a relative time value.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTime.Offsets">
            <summary>
            The set of offsets to be applied to the base of a relative time.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTime.ResolveTime">
            <summary>
            Converts a relative time to an absolute time by using the system clock.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTime.ToString">
            <summary>
            Returns a String that represents the current Object.
            </summary>
            <returns>A String that represents the current Object.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTime.Parse(System.String)">
            <summary>
            Parses a string representation of a time.
            </summary>
            <param name="buffer">The string representation to parse.</param>
            <returns>A Time object initialized with the string.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTime.BaseTypeToString(Technosoftware.DaAeHdaClient.Hda.TsCHdaRelativeTime)">
            <summary>
            Converts a base time to a string token.
            </summary>
            <param name="baseTime">The base time value to convert.</param>
            <returns>The string token representing the base time.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffset">
            <summary>
            An offset component of a relative time.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffset.Value">
            <summary>
            A signed value indicated the magnitude of the time offset.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffset.Type">
            <summary>
            The time interval to use when applying the offset.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffset.OffsetTypeToString(Technosoftware.DaAeHdaClient.Hda.TsCHdaRelativeTime)">
            <summary>
            Converts a offset type to a string token.
            </summary>
            <param name="offsetType">The offset type value to convert.</param>
            <returns>The string token representing the offset type.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffsetCollection">
            <summary>
            A collection of time offsets used in a relative time.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffsetCollection.Item(System.Int32)">
            <summary>
            Accessor for elements in the time offset collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffsetCollection.Add(System.Int32,Technosoftware.DaAeHdaClient.Hda.TsCHdaRelativeTime)">
            <summary>
            Adds a new offset to the collection.
            </summary>
            <param name="value">The offset value.</param>
            <param name="type">The offset type.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffsetCollection.ToString">
            <summary>
            Returns a String that represents the current Object.
            </summary>
            <returns>A String that represents the current Object.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffsetCollection.Parse(System.String)">
            <summary>
            Initializes the collection from a set of offsets contained in a string. 
            </summary>
            <param name="buffer">A string containing the time offset fields.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffsetCollection.CopyTo(Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffset[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffsetCollection.Insert(System.Int32,Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffset)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffsetCollection.Remove(Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffset)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffsetCollection.Contains(Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffset)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffsetCollection.IndexOf(Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffset)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffsetCollection.Add(Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffset)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTimeOffsetCollection.CreateOffset(System.Boolean,System.Int32,System.String)">
            <summary>
            Creates a new offset object from the components extracted from a string.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend">
            <summary>
            Manages a set of items and a set of read, update, subscribe or playback request parameters. 
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.#ctor(Technosoftware.DaAeHdaClient.Hda.TsCHdaServer)">
            <summary>
            Initializes the object with the specified server.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construct a server by de-serializing its OpcUrl from the stream.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.Server">
            <summary>
            The server containing the data in the trend.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.Name">
            <summary>
            A name for the trend used to display to the user.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.Aggregate">
            <summary>
            The default aggregate to use for the trend.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.StartTime">
            <summary>
            The start time for the trend.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.EndTime">
            <summary>
            The end time for the trend.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.MaxValues">
            <summary>
            The maximum number of data points per item in the trend.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.IncludeBounds">
            <summary>
            Whether the trend includes the bounding values.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ResampleInterval">
            <summary>
            The re-sampling interval (in seconds) to use for processed reads.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.Timestamps">
            <summary>
            The discrete set of timestamps for the trend.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.UpdateInterval">
            <summary>
            The interval between updates from the server when subscribing to new data.
            </summary>
            <remarks>This specifies a number of seconds for raw data or the number of re-sample intervals for processed data.</remarks>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.SubscriptionActive">
            <summary>
            Whether the server is currently sending updates for the trend.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.PlaybackInterval">
            <summary>
            The interval between updates from the server when playing back existing data. 
            </summary>
            <remarks>This specifies a number of seconds for raw data and for processed data.</remarks>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.PlaybackDuration">
            <summary>
            The amount of data that should be returned with each update when playing back existing data.
            </summary>
            <remarks>This specifies a number of seconds for raw data or the number of re-sample intervals for processed data.</remarks>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.PlaybackActive">
            <summary>
            Whether the server is currently playing data back for the trend.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.Items">
            <summary>
            The items
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.GetItems">
            <summary>
            Returns the items in a trend as an array.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.AddItem(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Creates a handle for an item and adds it to the trend.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.RemoveItem(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem)">
            <summary>
            Removes an item from the trend.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ClearItems">
            <summary>
            Removes all items from the trend.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.Read">
            <summary>
            Reads the values for a for all items in the trend.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.Read(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[])">
            <summary>
            Reads the values for a for a set of items. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.Read(System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadValuesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Starts an asynchronous read request for all items in the trend. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.Read(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadValuesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Starts an asynchronous read request for a set of items. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadRaw">
            <summary>
            Reads the raw values for a for all items in the trend.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadRaw(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[])">
            <summary>
            Reads the raw values for a for a set of items. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadRaw(System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadValuesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Starts an asynchronous read raw request for all items in the trend. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadRaw(Technosoftware.DaAeHdaClient.OpcItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadValuesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Starts an asynchronous read raw request for a set of items. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadProcessed">
            <summary>
            Reads the processed values for a for all items in the trend.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadProcessed(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[])">
            <summary>
            Reads the processed values for a for a set of items. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadProcessed(System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadValuesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Starts an asynchronous read processed request for all items in the trend. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadProcessed(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadValuesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Starts an asynchronous read processed request for a set of items. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.Subscribe(System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaDataUpdateEventHandler)">
            <summary>
            Establishes a subscription for the trend.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.SubscribeCancel">
            <summary>
            Cancels an existing subscription.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.Playback(System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaDataUpdateEventHandler)">
            <summary>
            Begins playback of data for a trend.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.PlaybackCancel">
            <summary>
            Cancels an existing playback operation.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadModified">
            <summary>
            Reads the modified values for all items in the trend.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadModified(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[])">
            <summary>
            Reads the modified values for a for a set of items. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadModified(System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadValuesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Starts an asynchronous read modified request for all items in the trend.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadModified(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadValuesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Starts an asynchronous read modified request for a set of items. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadAtTime">
            <summary>
            Reads the values at specific times for a for all items in the trend.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadAtTime(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[])">
            <summary>
            Reads the values at specific times for a for a set of items. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadAtTime(System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadValuesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Starts an asynchronous read values at specific times request for all items in the trend. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadAtTime(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadValuesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Starts an asynchronous read values at specific times request for a set of items.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadAttributes(Technosoftware.DaAeHdaClient.OpcItem,System.Int32[])">
            <summary>
            Reads the attributes at specific times for a for an item. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadAttributes(Technosoftware.DaAeHdaClient.OpcItem,System.Int32[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadAttributesCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Starts an asynchronous read attributes at specific times request for an item. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadAnnotations">
            <summary>
            Reads the annotations for a for all items in the trend.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadAnnotations(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[])">
            <summary>
            Reads the annotations for a for a set of items. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadAnnotations(System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadAnnotationsCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Starts an asynchronous read annotations request for all items in the trend.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ReadAnnotations(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaReadAnnotationsCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Starts an asynchronous read annotations request for a set of items. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.Delete">
            <summary>
            Deletes the raw values for a for all items in the trend.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.Delete(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[])">
            <summary>
            Deletes the raw values for a for a set of items. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.Delete(System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaUpdateCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Starts an asynchronous delete raw request for all items in the trend. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.Delete(Technosoftware.DaAeHdaClient.OpcItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaUpdateCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Starts an asynchronous delete raw request for a set of items. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.DeleteAtTime">
            <summary>
            Deletes the values at specific times for a for all items in the trend.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.DeleteAtTime(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[])">
            <summary>
            Deletes the values at specific times for a for a set of items. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.DeleteAtTime(System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaUpdateCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Starts an asynchronous delete values at specific times request for all items in the trend. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.DeleteAtTime(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[],System.Object,Technosoftware.DaAeHdaClient.Hda.TsCHdaUpdateCompleteEventHandler,Technosoftware.DaAeHdaClient.IOpcRequest@)">
            <summary>
            Starts an asynchronous delete values at specific times request for a set of items.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.SetServer(Technosoftware.DaAeHdaClient.Hda.TsCHdaServer)">
            <summary>
            Used to set the server after the object is deserialized.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend.ApplyDefaultAggregate(Technosoftware.DaAeHdaClient.Hda.TsCHdaItem[])">
            <summary>
            Creates a copy of the items that have a valid aggregate set.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection">
            <summary>
            A collection of items.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.#ctor(Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection)">
            <summary>
            Initializes object with the specified TrendValueCollection object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.Item(System.Int32)">
            <summary>
            Gets the trend at the specified index.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.Item(System.String)">
            <summary>
            Gets the first trend with the specified name.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.CopyTo(Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.Insert(System.Int32,Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.Remove(Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.Contains(Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.IndexOf(Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Hda.TsCHdaTrendCollection.Add(Technosoftware.DaAeHdaClient.Hda.TsCHdaTrend)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.IOpcBrowsePosition">
            <summary>
            Maintains the state of a browse operation
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.IOpcDiscovery">
            <summary>
            This interface is used to discover OPC servers on the network.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.IOpcDiscovery.EnumerateHosts">
            <summary>
            Returns a list of host names which could contain OPC servers.
            </summary>
            <returns>A array of strings that are valid network host names.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.IOpcDiscovery.GetAvailableServers(Technosoftware.DaAeHdaClient.OpcSpecification)">
            <summary>
            Returns a list of servers that support an OPC specification.
            </summary>
            <param name="specification">A unique identifier for an OPC specification.</param>
            <returns>An array of unconnected OPC server obejcts on the local machine.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.IOpcDiscovery.GetAvailableServers(Technosoftware.DaAeHdaClient.OpcSpecification,System.String,Technosoftware.DaAeHdaClient.OpcConnectData)">
            <summary>
            Returns a list of servers that support an OPC specification on remote machine.
            </summary>
            <param name="specification">A unique identifier for an OPC specification.</param>
            <param name="host">The network host name of the machine to search for servers.</param>
            <param name="connectData">Any necessary user authentication or protocol configuration information.</param>
            <returns>An array of unconnected OPC server objects.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.IOpcFactory">
            <summary>
            A interface to a factory used to instantiate servers.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.IOpcFactory.ForceDa20Usage">
            <summary>
            Can be used to force OPC DA 2.0 even if OPC DA 3.0 server features are available
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.IOpcFactory.CreateInstance(Technosoftware.DaAeHdaClient.OpcUrl,Technosoftware.DaAeHdaClient.OpcConnectData)">
            <summary>
            Creates a new instance of the server at the specified URL.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.IOpcRequest">
            <summary>
            Maintains the state of an asynchronous request.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.IOpcRequest.Handle">
            <summary>
            An unique identifier, assigned by the client, for the request.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.IOpcResult">
            <summary>
            A interface used to access result information associated with a single item/value.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.IOpcResult.Result">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.IOpcResult.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.IOpcServer">
            <summary>
            Defines functionality that is common to all OPC servers.
            </summary>
        </member>
        <member name="E:Technosoftware.DaAeHdaClient.IOpcServer.ServerShutdownEvent">
            <summary>
            An event to receive server shutdown notifications. This event can be used by the
            client so that the server can request that the client should disconnect from the
            server.
            </summary>
            <remarks>
            The OpcServerShutdownEvent event will be called when the server needs to
            shutdown. The client should release all connections and interfaces for this
            server.<br/>
            A client which is connected to multiple OPCServers (for example Data access and/or
            other servers such as Alarms and events servers from one or more vendors) should
            maintain separate shutdown callbacks for each server since any server can shut down
            independently of the others.
            </remarks>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.IOpcServer.GetLocale">
            <summary>
            The locale used in any error messages or results returned to the client.
            </summary>
            <returns>The locale name in the format "[languagecode]-[country/regioncode]".</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.IOpcServer.SetLocale(System.String)">
            <summary>
            Sets the locale used in any error messages or results returned to the client.
            </summary>
            <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
            <returns>A locale that the server supports and is the best match for the requested locale.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.IOpcServer.SetClientName(System.String)">
            <summary>
            Allows the client to optionally register a client name with the server. This is included primarily for debugging purposes. The recommended behavior is that the client set his Node name and EXE name here.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.IOpcServer.GetSupportedLocales">
            <summary>
            Returns the locales supported by the server
            </summary>
            <remarks>The first element in the array must be the default locale for the server.</remarks>
            <returns>An array of locales with the format "[languagecode]-[country/regioncode]".</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.IOpcServer.GetErrorText(System.String,Technosoftware.DaAeHdaClient.OpcResult)">
            <summary>
            Returns the localized text for the specified result code.
            </summary>
            <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
            <param name="resultId">The result code identifier.</param>
            <returns>A message localized for the best match for the requested locale.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcServerShutdownEventHandler">
            <summary>
            A delegate to receive shutdown notifications from the server. This delegate can
            be used by the client so that the server can request that the client should disconnect
            from the server.
            </summary>
            <param name="reason">
            A text string provided by the server indicating the reason for the shutdown. The
            server may pass a null or empty string if no reason is provided.
            </param>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.LicenseHandler">
            <summary>
            Manages the license to enable the different product versions.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.LicenseHandler.ProductLicense">
            <summary>
            The possible products.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.LicenseHandler.ProductLicense.None">
            <summary>
            No product selected
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.LicenseHandler.ProductLicense.Client">
            <summary>
            OPC DA/AE/HDA Client .NET
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.LicenseHandler.ProductLicense.Server">
            <summary>
            OPC DA/AE Server .NET
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.LicenseHandler.ProductLicense.Evaluation">
            <summary>
            Evaluation
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.LicenseHandler.ProductLicense.Expired">
            <summary>
            Expired Evaluation or License
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.LicenseHandler.ProductFeature">
            <summary>
            The possible products.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.LicenseHandler.ProductFeature.None">
            <summary>
            Basic OPC Features enabled
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.LicenseHandler.ProductFeature.DataAccess">
            <summary>
            OPC DataAccess enabled
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.LicenseHandler.ProductFeature.AlarmsConditions">
            <summary>
            OPC Alarms and Events enabled
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.LicenseHandler.ProductFeature.HistoricalAccess">
            <summary>
            OPC Historical Dara Access enabled
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.LicenseHandler.ProductFeature.AllFeatures">
            <summary>
            All supported OPC DA/AE/HDA Features enabled
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.LicenseHandler.LicenseParameter">
            <summary>
            License Validation Parameters String for the OPC UA Solution .NET
            </summary> 
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.LicenseHandler.IsLicensed">
            <summary>
            Returns whether the product is a licensed product.
            </summary>
            <returns>Returns true if the product is licensed; false if it is used in evaluation mode or license is expired.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.LicenseHandler.IsEvaluation">
            <summary>
            Returns whether the product is an evaluation version.
            </summary>
            <returns>Returns true if the product is an evaluation; false if it is a product or license is expired.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.LicenseHandler.IsExpired">
            <summary>
            Indicates whether the evaluation period and a restart is required or not.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.LicenseHandler.Version">
            <summary>
            Returns the Version of the product.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.LicenseHandler.LicensedProduct">
            <summary>
            Returns the licensed products.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.LicenseHandler.LicensedFeatures">
            <summary>
            Returns the licensed OPC UA Features.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.LicenseHandler.Product">
            <summary>
            Returns the licensed product name.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.LicenseHandler.ProductInformation">
            <summary>
            Returns the product information.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.LicenseHandler.Validate(System.String)">
            <summary>
            Validate the license.
            </summary>
            <param name="serialNumber">Serial Number</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.LicenseHandler.CheckLicense(System.String)">
            <summary>
            Validate the license.
            </summary>
            <param name="serialNumber">Serial Number</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.LicenseHandler.CheckLicense">
            <summary>
            Check if the licensed product provided through ValidateLicense qualifies for the given application type and license edition.
            </summary>
            <returns>True if the license qualifies for the requested application and edition or if the evaluation period is still running; otherwise False.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.LicenseHandler.ValidateFeatures(Technosoftware.DaAeHdaClient.LicenseHandler.ProductFeature,System.Boolean)">
            <summary>
            Core Feature validation
            </summary>
            <returns>True if valid; false otherwise</returns>
            <exception cref="T:Technosoftware.DaAeHdaClient.BadInternalErrorException"></exception>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.LicenseHandler.CheckProductFeature(System.String)">
            <summary>
            Validate the license.
            </summary>
            <param name="licenseKey">The license key</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.LicenseHandler.CheckLicenseClient(System.String)">
            <summary>
            Validate the license.
            </summary>
            <param name="licenseKey">The license key</param>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcConnectData">
            <summary>
            Contains protocol dependent connection and authentication information.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcConnectData.UserIdentity">
            <summary>
            The credentials to submit to the proxy server for authentication.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcConnectData.LicenseKey">
            <summary>
            The license key used to connect to the server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcConnectData.ForceDa20Usage">
            <summary>
            Always uses the DA20 interfaces even if DA3.0 is supported.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcConnectData.UseConnectSecurity">
            <summary>
            Use DCOM connect level security (may be needed for backward compatibility).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcConnectData.GetCredential(System.Uri,System.String)">
            <summary>
            Returns a UserIdentity object that is associated with the specified URI, and authentication type.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcConnectData.GetProxy">
            <summary>
            Returns the web proxy object to use when connecting to the server.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcConnectData.SetProxy(System.Net.WebProxy)">
            <summary>
            Sets the web proxy object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcConnectData.#ctor(Technosoftware.DaAeHdaClient.OpcUserIdentity)">
            <summary>
            Initializes an instance with the specified credentials.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcConnectData.#ctor(Technosoftware.DaAeHdaClient.OpcUserIdentity,System.Net.WebProxy)">
            <summary>
            Initializes an instance with the specified credentials and web proxy.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcConnectData.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcConnectData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construct the object by de-serializing from the stream.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcConnectData.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcConvert">
            <summary>
            Defines various functions used to convert types.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcConvert.IsValid(System.Array)">
            <summary>
            Checks whether the array contains any useful data.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcConvert.IsEmpty(System.Array)">
            <summary>
            Checks whether the array contains any useful data.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcConvert.IsValid(System.String)">
            <summary>
            Checks whether the string contains any useful data.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcConvert.IsEmpty(System.String)">
            <summary>
            Checks whether the string contains any useful data.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcConvert.Clone(System.Object)">
            <summary>
            Performs a deep copy of an object if possible.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcConvert.Compare(System.Object,System.Object)">
            <summary>
            Does a deep comparison between two objects.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcConvert.ChangeType(System.Object,System.Type)">
            <summary>
            Converts an object to the specified type and returns a deep copy.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcConvert.ToString(System.Object)">
            <summary>
            Formats an item or property value as a string.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcConvert.Match(System.String,System.String,System.Boolean)">
            <summary>
            Tests if the specified string matches the specified pattern.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcFactory">
            <summary>
            The default class used to instantiate server objects.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcFactory.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcFactory.#ctor(System.Type)">
            <summary>
            Initializes the object with the type of the servers it can instantiate.
            </summary>
            <param name="systemType">The System.Type of the server object that the factory can create.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcFactory.Dispose">
            <summary>
            Maybe overridden to release unmanaged resources.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcFactory.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construct a server by de-serializing its OpcUrl from the stream.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcFactory.SystemType">
            <summary>
            The system type used to instantiate the remote server object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcFactory.ForceDa20Usage">
            <summary>
            Can be used to force OPC DA 2.0 even if OPC DA 3.0 server features are available
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcFactory.SupportedSpecifications">
            <summary>
            List of supported OPC specifications
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcFactory.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcFactory.Clone">
            <summary>
            Returns a clone of the factory.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcFactory.CreateInstance(Technosoftware.DaAeHdaClient.OpcUrl,Technosoftware.DaAeHdaClient.OpcConnectData)">
            <summary>
            Creates a new instance of the server.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcItem">
            <summary>
            A unique item identifier.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItem.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItem.#ctor(System.String)">
            <summary>
            Initializes the object with the specified item name.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItem.#ctor(System.String,System.String)">
            <summary>
            Initializes the object with the specified item path and item name.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItem.#ctor(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Initializes the object with the specified item identifier.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcItem.ItemName">
            <summary>
            The primary identifier for an item within the server namespace.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcItem.ItemPath">
            <summary>
            An secondary identifier for an item within the server namespace.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcItem.ClientHandle">
            <summary>
            A unique item identifier assigned by the client.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcItem.ServerHandle">
            <summary>
            A unique item identifier assigned by the server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcItem.Key">
            <summary>
            Create a string that can be used as index in a hash table for the item.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItem.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcItemCollection">
            <summary>
            A collection of item identifiers.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemCollection.#ctor(System.Collections.ICollection)">
            <summary>
            Initializes the object with any ItemIdentifiers contained in the collection.
            </summary>
            <param name="collection">A collection containing item ids.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcItemCollection.Item(System.Int32)">
            <summary>
            Returns the itemID at the specified index.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemCollection.Init(System.Collections.ICollection)">
            <summary>
            Initializes the object with any item ids contained in the collection.
            </summary>
            <param name="collection">A collection containing item ids.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemCollection.Clear">
            <summary>
            Removes all itemIDs in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcItemCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcItemCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemCollection.CopyTo(Technosoftware.DaAeHdaClient.OpcItem[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcItemCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcItemResult">
            <summary>
            A result code associated with a unique item identifier.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemResult.#ctor">
            <summary>
            Initialize object with default values.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemResult.#ctor(Technosoftware.DaAeHdaClient.OpcItem)">
            <summary>
            Initialize object with the specified OpcItem object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemResult.#ctor(Technosoftware.DaAeHdaClient.OpcItemResult)">
            <summary>
            Initialize object with the specified IdentifiedResult object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemResult.#ctor(System.String,Technosoftware.DaAeHdaClient.OpcResult)">
            <summary>
            Initializes the object with the specified item name and result code.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemResult.#ctor(System.String,Technosoftware.DaAeHdaClient.OpcResult,System.String)">
            <summary>
            Initialize object with the specified item name, result code and diagnostic info.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemResult.#ctor(Technosoftware.DaAeHdaClient.OpcItem,Technosoftware.DaAeHdaClient.OpcResult)">
            <summary>
            Initialize object with the specified OpcItem and result code.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemResult.#ctor(Technosoftware.DaAeHdaClient.OpcItem,Technosoftware.DaAeHdaClient.OpcResult,System.String)">
            <summary>
            Initialize object with the specified OpcItem, result code and diagnostic info.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcItemResult.Result">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcItemResult.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcItemResultCollection">
            <summary>
            A collection of identified results.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcItemResultCollection.Item(System.Int32)">
            <summary>
            Returns the IdentifiedResult at the specified index.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemResultCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemResultCollection.#ctor(System.Collections.ICollection)">
            <summary>
            Initializes the object with any IdentifiedResults contained in the collection.
            </summary>
            <param name="collection">A collection containing item ids.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemResultCollection.Init(System.Collections.ICollection)">
            <summary>
            Initializes the object with any item ids contained in the collection.
            </summary>
            <param name="collection">A collection containing item ids.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemResultCollection.Clear">
            <summary>
            Removes all itemIDs in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemResultCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcItemResultCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcItemResultCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemResultCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemResultCollection.CopyTo(Technosoftware.DaAeHdaClient.OpcItemResult[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcItemResultCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcItemResultCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcNamespace">
            <summary>
            Declares constants for common XML Schema and OPC namespaces.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcNamespace.XML_SCHEMA">
            <summary>XML Schema</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcNamespace.XML_SCHEMA_INSTANCE">
            <summary>XML Schema Instance</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcNamespace.OPC_ALARM_AND_EVENTS">
            <summary>OPC Alarmes &amp; Events</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcNamespace.OPC_COMPLEX_DATA">
            <summary>OPC Complex Data</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcNamespace.OPC_DATA_EXCHANGE">
            <summary>OPC Data Exchange</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcNamespace.OPC_DATA_ACCESS">
            <summary>OPC Data Access</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcNamespace.OPC_HISTORICAL_DATA_ACCESS">
            <summary>OPC Historical Data Access</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcNamespace.OPC_BINARY">
            <summary>OPC Binary 1.0</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcNamespace.OPC_DATA_ACCESS_XML10">
            <summary>OPC XML-DA 1.0</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcNamespace.OPC_UA10">
            <summary>OPC UA 1.0</summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcReadOnlyCollection">
            <summary>
            A read only collection class which can be used to expose arrays as properties of classes.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcReadOnlyCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcReadOnlyCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcReadOnlyCollection.#ctor(System.Array)">
             <summary>
            Creates a collection that wraps the specified array instance.
             </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcReadOnlyCollection.Array">
            <summary>
            The array instance exposed by the collection.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcReadOnlyCollection.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcReadOnlyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construct a server by de-serializing its OpcUrl from the stream.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcReadOnlyCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcReadOnlyCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcReadOnlyCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcReadOnlyCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcReadOnlyCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcReadOnlyCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcReadOnlyCollection.Clone">
            <summary>
            Creates a deep copy of the collection.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary">
            <summary>
            A read only dictionary class which can be used to expose arrays as properties of classes.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.#ctor(System.Collections.Hashtable)">
             <summary>
            Creates a collection that wraps the specified array instance.
             </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.Dictionary">
            <summary>
            The array instance exposed by the collection.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construct a server by de-serializing its OpcUrl from the stream.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.IsReadOnly">
            <summary>
            Gets a value indicating whether the IDictionary is read-only.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.GetEnumerator">
            <summary>
            Returns an IDictionaryEnumerator for the IDictionary.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.Item(System.Object)">
            <summary>
            Gets or sets the element with the specified key. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.Remove(System.Object)">
            <summary>
            Removes the element with the specified key from the IDictionary.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.Contains(System.Object)">
            <summary>
            Determines whether the IDictionary contains an element with the specified key.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.Clear">
            <summary>
            Removes all elements from the IDictionary.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.Values">
            <summary>
            Gets an ICollection containing the values in the IDictionary.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.Add(System.Object,System.Object)">
            <summary>
            Adds an element with the provided key and value to the IDictionary.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.Keys">
            <summary>
            Gets an ICollection containing the keys of the IDictionary.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.IsFixedSize">
            <summary>
            Gets a value indicating whether the IDictionary has a fixed size.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcReadOnlyDictionary.Clone">
            <summary>
            Creates a deep copy of the collection.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcResult">
            <summary>Contains an unique identifier for an OPC specific result code.</summary>
            <remarks>Most functions raises a OpcResultException if an error occur.</remarks>
            <seealso cref="T:Technosoftware.DaAeHdaClient.OpcResultException">OpcResultException Class</seealso>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcResult.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construct a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcResult.CodeType">
            <summary>
            Specifies the type identifier of the result or error code.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.CodeType.SysCode">
            <summary>
            System  specific code (result/error) returned by a system function. 
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.CodeType.OpcSysCode">
            <summary>
            System  specific code (result/error) returned by an OPC function. 
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.CodeType.DaCode">
            <summary>
            Data Access specific code (result/error) returned by an OPC function.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.CodeType.AeCode">
            <summary>
            Alarms &amp; Events specific code (result/error) returned by an OPC function.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.CodeType.XdaCode">
            <summary>
            XML-DA  specific code (result/error) returned by an OPC function.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcResult.FuncCallType">
            <summary>
            Specifies the type of function call which returned the result or error code. This enumeration values are used only by the constructor of the OpcResult object.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.FuncCallType.SysFuncCall">
            <summary>
            Identifies the code (result/error) passed to the constructor as a result of a system function.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.FuncCallType.DaFuncCall">
            <summary>
            Identifies the code (result/error) passed to the constructor as a result of an OPC Data Access function.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.FuncCallType.AeFuncCall">
            <summary>
            Identifies the code (result/error) passed to the constructor as a result of an OPC Alarms &amp; Events function.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcResult.Name">
            <summary>
            Used for result codes identified by a qualified name.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcResult.Code">
            <summary>
            Used for result codes identified by a integer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.op_Equality(Technosoftware.DaAeHdaClient.OpcResult,Technosoftware.DaAeHdaClient.OpcResult)">
            <summary>
            Returns true if the objects are equal.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.op_Inequality(Technosoftware.DaAeHdaClient.OpcResult,Technosoftware.DaAeHdaClient.OpcResult)">
            <summary>
            Returns true if the objects are not equal.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.Succeeded">
            <summary>
            Checks for the 'S_' prefix that indicates a success condition.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.Failed">
            <summary>
            Checks for the 'E_' prefix that indicates an error condition.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.Type">
            <summary>
            Retrieves the type identifier of the code passed to the constructor.   
            </summary>
            <returns>CodeType   of the HRESULT code</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.IsError">
            <summary>
            Indicates whether the result code represents an error value.  
            </summary>
            <returns>This function returns true if the associated result code is an error code.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.IsError(System.Int32)">
            <summary>
            Indicates whether the result code represents an error value.  
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.IsSuccess">
            <summary>
            Indicates whether the result code represents an error free value. 
            </summary>
            <returns>This function returns true if the associated result code is an error free value.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.IsSuccess(System.Int32)">
            <summary>
            Indicates whether the result code represents an error free value. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.IsOk">
            <summary>
            Indicates whether the result code represents an error value.
            </summary>
            <returns>This function returns true if the associated result code is 0.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.Description">
            <summary>
            Retrieves a text string with a description for the code stored in the OpcResult object.
            </summary>
            <returns>This method returns the description for the code recorded within the OpcResult object. If no description text is
            found, then a generic message "Server error 0x#dwErrorCode" is returned.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.#ctor(System.Int32,Technosoftware.DaAeHdaClient.OpcResult.FuncCallType,System.Object)">
            <summary>
            Constructs a OpcResult object.
            </summary>
            <param name="hResult">The code returned by a system function or OPC function. The code can be retrieved with the member function Code() and a description text can be retrieved with the member function <see cref="M:Technosoftware.DaAeHdaClient.OpcResult.Description" />. </param>
            <param name="eFuncType">Specifies the type of function which has returned the code. This parameter is used to create the code type which can be retrieved with the member function <see cref="M:Technosoftware.DaAeHdaClient.OpcResult.Type" />. </param>
            <param name="caller">Object which caused the error. Can be null</param>
            <returns></returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.#ctor(Technosoftware.DaAeHdaClient.OpcResult,Technosoftware.DaAeHdaClient.OpcResult.FuncCallType,System.Object)">
            <summary>
            Constructs a OpcResult object.
            </summary>
            <param name="resultId">The code returned by a   system function or OPC function. The code can be retrieved with the member function Code() and a description text can be retrieved with the member function <see cref="M:Technosoftware.DaAeHdaClient.OpcResult.Description" />. </param>
            <param name="eFuncType">Specifies   the type of function which has returned the code. This parameter is used to create the code type which can be retrieved with the member function <see cref="M:Technosoftware.DaAeHdaClient.OpcResult.Type" />. </param>
            <param name="caller">Object which   caused the error. Can be null</param>
            <returns></returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.#ctor(System.Xml.XmlQualifiedName)">
            <summary>
            Initializes a result code identified by a qualified name.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.#ctor(System.Int64)">
            <summary>
            Initializes a result code identified by an integer.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.#ctor(System.String,System.String)">
            <summary>
            Initializes a result code identified by a qualified name.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.#ctor(System.String,System.String,System.Int64)">
            <summary>
            Initializes a   result code identified by a qualified name and a specific result code.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.#ctor(Technosoftware.DaAeHdaClient.OpcResult,System.Int64)">
            <summary>
            Initializes a result code with a general result code and a specific result code.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.LOCALE_SYSTEM_DEFAULT">
            <summary>
            The constant used to selected the default locale.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.LOCALE_USER_DEFAULT">
            <summary>
            The WIN32 user default locale.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.GetSystemMessage(System.Int32)">
            <summary>
            Retrieves the system message text for the specified error.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.GetSystemMessage(System.Int32,System.Int32)">
            <summary>
            Retrieves the system message text for the specified error.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.Equals(System.Object)">
            <summary>
            Returns true if the target object is equal to the object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.ToString">
            <summary>
            Formats the result identifier as a string.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResult.GetHashCode">
            <summary>
            Returns a useful hash code for the object.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.S_OK">
            <summary>The function was successful (Return Code: 0x00000000).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.S_FALSE">
            <summary>The function completed with an error (Return Code: 0x00000001).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.E_FAIL">
            <summary>The function was unsuccessfull (Return Code: 0x80004005).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.E_NOINTERFACE">
            <summary>The interface asked for is not supported   by the server (Return Code: 0x80004002).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.E_INVALIDARG">
            <summary>The value of one or more parameters was not valid. This is generally used in place of a more specific error where it is expected that problems are unlikely or will be easy to identify (for example when there is only one parameter) (Return Code: 0x80070057).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.E_NOTIMPL">
            <summary>Function is not implemented (Return Code: 0x80004001).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.E_OUTOFMEMORY">
            <summary>Not enough memory to   complete the requested operation. This can happen any time the server needs to allocate memory to complete the requested operation (Return Code: 0x8007000E).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.E_ABORT">
            <summary>Return Code:   0x80004004</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.E_POINTER">
            <summary>NULL   pointer argument.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.CONNECT_E_NOCONNECTION">
            <summary>Cannot Unadvise - there is no existing connection (Return Code: 0x80040200).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.E_TIMEDOUT">
            <summary>The operation took too long to complete.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.E_NETWORK_ERROR">
            <summary>General network error.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.E_ACCESS_DENIED">
            <summary>The server denies access (Return Code: 0x80070005).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.CO_E_CLASSSTRING">
            <summary>Invalid class string (Return Code: 0x800401F3).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.CO_E_OBJNOTCONNECTED">
            <summary>The object application has been disconnected from the remoting system (Return Code: 0x800401FD).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.E_NOTSUPPORTED">
            <summary>
            The server does not support the requested function with the specified parameters.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcResult.Da">
            <summary>
            Results codes for Data Access.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.S_DATAQUEUEOVERFLOW">
            <summary>Indicates  that not every detected change has been returned for this item. This is an indicator that servers buffer reached its limit and had to purge out the oldest data. Only the most recent data is provided. The server should only remove the oldest data for those items that have newer samples available in the buffer. This will allow single samplings of older items to be returned to the client (Return Code: 0x00040404).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.S_UNSUPPORTEDRATE">
            <summary>The server does not support the requested data rate but will use the closest available rate (Return Code: 0x0004000D).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.S_CLAMP">
            <summary>A value passed to WRITE was accepted but the output was clamped (Return Code: 0x0004000E).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.E_INVALIDHANDLE">
            <summary>The value  of the handle is invalid.
            Note: a client  should never pass an invalid handle to a server. If this error occurs, it is due to a programming error in the client or possibly in the server (Return Code: 0xC0040001).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.E_UNKNOWN_ITEM_NAME">
            <summary>The item ID is not defined in  the server address space (on add or validate) or no longer exists in the server address space (for read or write) (Returnd Code: 0xC0040007).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.E_INVALID_ITEM_NAME">
            <summary>The item name does not conform the server's syntax.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.E_UNKNOWN_ITEM_PATH">
            <summary>The item path  is no longer available in the server address space.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.E_INVALID_ITEM_PATH">
            <summary>The item path  does not conform the server's syntax</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.E_INVALID_PID">
            <summary>The passed property ID is not valid for the item (Return Code: 0xC0040203).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.E_NO_SUBSCRIPTION">
            <summary>An invalid subscription handle was passed to the request.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.E_READONLY">
            <summary>The value is read only and may not be written to</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.E_WRITEONLY">
            <summary>The value is write-only and may not be read from or returned as part of a write response</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.E_BADTYPE">
            <summary>The server cannot  convert the data between the specified format/ requested data type and the canonical data type (Return Code: 0xC0040004).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.E_RANGE">
            <summary>The value  was out of range (Return Code: 0xC004000B).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.E_DUPLICATENAME">
            <summary>Duplicate name not allowed.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.E_INVALID_FILTER">
            <summary>The filter string  was not valid (Return Code: 0xC0040009).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.E_INVALIDCONTINUATIONPOINT">
            <summary>The continuation point is  not valid (Return Code: 0xC0040403).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.E_NO_WRITEQT">
            <summary>The server does not support writing of quality and/or timestamp.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.E_NO_ITEM_DEADBAND">
            <summary>The item deadband  has not been set for this item (Return Code: 0xC0040400).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.E_NO_ITEM_SAMPLING">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Da.E_NO_ITEM_BUFFERING">
            <summary>The server does not support buffering  of data items that are collected at a faster rate than the subscription update rate (Return Code: 0xC0040402)</summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcResult.Xda">
            <summary>
            Results codes for XML-DA.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.S_OK">
            <summary>The function was successful.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.S_CLAMP">
            <summary>A value passed to WRITE was accepted but the output was clamped.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.S_DATAQUEUEOVERFLOW">
            <summary>Indicates  that not every detected change has been returned for this item. This is an indicator that servers buffer reached its limit and had to purge out the oldest data. Only the most recent data is provided. The server should only remove the oldest data for those items that have newer samples available in the buffer. This will allow single samplings of older items to be returned to the client.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.S_UNSUPPORTEDRATE">
            <summary>The server does not support the requested data rate but will use the closest available rate.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_ACCESS_DENIED">
            <summary>The server denies access.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_BUSY">
            <summary>A refresh is currently in progress.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_FAIL">
            <summary>The function was unsuccessfull.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_INVALIDCONTINUATIONPOINT">
            <summary>The continuation point is  not valid.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_INVALIDFILTER">
            <summary>The filter string is not valid.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_INVALIDHOLDTIME">
            <summary>The hold time is too long (determined by server).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_INVALIDITEMNAME">
            <summary>The item name does not conform the server's syntax.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_INVALIDITEMPATH">
            <summary>The item path does not conform the server's syntax</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_INVALIDPID">
            <summary>The passed property ID is not valid for the item.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_NO_SUBSCRIPTION">
            <summary>An invalid subscription handle was passed to the request.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_NOT_SUPPORTED">
            <summary>The server does not support the requested function with the specified parameters.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_OUTOFMEMORY">
            <summary>Not enough memory to complete the requested operation. This can happen any time the server needs to allocate memory to complete the requested operation.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_RANGE">
            <summary>The value was out of range.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_READONLY">
            <summary>The value is read only and may not be written to</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_SERVERSTATE">
            <summary>The operation could not complete due to an abnormal server state.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_TIMEDOUT">
            <summary>The operation took too long to complete.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_UNKNOWNITEMNAME">
            <summary>The item ID is not defined in  the server address space (on add or validate) or no longer exists in the server address space (for read or write).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_UNKNOWNITEMPATH">
            <summary>The item path  is no longer available in the server address space.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_WRITEONLY">
            <summary>The value is write-only and may not be read from or returned as part of a write response</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_INVALIDARG">
            <summary>The value of one or more parameters was not valid. This is generally used in place of a more specific error where it is expected that problems are unlikely or will be easy to identify (for example when there is only one parameter).</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_BADTYPE">
            <summary>The server cannot  convert the data between the specified format/ requested data type and the canonical data type.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Xda.E_DUPPLICATE_FULLITEMNAME">
            <summary>Item whith this FullItemName was allready defined.</summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcResult.Cpx">
            <summary>
            Results codes for Complex Data.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Cpx.E_TYPE_CHANGED">
            <summary>
            The dictionary and/or type description for the item has changed.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Cpx.E_FILTER_DUPLICATE">
            <summary>
            A data filter item with the specified name already exists.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Cpx.E_FILTER_INVALID">
            <summary>
            The data filter value does not conform to the server's syntax.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Cpx.E_FILTER_ERROR">
            <summary>
            An error occurred when the filter value was applied to the source data.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Cpx.S_FILTER_NO_DATA">
            <summary>
            The item value is empty because the data filter has excluded all fields.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcResult.Hda">
            <summary>
            Results codes for Historical Data Access.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Hda.E_MAXEXCEEDED">
            <summary>The server does not support writing of quality and/or timestamp.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Hda.S_NODATA">
            <summary>There is no data within the specified parameters.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Hda.S_MOREDATA">
            <summary>There is more data satisfying the query than was returned.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Hda.E_INVALIDAGGREGATE">
            <summary>The aggregate requested is not valid.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Hda.S_CURRENTVALUE">
            <summary>The server only returns current values for the requested item attributes.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Hda.S_EXTRADATA">
            <summary>Additional data satisfying the query was found.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Hda.W_NOFILTER">
            <summary>The server does not support this filter.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Hda.E_UNKNOWNATTRID">
            <summary>The server does not support this attribute.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Hda.E_NOT_AVAIL">
            <summary>The requested aggregate is not available for the specified item.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Hda.E_INVALIDDATATYPE">
            <summary>The supplied value for the attribute is not a correct data type.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Hda.E_DATAEXISTS">
            <summary>Unable to insert - data already present.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Hda.E_INVALIDATTRID">
            <summary>The supplied attribute ID is not valid.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Hda.E_NODATAEXISTS">
            <summary>The server has no value for the specified time and item ID.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Hda.S_INSERTED">
            <summary>The requested insert occurred.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Hda.S_REPLACED">
            <summary>The requested replace occurred.</summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcResult.Ae">
            <summary>
            Results codes for Alarms and Events
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Ae.S_ALREADYACKED">
            <summary>The condition has already been acknowleged.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Ae.S_INVALIDBUFFERTIME">
            <summary>The buffer time parameter was invalid.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Ae.S_INVALIDMAXSIZE">
            <summary>The max size parameter was invalid.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Ae.S_INVALIDKEEPALIVETIME">
            <summary>The KeepAliveTime parameter was invalid.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Ae.E_INVALIDBRANCHNAME">
            <summary>The string was not recognized as an area name.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Ae.E_INVALIDTIME">
            <summary>The time does not match the latest active time.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Ae.E_BUSY">
            <summary>A refresh is currently in progress.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResult.Ae.E_NOINFO">
            <summary>Information is not available.</summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcResultException">
            <summary>Used to raise an exception associated with a specified result code.</summary>
            <remarks>
            The OpcResultException includes the OPC result code within the Result
            property.
            </remarks>
            <seealso cref="T:Technosoftware.DaAeHdaClient.OpcResult">OpcResult Structure</seealso>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcResultException.Result">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResultException.#ctor(Technosoftware.DaAeHdaClient.OpcResult)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResultException.#ctor(Technosoftware.DaAeHdaClient.OpcResult,System.String)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcResultException.#ctor(Technosoftware.DaAeHdaClient.OpcResult,System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcResultException.result_">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcServer">
            <summary>A base class for an in-process object used to access OPC servers.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServer.Server">
            <summary>
            The remote server object.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServer.opcUrl_">
            <summary>
            The OpcUrl that describes the network location of the server.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServer.Factory">
            <summary>
            The factory used to instantiate the remote server.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServer.connectData_">
            <summary>
            The last set of credentials used to connect successfully to the server.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServer.serverName_">
            <summary>
            A short name for the server.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServer.clientName_">
            <summary>
            A short name for the server assigned by the client
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServer.locale_">
            <summary>
            The default locale used by the server.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServer.supportedLocales_">
            <summary>
            The set of locales supported by the remote server.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServer.ResourceManager">
            <summary>
            The resource manager used to access localized resources.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServer.#ctor">
            <summary>
            Initializes the object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServer.#ctor(Technosoftware.DaAeHdaClient.OpcFactory,Technosoftware.DaAeHdaClient.OpcUrl)">
            <summary>
            Initializes the object with a factory and a default OpcUrl.
            </summary>
            <param name="factory">The OpcFactory used to connect to remote servers.</param>
            <param name="url">The network address of a remote server.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServer.Dispose">
            <summary>
            This must be called explicitly by clients to ensure the remote server is released.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServer.ServerDescription">
            <summary>
            Information about an OPC Server
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServer.SupportedSpecifications">
            <summary>
            List of supported OPC specifications
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServer.ForceDa20Usage">
            <summary>
            Can be used to force OPC DA 2.0 even if OPC DA 3.0 server features are available
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServer.FindBestLocale(System.String,System.String[])">
            <summary>
            Finds the best matching locale given a set of supported locales.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServer.SetUrl(Technosoftware.DaAeHdaClient.OpcUrl)">
            <summary>
            Updates the OpcUrl for the server.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServer.GetString(System.String)">
            <summary>
            Returns a localized string with the specified name.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcServer.Names">
            <summary>
            A   set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construct a server by de-serializing its OpcUrl from the stream.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServer.Clone">
            <summary>
            Returns an unconnected copy of the server with the same OpcUrl. 
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServer.ServerName">
            <summary>
            A short descriptive name for the server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServer.ClientName">
            <summary>
            A short descriptive name for the server assigned by the client.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServer.Url">
            <summary>
            The OpcUrl that describes the network location of the server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServer.Locale">
            <summary>
            The default of locale used by the remote server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServer.SupportedLocales">
            <summary>
            The set of locales supported by the remote server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServer.IsConnected">
            <summary>
            Whether the remote server is currently connected.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServer.SetClientName(System.String)">
            <summary>
            Allows the client to optionally register a client name with the server. This is included primarily for debugging purposes. The recommended behavior is that the client set his Node name and EXE name here.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServer.Connect">
            <summary>
            Establishes a physical connection to the remote server.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServer.Connect(System.String)">
            <summary>Establishes a physical connection to the remote server.</summary>
            <exception cref="T:Technosoftware.DaAeHdaClient.OpcResultException" caption="OpcResultException Class">If an OPC specific error occur this exception is raised. The Result field includes then the OPC specific code.</exception>
            <param name="url">Name of the server. The usual form is http:://xxx/yyy, e.g. http://localhost//TsOpcXSampleServer/Service.asmx.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServer.Connect(Technosoftware.DaAeHdaClient.OpcConnectData)">
            <summary>
            Establishes a physical connection to the remote server.
            </summary>
            <param name="connectData">Any protocol configuration or user authentication information.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServer.Connect(Technosoftware.DaAeHdaClient.OpcUrl,Technosoftware.DaAeHdaClient.OpcConnectData)">
            <summary>
            Establishes a physical connection to the remote server identified by a OpcUrl.
            </summary>
            <param name="url">The network address of the remote server.</param>
            <param name="connectData">Any protocol configuration or user authentication information.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServer.Disconnect">
            <summary>
            Disconnects from the server and releases all network resources.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServer.Duplicate">
            <summary>
            Creates a new instance of a server object with the same factory and url.
            </summary>
            <remarks>This method does not copy the value of any properties.</remarks>
            <returns>An unconnected duplicate instance of the server object.</returns>
        </member>
        <member name="E:Technosoftware.DaAeHdaClient.OpcServer.ServerShutdownEvent">
            <summary>
            An event to receive server shutdown notifications.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServer.GetLocale">
            <summary>
            The locale used in any error messages or results returned to the client.
            </summary>
            <returns>The locale name in the format "[languagecode]-[country/regioncode]".</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServer.SetLocale(System.String)">
            <summary>
            Sets the locale used in any error messages or results returned to the client.
            </summary>
            <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
            <returns>A locale that the server supports and is the best match for the requested locale.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServer.GetSupportedLocales">
            <summary>
            Returns the locales supported by the server
            </summary>
            <remarks>The first element in the array must be the default locale for the server.</remarks>
            <returns>An array of locales with the format "[languagecode]-[country/regioncode]".</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServer.GetErrorText(System.String,Technosoftware.DaAeHdaClient.OpcResult)">
            <summary>
            Returns the localized text for the specified result code.
            </summary>
            <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
            <param name="resultId">The result code identifier.</param>
            <returns>A message localized for the best match for the requested locale.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.AlreadyConnectedException">
            <summary>
            Raised if an operation cannot be executed because the server is not connected.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.AlreadyConnectedException.#ctor">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.AlreadyConnectedException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.AlreadyConnectedException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.AlreadyConnectedException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.NotConnectedException">
            <summary>
            Raised if an operation cannot be executed because the server is not connected.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.NotConnectedException.#ctor">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.NotConnectedException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.NotConnectedException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.NotConnectedException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.ConnectFailedException">
            <summary>
            Raised if an operation cannot be executed because the server is not reachable.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.ConnectFailedException.#ctor">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.ConnectFailedException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.ConnectFailedException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.ConnectFailedException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.AccessDeniedException">
            <summary>
            Raised if an operation cannot be executed because the server refuses access.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.AccessDeniedException.#ctor">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.AccessDeniedException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.AccessDeniedException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.AccessDeniedException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.ServerTimeoutException">
            <summary>
            Raised an remote operation by the server timed out
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.ServerTimeoutException.#ctor">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.ServerTimeoutException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.ServerTimeoutException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.ServerTimeoutException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.InvalidResponseException">
            <summary>
            Raised an remote operation by the server returned unusable or invalid results.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.InvalidResponseException.#ctor">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.InvalidResponseException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.InvalidResponseException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.InvalidResponseException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.BrowseCannotContinueException">
            <summary>
            Raised if the browse position is not valid.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.BrowseCannotContinueException.#ctor">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.BrowseCannotContinueException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.BadInternalErrorException">
            <summary>
            Raised if the browse position is not valid.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.BadInternalErrorException.#ctor">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.BadInternalErrorException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.BadInternalErrorException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.DCOMCallCancelledException">
            <summary>
            Exception that is raise when a DCOM call is cancelled due to timeout
            </summary>
            
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.DCOMCallCancelledException.#ctor">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.DCOMCallCancelledException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.DCOMCallCancelledException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcServerDescription">
            <summary>
            Information about an OPC Server
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerDescription.ServerTypes">
            <summary>
            The server types supported by this server. Standard types are defined 
            by the ServerType class.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerDescription.VendorName">
            <summary>
            <para>Name of the server software vendor.  </para> 
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerDescription.VendorNamespace">
            <summary>
            <para>Namespace for types defined by this vendor.  This may or 
            may not be the same as the VendorName. Null or empty if not used.</para> 
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerDescription.ServerName">
            <summary>
            Name of the server software. 
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerDescription.ServerNamespace">
            <summary>
            <para>Namespace for server-specific types. Null or empty if not used.</para> 
            <para>This name is typically a concatentation of the VendorNamespace 
            and the ServerName (separated by a '/' character) 
            (e.g "MyVendorNamespace/MyServer").</para>
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerDescription.HostName">
            <summary>
            <para>The HostName of the machine in which the server resides (runs).  The 
            HostName is used as part of the object path in InstanceIds of the 
            server's objects.</para> 
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerDescription.SystemName">
            <summary>
            <para>The name of the system that contains the objects accessible 
            through the server. Null or empty if the server provides access 
            to objects from more than one system. </para> 
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerDescription.ServerDetails">
            <summary>
            Detailed information about the server.
            Set to null if the ServerDescription is being 
            accessed without a client context.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcServerDetail">
            <summary>
            Detailed information about the server.
            Set to null if the ServerDescription is being accessed without a client context.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServerDetail.StartTime">
            <summary>
            The time the server was last started.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServerDetail.BuildNumber">
            <summary>
            The build number of the server.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServerDetail.Version">
            <summary>
            The version of the server.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServerDetail.VendorInfo">
            <summary>
            Vendor-specific information about the server.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcServerState">
            <summary>
            The set of possible server states.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServerState.Unknown">
            <summary>
            The server state is not known.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServerState.Operational">
            <summary>
            The server is running normally. This is the usual state for a server 
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServerState.Faulted">
            <summary>
            The server is not operational due to a fault. The server is no longer functioning. The recovery procedure from this situation is vendor specific. An error code of E_FAIL should generally be returned from any other server method.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServerState.NeedsConfiguration">
            <summary>
            The server is running but has no configuration information loaded and thus cannot function normally. Note this state implies that the server needs configuration information in order to function. Servers which do not require configuration information should not return this state.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServerState.OutOfService">
            <summary>
            The server has been temporarily suspended via some vendor specific method and is not getting or sending data. Note that Quality will be returned as OPC_QUALITY_OUT_OF_SERVICE.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServerState.Diagnostics">
            <summary>
            The server is in Diagnostics Mode. The outputs are disconnected from the real hardware but the server will otherwise behave normally. Inputs may be real or may be simulated depending on the vendor implementation. Quality will generally be returned normally.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServerState.NotConnected">
            <summary>
            The server is not operational. The outputs are disconnected from the real hardware but the server will otherwise behave normally. Inputs may be real or may be simulated depending on the vendor implementation. Quality will generally be returned normally.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServerState.Initializing">
            <summary>
            The server is not operational because it is starting up.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServerState.Aborting">
            <summary>
            The server is operational but it is shutting down and aborting all of its client contexts.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcServerState.NotOperational">
            <summary>
            The server is not operational, but the reason is not known.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcServerStatus">
            <summary>
            Contains properties that describe the current status of an OPC server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerStatus.VendorInfo">
            <summary>
            The vendor name and product name for the server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerStatus.ProductVersion">
            <summary>
            A string that contains the server software version number.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerStatus.ServerType">
            <summary>
            The server for which the status is being reported.
            The ServerType enumeration is used to identify 
            the server. If the enumeration indicates multiple 
            server types, then this is the status of the entire 
            server. For example, if the server wraps an 
            OPC DA and OPC AE server, then if this ServerType 
            indicates both, the status is for the entire server, and 
            not for an individual wrapped server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerStatus.ServerState">
            <summary>
            The current state of the server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerStatus.StatusInfo">
            <summary>
            A string that describes the current server state.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerStatus.StartTime">
            <summary>
            The time when the server started.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local   time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerStatus.CurrentTime">
            <summary>
            Th current time at the server.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local   time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerStatus.MaxReturnValues">
            <summary>
            The maximum number of values that can be returned by the server on a per item basis. 
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerStatus.LastUpdateTime">
            <summary>
            The last time the server sent an data update to the client.
            The <see cref="P:Technosoftware.DaAeHdaClient.ApplicationInstance.TimeAsUtc">ApplicationInstance.TimeAsUtc</see> property defines
            the time format (UTC or local   time).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerStatus.GroupCount">
            <summary>
            Total   number of groups being managed by the server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerStatus.BandWidth">
            <summary>
            The behavior of of this value   is server specific.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerStatus.MajorVersion">
            <summary>
            The major   version of the used server issue.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerStatus.MinorVersion">
            <summary>
            The minor   version of the used server issue.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcServerStatus.BuildNumber">
            <summary>
            The build   number of the used server issue.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcServerStatus.Clone">
            <summary>
            Creates a deep-copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcSpecification">
            <summary>
            A description of an interface version defined by an OPC specification.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcSpecification.OPC_AE_10">
            <summary>OPC Alarms&amp;Events 1.0 and OPC ALarms&amp;Events 1.1.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcSpecification.OPC_DA_10">
            <summary>OPC Data Access 1.0.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcSpecification.OPC_DA_20">
            <summary>OPC Data Access 2.0.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcSpecification.OPC_DA_30">
            <summary>OPC Data Access 3.0.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcSpecification.XML_DA_10">
            <summary>OPC XML-DA 1.0.</summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcSpecification.OPC_HDA_10">
            <summary>OPC Historical Data Access 1.0.</summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcSpecification.#ctor(System.String,System.String)">
            <summary>
            Initializes the object with the description and a GUID as a string.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcSpecification.Id">
            <summary>
            The unique identifier for the interface version. 
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcSpecification.Description">
            <summary>
            The human readable description for the interface version.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcSpecification.op_Equality(Technosoftware.DaAeHdaClient.OpcSpecification,Technosoftware.DaAeHdaClient.OpcSpecification)">
            <summary>
            Returns true if the objects are equal.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcSpecification.op_Inequality(Technosoftware.DaAeHdaClient.OpcSpecification,Technosoftware.DaAeHdaClient.OpcSpecification)">
            <summary>
            Returns true if the objects are not equal.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcSpecification.Equals(System.Object)">
            <summary>
            Determines if the object is equal to the specified value.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcSpecification.ToString">
            <summary>
            Converts the object to a string used for display.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcSpecification.GetHashCode">
            <summary>
            Returns a suitable hash code for the result.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcType">
            <summary>
            Defines constants for standard data types.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.SBYTE">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.BYTE">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.SHORT">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.USHORT">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.INT">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.UINT">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.LONG">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.ULONG">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.FLOAT">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.DOUBLE">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.DECIMAL">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.BOOLEAN">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.DATETIME">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.DURATION">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.STRING">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.ANY_TYPE">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.BINARY">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.ARRAY_SHORT">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.ARRAY_USHORT">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.ARRAY_INT">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.ARRAY_UINT">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.ARRAY_LONG">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.ARRAY_ULONG">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.ARRAY_FLOAT">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.ARRAY_DOUBLE">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.ARRAY_DECIMAL">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.ARRAY_BOOLEAN">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.ARRAY_DATETIME">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.ARRAY_STRING">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.ARRAY_ANY_TYPE">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcType.ILLEGAL_TYPE">
            <remarks/>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcType.Enumerate">
            <summary>
            Returns an array of all well-known types.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcUrl">
            <summary>
            Contains information required to connect to the OPC server.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcUrl.#ctor">
            <summary>
            Initializes an empty instance.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcUrl.#ctor(Technosoftware.DaAeHdaClient.OpcSpecification,System.String,System.String)">
            <summary>
            Initializes an instance by providing OPC specification, OPC URL scheme and an URL string.
            </summary>
            <param name="specification">A description of an interface version defined by an OPC specification.</param>
            <param name="scheme">The scheme (protocol) for the URL</param>
            <param name="url">The URL of the OPC server.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcUrl.#ctor(System.String)">
            <summary>
            Initializes an instance by parsing an URL string.
            </summary>
            <param name="url">The URL of the OPC server.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcUrl.Specification">
            <summary>
            The supported OPC specification.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcUrl.Scheme">
            <summary>
            The scheme (protocol) for the URL
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcUrl.HostName">
            <summary>
            The host name for the URL.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcUrl.Port">
            <summary>
            The port name for the URL (0 means default for protocol).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcUrl.Path">
            <summary>
            The path for the URL.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcUrl.ToString">
            <summary>
            Returns a URL string for the object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcUrl.Equals(System.Object)">
            <summary>
            Compares the object to either another URL object or a URL string.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcUrl.GetHashCode">
            <summary>
            Returns a hash code for the object.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcUrl.Clone">
            <summary>
            Returns a deep copy of the object.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcUrlScheme">
            <summary>
            Defines string constants for well-known OPC URL schemes.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcUrlScheme.HTTP">
            <summary>
            OPC over http.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcUrlScheme.AE">
            <summary>
            OPC Alarms and Events
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcUrlScheme.DA">
            <summary>
            OPC Data Access
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcUrlScheme.HDA">
            <summary>
            OPC Historical Data Access
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcUrlScheme.XI">
            <summary>
            OPC Express Interface
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcUserIdentity">
            <summary>
            The user identity to use when connecting to the OPC server.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcUserIdentity.#ctor(System.String,System.String)">
            <summary>
            Sets the username and password (extracts the domain from the username if a '\' is present).
            </summary>
            <param name="username">The user name</param>
            <param name="password">The password</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcUserIdentity.#ctor(System.String,System.String,System.String)">
            <summary>
            Sets the username and password.
            </summary>
            <param name="domainName">The windows domain name</param>
            <param name="userName">The user name</param>
            <param name="password">The password</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcUserIdentity.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets the username and password.
            </summary>
            <param name="domainName">The windows domain name</param>
            <param name="userName">The user name</param>
            <param name="password">The password</param>
            <param name="clientCertificateName">The Client Certificate name</param>
            <param name="serverCertificateName">The Server Certificate name</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcUserIdentity.Domain">
            <summary>
            The windows domain name.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcUserIdentity.Username">
            <summary>
            The user name. 
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcUserIdentity.Password">
            <summary>
            The password. 
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcUserIdentity.LicenseKey">
            <summary>
            Gets or sets a license key to use when activating the server.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcUserIdentity.ClientCertificateName">
            <summary>
            The Client Certificate name for certificate mode authentication of the server access. 
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcUserIdentity.ServerCertificateName">
            <summary>
            The Server Certificate name for certificate mode authentication of the server access.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcUserIdentity.IsDefault(Technosoftware.DaAeHdaClient.OpcUserIdentity)">
            <summary>
            Whether the identity represents an the default identity.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcUserIdentity.Equals(System.Object)">
            <summary>
            Determines if the object is equal to the specified value.
            </summary>
            <param name="target">The OpcUserIdentity to compare with</param>
            <returns>True if the objects are equal; otherwise false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcUserIdentity.ToString">
            <summary>
            Converts the object to a string used for display.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcUserIdentity.GetHashCode">
            <summary>
            Returns a suitable hash code for the result.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcUserIdentity.op_Equality(Technosoftware.DaAeHdaClient.OpcUserIdentity,Technosoftware.DaAeHdaClient.OpcUserIdentity)">
            <summary>
            Returns true if the objects are equal.
            </summary>
            <param name="a">The first OpcUserIdentity to compare.</param>
            <param name="b">The second OpcUserIdentity to compare.</param>
            <returns>True if the objects are equal; otherwise false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcUserIdentity.op_Inequality(Technosoftware.DaAeHdaClient.OpcUserIdentity,Technosoftware.DaAeHdaClient.OpcUserIdentity)">
            <summary>
            Returns true if the objects are not equal.
            </summary>
            <param name="a">The first OpcUserIdentity to compare.</param>
            <param name="b">The second OpcUserIdentity to compare.</param>
            <returns>True if the objects are not equal; otherwise false.</returns>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcWriteableCollection">
            <summary>
            A writeable collection class which can be used to expose arrays as properties of classes.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcWriteableCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableCollection.AddRange(System.Collections.ICollection)">
            <summary>
            Adds a list of values to the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableCollection.#ctor(System.Collections.ICollection,System.Type)">
            <summary>
            Creates a collection that wraps the specified array instance.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcWriteableCollection.Array">
            <summary>
            The array instance exposed by the collection.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcWriteableCollection.ElementType">
            <summary>
            The type of objects allowed in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableCollection.ValidateElement(System.Object)">
            <summary>
            Throws an exception if the element is not valid for the collection.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcWriteableCollection.INVALID_VALUE">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcWriteableCollection.INVALID_TYPE">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcWriteableCollection.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its OpcUrl from the stream.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcWriteableCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcWriteableCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcWriteableCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcWriteableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcWriteableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcWriteableCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableCollection.Clone">
            <summary>
            Creates a deep copy of the collection.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcWriteableDictionary">
            <summary>
            A read only dictionary class which can be used to expose arrays as properties of classes.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.#ctor(System.Collections.IDictionary,System.Type,System.Type)">
            <summary>
            Creates a collection that wraps the specified array instance.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.Dictionary">
            <summary>
            The dictionary instance exposed by the collection.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.KeyType">
            <summary>
            The type of objects allowed as keys in the dictionary.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.ValueType">
            <summary>
            The type of objects allowed as values in the dictionary.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.ValidateKey(System.Object,System.Type)">
            <summary>
            Throws an exception if the key is not valid for the dictionary.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.ValidateValue(System.Object,System.Type)">
            <summary>
            Throws an exception if the value is not valid for the dictionary.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.INVALID_VALUE">
            <remarks/>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.INVALID_TYPE">
            <remarks/>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construct a server by de-serializing its OpcUrl from the stream.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.IsReadOnly">
            <summary>
            Gets a value indicating whether the IDictionary is read-only.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.GetEnumerator">
            <summary>
            Returns an IDictionaryEnumerator for the IDictionary.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.Item(System.Object)">
            <summary>
            Gets or sets the element with the specified key. 
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.Remove(System.Object)">
            <summary>
            Removes the element with the specified key from the IDictionary.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.Contains(System.Object)">
            <summary>
            Determines whether the IDictionary contains an element with the specified key.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.Clear">
            <summary>
            Removes all elements from the IDictionary.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.Values">
            <summary>
            Gets an ICollection containing the values in the IDictionary.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.Add(System.Object,System.Object)">
            <summary>
            Adds an element with the provided key and value to the IDictionary.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.Keys">
            <summary>
            Gets an ICollection containing the keys of the IDictionary.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.IsFixedSize">
            <summary>
            Gets a value indicating whether the IDictionary has a fixed size.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.OpcWriteableDictionary.Clone">
            <summary>
            Creates a deep copy of the collection.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Utilities.ConfigUtils">
            <summary>
            Utility functions used by COM applications.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Utilities.ConfigUtils.GetLogFileDirectory">
            <summary>
            Gets the log file directory and ensures it is writable.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Utilities.ConfigUtils.EnableTrace(System.String,System.String)">
            <summary>
            Enable the trace.
            </summary>
            <param name="path">The path to use.</param>
            <param name="filename">The filename.</param>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Utilities.HiResClock">
            <summary>
            Produces high resolution timestamps.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Utilities.HiResClock.UtcNow">
            <summary>
            Returns the current UTC time (bugs in HALs on some computers can result in time jumping backwards).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Utilities.HiResClock.Disabled">
            <summary>
            Disables the hi-res clock (may be necessary on some machines with bugs in the HAL).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Utilities.HiResClock.#ctor">
            <summary>
            Constructs a class.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Utilities.HiResClock.s_Default">
            <summary>
            Defines a global instance.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Utilities.HiResClock.NativeMethods">
            <summary>
            Defines the native methods used by the class.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Utilities.Utils">
            <summary>
            Defines various static utility functions.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Utilities.Utils.TraceOutput">
            <summary>
            The possible trace output mechanisms.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Utilities.Utils.TraceOutput.Off">
            <summary>
            No tracing
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Utilities.Utils.TraceOutput.FileOnly">
            <summary>
            Only write to file (if specified). Default for Release mode.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Utilities.Utils.TraceOutput.DebugAndFile">
            <summary>
            Write to debug trace listeners and a file (if specified). Default for Debug mode.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Utilities.Utils.TraceOutput.StdOutAndFile">
            <summary>
            Write to trace listeners and a file (if specified).
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Utilities.Utils.TraceMasks">
            <summary>
            The masks used to filter trace messages.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Utilities.Utils.TraceMasks.None">
            <summary>
            Do not output any messages.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Utilities.Utils.TraceMasks.Error">
            <summary>
            Output error messages.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Utilities.Utils.TraceMasks.Information">
            <summary>
            Output informational messages.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Utilities.Utils.TraceMasks.StackTrace">
            <summary>
            Output stack traces.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Utilities.Utils.TraceMasks.Service">
            <summary>
            Output basic messages for service calls.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Utilities.Utils.TraceMasks.ServiceDetail">
            <summary>
            Output detailed messages for service calls.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Utilities.Utils.TraceMasks.Operation">
            <summary>
            Output basic messages for each operation.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Utilities.Utils.TraceMasks.OperationDetail">
            <summary>
            Output detailed messages for each operation.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Utilities.Utils.TraceMasks.StartStop">
            <summary>
            Output messages related to application initialization or shutdown
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Utilities.Utils.TraceMasks.ExternalSystem">
            <summary>
            Output messages related to a call to an external system.
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Utilities.Utils.TraceMasks.Security">
            <summary>
            Output messages related to security
            </summary>
        </member>
        <member name="F:Technosoftware.DaAeHdaClient.Utilities.Utils.TraceMasks.All">
            <summary>
            Output all messages.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Utilities.Utils.SetTraceOutput(Technosoftware.DaAeHdaClient.Utilities.Utils.TraceOutput)">
            <summary>
            Sets the output for tracing (thead safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Utilities.Utils.TraceMask">
            <summary>
            Gets the current trace mask settings.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Utilities.Utils.SetTraceMask(System.Int32)">
            <summary>
            Sets the mask for tracing (thead safe).
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Utilities.Utils.Tracing">
            <summary>
            Returns Tracing class instance for event attaching.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Utilities.Utils.TraceWriteLine(System.String,System.Object[])">
            <summary>
            Writes a trace statement.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Utilities.Utils.SetTraceLog(System.String,System.Boolean)">
            <summary>
            Sets the path to the log file to use for tracing.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Utilities.Utils.Trace(System.String,System.Object[])">
            <summary>
            Writes an informational message to the trace log.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Utilities.Utils.Trace(System.Exception,System.String,System.Object[])">
            <summary>
            Writes an exception/error message to the trace log.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Utilities.Utils.Trace(System.Int32,System.String,System.Object[])">
            <summary>
            Writes a general message to the trace log.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Utilities.Utils.Trace(System.Exception,System.String,System.Boolean,System.Object[])">
            <summary>
            Writes an exception/error message to the trace log.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Utilities.Utils.Trace(System.Int32,System.String,System.Boolean,System.Object[])">
            <summary>
            Writes the message to the trace log.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Utilities.Utils.ReplaceSpecialFolderNames(System.String)">
            <summary>
            Replaces a prefix enclosed in '%' with a special folder or environment variable path (e.g. %ProgramFiles%\MyCompany).
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Utilities.Utils.GetAbsoluteFilePath(System.String)">
            <summary>
            Checks if the file path is a relative path and returns an absolute path relative to the EXE location.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Utilities.Utils.GetAbsoluteFilePath(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Checks if the file path is a relative path and returns an absolute path relative to the EXE location.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Utilities.Utils.CreateFile(System.IO.FileInfo,System.String,System.Boolean)">
            <summary>
            Creates an empty file.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Utilities.Utils.Format(System.String,System.Object[])">
            <summary>
            Formats a message using the invariant locale.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Utilities.Tracing">
            <summary>
            Used as underlying tracing object for event processing.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Utilities.Tracing.#ctor">
            <summary>
            Private constructor.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Utilities.Tracing.Instance">
            <summary>
            Internal Singleton Instance getter.
            </summary>
        </member>
        <member name="E:Technosoftware.DaAeHdaClient.Utilities.Tracing.TraceEventHandler">
            <summary>
            Occurs when a trace call is made.
            </summary>
        </member>
        <member name="T:Technosoftware.DaAeHdaClient.Utilities.TraceEventArgs">
            <summary>
            The event arguments provided when a trace event is raised.
            </summary>
        </member>
        <member name="M:Technosoftware.DaAeHdaClient.Utilities.TraceEventArgs.#ctor(System.Int32,System.String,System.String,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the TraceEventArgs class.
            </summary>
            <param name="traceMask">The trace mask.</param>
            <param name="format">The format.</param>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Utilities.TraceEventArgs.TraceMask">
            <summary>
            Gets the trace mask.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Utilities.TraceEventArgs.Format">
            <summary>
            Gets the format.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Utilities.TraceEventArgs.Arguments">
            <summary>
            Gets the arguments.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Utilities.TraceEventArgs.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="P:Technosoftware.DaAeHdaClient.Utilities.TraceEventArgs.Exception">
            <summary>
            Gets the exception.
            </summary>
        </member>
    </members>
</doc>
